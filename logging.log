2021-05-28 23:59:22,831 open song 1
2021-05-28 23:59:30,931 subprocess.call(['ffmpeg', '-y', '-f', 'mp3', '-i', 'F:/SBME 3rd/2nd sem/DSP/ShazamLikeApp/Database/Songs/Group03_Song01_Full.mp3', '-acodec', 'pcm_s16le', '-vn', '-f', 'wav', '-'])
2021-05-28 23:59:31,668 label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    sample_ratio = arg(2, name=sample_ratio) ['sample_ratio']
    interp_win = arg(3, name=interp_win)     ['interp_win']
    interp_delta = arg(4, name=interp_delta) ['interp_delta']
    num_table = arg(5, name=num_table)       ['num_table']
    $0.1 = global(min: <built-in function min>) ['$0.1']
    $const0.2 = const(float, 1.0)            ['$const0.2']
    scale = call $0.1($const0.2, sample_ratio, func=$0.1, args=[Var($const0.2, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None) ['$0.1', '$const0.2', 'sample_ratio', 'scale']
    $const0.5 = const(float, 1.0)            ['$const0.5']
    time_increment = $const0.5 / sample_ratio ['$const0.5', 'sample_ratio', 'time_increment']
    $0.8 = global(int: <class 'int'>)        ['$0.8']
    $0.11 = scale * num_table                ['$0.11', 'num_table', 'scale']
    index_step = call $0.8($0.11, func=$0.8, args=[Var($0.11, interpn.py:12)], kws=(), vararg=None) ['$0.11', '$0.8', 'index_step']
    time_register = const(float, 0.0)        ['time_register']
    n = const(int, 0)                        ['n']
    frac = const(float, 0.0)                 ['frac']
    index_frac = const(float, 0.0)           ['index_frac']
    offset = const(int, 0)                   ['offset']
    eta = const(float, 0.0)                  ['eta']
    weight = const(float, 0.0)               ['weight']
    $0.21 = getattr(value=interp_win, attr=shape) ['$0.21', 'interp_win']
    $const0.22 = const(int, 0)               ['$const0.22']
    nwin = getitem(value=$0.21, index=$const0.22, fn=<built-in function getitem>) ['$0.21', '$const0.22', 'nwin']
    $0.25 = getattr(value=x, attr=shape)     ['$0.25', 'x']
    $const0.26 = const(int, 0)               ['$const0.26']
    n_orig = getitem(value=$0.25, index=$const0.26, fn=<built-in function getitem>) ['$0.25', '$const0.26', 'n_orig']
    $0.29 = getattr(value=y, attr=shape)     ['$0.29', 'y']
    $const0.30 = const(int, 0)               ['$const0.30']
    n_out = getitem(value=$0.29, index=$const0.30, fn=<built-in function getitem>) ['$0.29', '$const0.30', 'n_out']
    $0.33 = getattr(value=y, attr=shape)     ['$0.33', 'y']
    $const0.34 = const(int, 1)               ['$const0.34']
    n_channels = getitem(value=$0.33, index=$const0.34, fn=<built-in function getitem>) ['$0.33', '$const0.34', 'n_channels']
    jump 100                                 []
label 100:
    jump 104                                 []
label 104:
    $104.1 = global(range: <class 'range'>)  ['$104.1']
    $104.3 = call $104.1(n_out, func=$104.1, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None) ['$104.1', '$104.3', 'n_out']
    $104.4 = getiter(value=$104.3)           ['$104.3', '$104.4']
    $phi112.1 = $104.4                       ['$104.4', '$phi112.1']
    jump 112                                 []
label 112:
    $112.2 = iternext(value=$phi112.1)       ['$112.2', '$phi112.1']
    $112.3 = pair_first(value=$112.2)        ['$112.2', '$112.3']
    $112.4 = pair_second(value=$112.2)       ['$112.2', '$112.4']
    $phi116.1 = $112.3                       ['$112.3', '$phi116.1']
    $phi476.1 = $112.3                       ['$112.3', '$phi476.1']
    $phi476.2 = $phi112.1                    ['$phi112.1', '$phi476.2']
    branch $112.4, 116, 476                  ['$112.4']
label 116:
    t = $phi116.1                            ['$phi116.1', 't']
    $116.2 = global(int: <class 'int'>)      ['$116.2']
    n = call $116.2(time_register, func=$116.2, args=[Var(time_register, interpn.py:13)], kws=(), vararg=None) ['$116.2', 'n', 'time_register']
    $116.8 = time_register - n               ['$116.8', 'n', 'time_register']
    frac = scale * $116.8                    ['$116.8', 'frac', 'scale']
    index_frac = frac * num_table            ['frac', 'index_frac', 'num_table']
    $116.13 = global(int: <class 'int'>)     ['$116.13']
    offset = call $116.13(index_frac, func=$116.13, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None) ['$116.13', 'index_frac', 'offset']
    eta = index_frac - offset                ['eta', 'index_frac', 'offset']
    $116.19 = global(min: <built-in function min>) ['$116.19']
    $const116.21 = const(int, 1)             ['$const116.21']
    $116.22 = n + $const116.21               ['$116.22', '$const116.21', 'n']
    $116.25 = nwin - offset                  ['$116.25', 'nwin', 'offset']
    $116.27 = $116.25 // index_step          ['$116.25', '$116.27', 'index_step']
    i_max = call $116.19($116.22, $116.27, func=$116.19, args=[Var($116.22, interpn.py:42), Var($116.27, interpn.py:42)], kws=(), vararg=None) ['$116.19', '$116.22', '$116.27', 'i_max']
    jump 184                                 []
label 184:
    jump 186                                 []
label 186:
    $186.1 = global(range: <class 'range'>)  ['$186.1']
    $186.3 = call $186.1(i_max, func=$186.1, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None) ['$186.1', '$186.3', 'i_max']
    $186.4 = getiter(value=$186.3)           ['$186.3', '$186.4']
    $phi194.1 = $186.4                       ['$186.4', '$phi194.1']
    jump 194                                 []
label 194:
    $194.2 = iternext(value=$phi194.1)       ['$194.2', '$phi194.1']
    $194.3 = pair_first(value=$194.2)        ['$194.2', '$194.3']
    $194.4 = pair_second(value=$194.2)       ['$194.2', '$194.4']
    $phi196.1 = $194.3                       ['$194.3', '$phi196.1']
    $phi290.1 = $194.3                       ['$194.3', '$phi290.1']
    $phi290.2 = $phi194.1                    ['$phi194.1', '$phi290.2']
    branch $194.4, 196, 290                  ['$194.4']
label 196:
    i = $phi196.1                            ['$phi196.1', 'i']
    $196.6 = i * index_step                  ['$196.6', 'i', 'index_step']
    $196.7 = offset + $196.6                 ['$196.6', '$196.7', 'offset']
    $196.8 = getitem(value=interp_win, index=$196.7, fn=<built-in function getitem>) ['$196.7', '$196.8', 'interp_win']
    $196.14 = i * index_step                 ['$196.14', 'i', 'index_step']
    $196.15 = offset + $196.14               ['$196.14', '$196.15', 'offset']
    $196.16 = getitem(value=interp_delta, index=$196.15, fn=<built-in function getitem>) ['$196.15', '$196.16', 'interp_delta']
    $196.17 = eta * $196.16                  ['$196.16', '$196.17', 'eta']
    weight = $196.8 + $196.17                ['$196.17', '$196.8', 'weight']
    jump 234                                 []
label 234:
    jump 236                                 []
label 236:
    $236.1 = global(range: <class 'range'>)  ['$236.1']
    $236.3 = call $236.1(n_channels, func=$236.1, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None) ['$236.1', '$236.3', 'n_channels']
    $236.4 = getiter(value=$236.3)           ['$236.3', '$236.4']
    $phi244.1 = $236.4                       ['$236.4', '$phi244.1']
    jump 244                                 []
label 244:
    $244.2 = iternext(value=$phi244.1)       ['$244.2', '$phi244.1']
    $244.3 = pair_first(value=$244.2)        ['$244.2', '$244.3']
    $244.4 = pair_second(value=$244.2)       ['$244.2', '$244.4']
    $phi246.1 = $244.3                       ['$244.3', '$phi246.1']
    $phi286.1 = $244.3                       ['$244.3', '$phi286.1']
    $phi286.2 = $phi244.1                    ['$phi244.1', '$phi286.2']
    branch $244.4, 246, 286                  ['$244.4']
label 246:
    j = $phi246.1                            ['$phi246.1', 'j']
    $246.5 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)]) ['$246.5', 'j', 't']
    $246.8 = getitem(value=y, index=$246.5, fn=<built-in function getitem>) ['$246.5', '$246.8', 'y']
    $246.13 = n - i                          ['$246.13', 'i', 'n']
    $246.15 = build_tuple(items=[Var($246.13, interpn.py:47), Var(j, interpn.py:46)]) ['$246.13', '$246.15', 'j']
    $246.16 = getitem(value=x, index=$246.15, fn=<built-in function getitem>) ['$246.15', '$246.16', 'x']
    $246.17 = weight * $246.16               ['$246.16', '$246.17', 'weight']
    $246.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$246.8, rhs=$246.17, static_lhs=Undefined, static_rhs=Undefined) ['$246.17', '$246.18', '$246.8']
    y[$246.5] = $246.18                      ['$246.18', '$246.5', 'y']
    jump 244                                 []
label 286:
    jump 288                                 []
label 288:
    jump 194                                 []
label 290:
    jump 292                                 []
label 292:
    $292.3 = scale - frac                    ['$292.3', 'frac', 'scale']
    frac = $292.3                            ['$292.3', 'frac']
    index_frac = frac * num_table            ['frac', 'index_frac', 'num_table']
    $292.7 = global(int: <class 'int'>)      ['$292.7']
    offset = call $292.7(index_frac, func=$292.7, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None) ['$292.7', 'index_frac', 'offset']
    eta = index_frac - offset                ['eta', 'index_frac', 'offset']
    $292.13 = global(min: <built-in function min>) ['$292.13']
    $292.16 = n_orig - n                     ['$292.16', 'n', 'n_orig']
    $const292.17 = const(int, 1)             ['$const292.17']
    $292.18 = $292.16 - $const292.17         ['$292.16', '$292.18', '$const292.17']
    $292.21 = nwin - offset                  ['$292.21', 'nwin', 'offset']
    $292.23 = $292.21 // index_step          ['$292.21', '$292.23', 'index_step']
    k_max = call $292.13($292.18, $292.23, func=$292.13, args=[Var($292.18, interpn.py:60), Var($292.23, interpn.py:60)], kws=(), vararg=None) ['$292.13', '$292.18', '$292.23', 'k_max']
    jump 350                                 []
label 350:
    jump 352                                 []
label 352:
    $352.1 = global(range: <class 'range'>)  ['$352.1']
    $352.3 = call $352.1(k_max, func=$352.1, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None) ['$352.1', '$352.3', 'k_max']
    $352.4 = getiter(value=$352.3)           ['$352.3', '$352.4']
    $phi360.1 = $352.4                       ['$352.4', '$phi360.1']
    jump 360                                 []
label 360:
    $360.2 = iternext(value=$phi360.1)       ['$360.2', '$phi360.1']
    $360.3 = pair_first(value=$360.2)        ['$360.2', '$360.3']
    $360.4 = pair_second(value=$360.2)       ['$360.2', '$360.4']
    $phi362.1 = $360.3                       ['$360.3', '$phi362.1']
    $phi464.1 = $360.3                       ['$360.3', '$phi464.1']
    $phi464.2 = $phi360.1                    ['$phi360.1', '$phi464.2']
    branch $360.4, 362, 464                  ['$360.4']
label 362:
    k = $phi362.1                            ['$phi362.1', 'k']
    $362.6 = k * index_step                  ['$362.6', 'index_step', 'k']
    $362.7 = offset + $362.6                 ['$362.6', '$362.7', 'offset']
    $362.8 = getitem(value=interp_win, index=$362.7, fn=<built-in function getitem>) ['$362.7', '$362.8', 'interp_win']
    $362.14 = k * index_step                 ['$362.14', 'index_step', 'k']
    $362.15 = offset + $362.14               ['$362.14', '$362.15', 'offset']
    $362.16 = getitem(value=interp_delta, index=$362.15, fn=<built-in function getitem>) ['$362.15', '$362.16', 'interp_delta']
    $362.17 = eta * $362.16                  ['$362.16', '$362.17', 'eta']
    weight = $362.8 + $362.17                ['$362.17', '$362.8', 'weight']
    jump 400                                 []
label 400:
    jump 402                                 []
label 402:
    $402.1 = global(range: <class 'range'>)  ['$402.1']
    $402.3 = call $402.1(n_channels, func=$402.1, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None) ['$402.1', '$402.3', 'n_channels']
    $402.4 = getiter(value=$402.3)           ['$402.3', '$402.4']
    $phi410.1 = $402.4                       ['$402.4', '$phi410.1']
    jump 410                                 []
label 410:
    $410.2 = iternext(value=$phi410.1)       ['$410.2', '$phi410.1']
    $410.3 = pair_first(value=$410.2)        ['$410.2', '$410.3']
    $410.4 = pair_second(value=$410.2)       ['$410.2', '$410.4']
    $phi412.1 = $410.3                       ['$410.3', '$phi412.1']
    $phi458.1 = $410.3                       ['$410.3', '$phi458.1']
    $phi458.2 = $phi410.1                    ['$phi410.1', '$phi458.2']
    branch $410.4, 412, 458                  ['$410.4']
label 412:
    j = $phi412.1                            ['$phi412.1', 'j']
    $412.5 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)]) ['$412.5', 'j', 't']
    $412.8 = getitem(value=y, index=$412.5, fn=<built-in function getitem>) ['$412.5', '$412.8', 'y']
    $412.13 = n + k                          ['$412.13', 'k', 'n']
    $const412.14 = const(int, 1)             ['$const412.14']
    $412.15 = $412.13 + $const412.14         ['$412.13', '$412.15', '$const412.14']
    $412.17 = build_tuple(items=[Var($412.15, interpn.py:64), Var(j, interpn.py:46)]) ['$412.15', '$412.17', 'j']
    $412.18 = getitem(value=x, index=$412.17, fn=<built-in function getitem>) ['$412.17', '$412.18', 'x']
    $412.19 = weight * $412.18               ['$412.18', '$412.19', 'weight']
    $412.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$412.8, rhs=$412.19, static_lhs=Undefined, static_rhs=Undefined) ['$412.19', '$412.20', '$412.8']
    y[$412.5] = $412.20                      ['$412.20', '$412.5', 'y']
    jump 410                                 []
label 458:
    jump 460                                 []
label 460:
    jump 360                                 []
label 464:
    jump 466                                 []
label 466:
    $466.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined) ['$466.3', 'time_increment', 'time_register']
    time_register = $466.3                   ['$466.3', 'time_register']
    jump 112                                 []
label 476:
    jump 478                                 []
label 478:
    $const478.1 = const(NoneType, None)      ['$const478.1']
    $478.2 = cast(value=$const478.1)         ['$478.2', '$const478.1']
    return $478.2                            ['$478.2']

2021-05-28 23:59:31,710 ==== SSA block analysis pass on 0
2021-05-28 23:59:31,710 Running <numba.core.ssa._GatherDefsHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,710 on stmt: x = arg(0, name=x)
2021-05-28 23:59:31,710 on stmt: y = arg(1, name=y)
2021-05-28 23:59:31,710 on stmt: sample_ratio = arg(2, name=sample_ratio)
2021-05-28 23:59:31,710 on stmt: interp_win = arg(3, name=interp_win)
2021-05-28 23:59:31,710 on stmt: interp_delta = arg(4, name=interp_delta)
2021-05-28 23:59:31,711 on stmt: num_table = arg(5, name=num_table)
2021-05-28 23:59:31,711 on stmt: $0.1 = global(min: <built-in function min>)
2021-05-28 23:59:31,711 on stmt: $const0.2 = const(float, 1.0)
2021-05-28 23:59:31,711 on stmt: scale = call $0.1($const0.2, sample_ratio, func=$0.1, args=[Var($const0.2, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None)
2021-05-28 23:59:31,711 on stmt: $const0.5 = const(float, 1.0)
2021-05-28 23:59:31,711 on stmt: time_increment = $const0.5 / sample_ratio
2021-05-28 23:59:31,711 on stmt: $0.8 = global(int: <class 'int'>)
2021-05-28 23:59:31,711 on stmt: $0.11 = scale * num_table
2021-05-28 23:59:31,711 on stmt: index_step = call $0.8($0.11, func=$0.8, args=[Var($0.11, interpn.py:12)], kws=(), vararg=None)
2021-05-28 23:59:31,711 on stmt: time_register = const(float, 0.0)
2021-05-28 23:59:31,711 on stmt: n = const(int, 0)
2021-05-28 23:59:31,711 on stmt: frac = const(float, 0.0)
2021-05-28 23:59:31,711 on stmt: index_frac = const(float, 0.0)
2021-05-28 23:59:31,711 on stmt: offset = const(int, 0)
2021-05-28 23:59:31,711 on stmt: eta = const(float, 0.0)
2021-05-28 23:59:31,711 on stmt: weight = const(float, 0.0)
2021-05-28 23:59:31,711 on stmt: $0.21 = getattr(value=interp_win, attr=shape)
2021-05-28 23:59:31,711 on stmt: $const0.22 = const(int, 0)
2021-05-28 23:59:31,711 on stmt: nwin = static_getitem(value=$0.21, index=0, index_var=$const0.22, fn=<built-in function getitem>)
2021-05-28 23:59:31,711 on stmt: $0.25 = getattr(value=x, attr=shape)
2021-05-28 23:59:31,711 on stmt: $const0.26 = const(int, 0)
2021-05-28 23:59:31,711 on stmt: n_orig = static_getitem(value=$0.25, index=0, index_var=$const0.26, fn=<built-in function getitem>)
2021-05-28 23:59:31,711 on stmt: $0.29 = getattr(value=y, attr=shape)
2021-05-28 23:59:31,712 on stmt: $const0.30 = const(int, 0)
2021-05-28 23:59:31,712 on stmt: n_out = static_getitem(value=$0.29, index=0, index_var=$const0.30, fn=<built-in function getitem>)
2021-05-28 23:59:31,712 on stmt: $0.33 = getattr(value=y, attr=shape)
2021-05-28 23:59:31,712 on stmt: $const0.34 = const(int, 1)
2021-05-28 23:59:31,712 on stmt: n_channels = static_getitem(value=$0.33, index=1, index_var=$const0.34, fn=<built-in function getitem>)
2021-05-28 23:59:31,712 on stmt: jump 100
2021-05-28 23:59:31,712 ==== SSA block analysis pass on 100
2021-05-28 23:59:31,712 Running <numba.core.ssa._GatherDefsHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,712 on stmt: jump 104
2021-05-28 23:59:31,712 ==== SSA block analysis pass on 104
2021-05-28 23:59:31,712 Running <numba.core.ssa._GatherDefsHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,712 on stmt: $104.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,712 on stmt: $104.3 = call $104.1(n_out, func=$104.1, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None)
2021-05-28 23:59:31,712 on stmt: $104.4 = getiter(value=$104.3)
2021-05-28 23:59:31,712 on stmt: $phi112.1 = $104.4
2021-05-28 23:59:31,712 on stmt: jump 112
2021-05-28 23:59:31,713 ==== SSA block analysis pass on 112
2021-05-28 23:59:31,713 Running <numba.core.ssa._GatherDefsHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,713 on stmt: $112.2 = iternext(value=$phi112.1)
2021-05-28 23:59:31,713 on stmt: $112.3 = pair_first(value=$112.2)
2021-05-28 23:59:31,713 on stmt: $112.4 = pair_second(value=$112.2)
2021-05-28 23:59:31,713 on stmt: $phi116.1 = $112.3
2021-05-28 23:59:31,713 on stmt: $phi476.1 = $112.3
2021-05-28 23:59:31,713 on stmt: $phi476.2 = $phi112.1
2021-05-28 23:59:31,713 on stmt: branch $112.4, 116, 476
2021-05-28 23:59:31,713 ==== SSA block analysis pass on 116
2021-05-28 23:59:31,713 Running <numba.core.ssa._GatherDefsHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,713 on stmt: t = $phi116.1
2021-05-28 23:59:31,713 on stmt: $116.2 = global(int: <class 'int'>)
2021-05-28 23:59:31,713 on stmt: n = call $116.2(time_register, func=$116.2, args=[Var(time_register, interpn.py:13)], kws=(), vararg=None)
2021-05-28 23:59:31,713 on stmt: $116.8 = time_register - n
2021-05-28 23:59:31,713 on stmt: frac = scale * $116.8
2021-05-28 23:59:31,713 on stmt: index_frac = frac * num_table
2021-05-28 23:59:31,713 on stmt: $116.13 = global(int: <class 'int'>)
2021-05-28 23:59:31,713 on stmt: offset = call $116.13(index_frac, func=$116.13, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None)
2021-05-28 23:59:31,713 on stmt: eta = index_frac - offset
2021-05-28 23:59:31,714 on stmt: $116.19 = global(min: <built-in function min>)
2021-05-28 23:59:31,714 on stmt: $const116.21 = const(int, 1)
2021-05-28 23:59:31,714 on stmt: $116.22 = n + $const116.21
2021-05-28 23:59:31,714 on stmt: $116.25 = nwin - offset
2021-05-28 23:59:31,714 on stmt: $116.27 = $116.25 // index_step
2021-05-28 23:59:31,714 on stmt: i_max = call $116.19($116.22, $116.27, func=$116.19, args=[Var($116.22, interpn.py:42), Var($116.27, interpn.py:42)], kws=(), vararg=None)
2021-05-28 23:59:31,714 on stmt: jump 184
2021-05-28 23:59:31,714 ==== SSA block analysis pass on 184
2021-05-28 23:59:31,714 Running <numba.core.ssa._GatherDefsHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,714 on stmt: jump 186
2021-05-28 23:59:31,714 ==== SSA block analysis pass on 186
2021-05-28 23:59:31,714 Running <numba.core.ssa._GatherDefsHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,714 on stmt: $186.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,714 on stmt: $186.3 = call $186.1(i_max, func=$186.1, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None)
2021-05-28 23:59:31,714 on stmt: $186.4 = getiter(value=$186.3)
2021-05-28 23:59:31,714 on stmt: $phi194.1 = $186.4
2021-05-28 23:59:31,714 on stmt: jump 194
2021-05-28 23:59:31,714 ==== SSA block analysis pass on 194
2021-05-28 23:59:31,714 Running <numba.core.ssa._GatherDefsHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,714 on stmt: $194.2 = iternext(value=$phi194.1)
2021-05-28 23:59:31,714 on stmt: $194.3 = pair_first(value=$194.2)
2021-05-28 23:59:31,714 on stmt: $194.4 = pair_second(value=$194.2)
2021-05-28 23:59:31,714 on stmt: $phi196.1 = $194.3
2021-05-28 23:59:31,714 on stmt: $phi290.1 = $194.3
2021-05-28 23:59:31,714 on stmt: $phi290.2 = $phi194.1
2021-05-28 23:59:31,715 on stmt: branch $194.4, 196, 290
2021-05-28 23:59:31,715 ==== SSA block analysis pass on 196
2021-05-28 23:59:31,715 Running <numba.core.ssa._GatherDefsHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,715 on stmt: i = $phi196.1
2021-05-28 23:59:31,715 on stmt: $196.6 = i * index_step
2021-05-28 23:59:31,715 on stmt: $196.7 = offset + $196.6
2021-05-28 23:59:31,715 on stmt: $196.8 = getitem(value=interp_win, index=$196.7, fn=<built-in function getitem>)
2021-05-28 23:59:31,715 on stmt: $196.14 = i * index_step
2021-05-28 23:59:31,715 on stmt: $196.15 = offset + $196.14
2021-05-28 23:59:31,715 on stmt: $196.16 = getitem(value=interp_delta, index=$196.15, fn=<built-in function getitem>)
2021-05-28 23:59:31,715 on stmt: $196.17 = eta * $196.16
2021-05-28 23:59:31,715 on stmt: weight = $196.8 + $196.17
2021-05-28 23:59:31,715 on stmt: jump 234
2021-05-28 23:59:31,715 ==== SSA block analysis pass on 234
2021-05-28 23:59:31,715 Running <numba.core.ssa._GatherDefsHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,715 on stmt: jump 236
2021-05-28 23:59:31,715 ==== SSA block analysis pass on 236
2021-05-28 23:59:31,715 Running <numba.core.ssa._GatherDefsHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,715 on stmt: $236.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,715 on stmt: $236.3 = call $236.1(n_channels, func=$236.1, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-28 23:59:31,715 on stmt: $236.4 = getiter(value=$236.3)
2021-05-28 23:59:31,715 on stmt: $phi244.1 = $236.4
2021-05-28 23:59:31,715 on stmt: jump 244
2021-05-28 23:59:31,716 ==== SSA block analysis pass on 244
2021-05-28 23:59:31,716 Running <numba.core.ssa._GatherDefsHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,716 on stmt: $244.2 = iternext(value=$phi244.1)
2021-05-28 23:59:31,716 on stmt: $244.3 = pair_first(value=$244.2)
2021-05-28 23:59:31,716 on stmt: $244.4 = pair_second(value=$244.2)
2021-05-28 23:59:31,716 on stmt: $phi246.1 = $244.3
2021-05-28 23:59:31,716 on stmt: $phi286.1 = $244.3
2021-05-28 23:59:31,716 on stmt: $phi286.2 = $phi244.1
2021-05-28 23:59:31,716 on stmt: branch $244.4, 246, 286
2021-05-28 23:59:31,716 ==== SSA block analysis pass on 246
2021-05-28 23:59:31,716 Running <numba.core.ssa._GatherDefsHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,716 on stmt: j = $phi246.1
2021-05-28 23:59:31,716 on stmt: $246.5 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-28 23:59:31,716 on stmt: $246.8 = getitem(value=y, index=$246.5, fn=<built-in function getitem>)
2021-05-28 23:59:31,716 on stmt: $246.13 = n - i
2021-05-28 23:59:31,716 on stmt: $246.15 = build_tuple(items=[Var($246.13, interpn.py:47), Var(j, interpn.py:46)])
2021-05-28 23:59:31,716 on stmt: $246.16 = getitem(value=x, index=$246.15, fn=<built-in function getitem>)
2021-05-28 23:59:31,716 on stmt: $246.17 = weight * $246.16
2021-05-28 23:59:31,716 on stmt: $246.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$246.8, rhs=$246.17, static_lhs=Undefined, static_rhs=Undefined)
2021-05-28 23:59:31,716 on stmt: y[$246.5] = $246.18
2021-05-28 23:59:31,717 on stmt: jump 244
2021-05-28 23:59:31,717 ==== SSA block analysis pass on 286
2021-05-28 23:59:31,717 Running <numba.core.ssa._GatherDefsHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,717 on stmt: jump 288
2021-05-28 23:59:31,717 ==== SSA block analysis pass on 288
2021-05-28 23:59:31,717 Running <numba.core.ssa._GatherDefsHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,717 on stmt: jump 194
2021-05-28 23:59:31,717 ==== SSA block analysis pass on 290
2021-05-28 23:59:31,717 Running <numba.core.ssa._GatherDefsHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,717 on stmt: jump 292
2021-05-28 23:59:31,717 ==== SSA block analysis pass on 292
2021-05-28 23:59:31,717 Running <numba.core.ssa._GatherDefsHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,717 on stmt: $292.3 = scale - frac
2021-05-28 23:59:31,717 on stmt: frac = $292.3
2021-05-28 23:59:31,717 on stmt: index_frac = frac * num_table
2021-05-28 23:59:31,717 on stmt: $292.7 = global(int: <class 'int'>)
2021-05-28 23:59:31,717 on stmt: offset = call $292.7(index_frac, func=$292.7, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None)
2021-05-28 23:59:31,717 on stmt: eta = index_frac - offset
2021-05-28 23:59:31,717 on stmt: $292.13 = global(min: <built-in function min>)
2021-05-28 23:59:31,718 on stmt: $292.16 = n_orig - n
2021-05-28 23:59:31,718 on stmt: $const292.17 = const(int, 1)
2021-05-28 23:59:31,718 on stmt: $292.18 = $292.16 - $const292.17
2021-05-28 23:59:31,718 on stmt: $292.21 = nwin - offset
2021-05-28 23:59:31,718 on stmt: $292.23 = $292.21 // index_step
2021-05-28 23:59:31,718 on stmt: k_max = call $292.13($292.18, $292.23, func=$292.13, args=[Var($292.18, interpn.py:60), Var($292.23, interpn.py:60)], kws=(), vararg=None)
2021-05-28 23:59:31,718 on stmt: jump 350
2021-05-28 23:59:31,718 ==== SSA block analysis pass on 350
2021-05-28 23:59:31,718 Running <numba.core.ssa._GatherDefsHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,718 on stmt: jump 352
2021-05-28 23:59:31,718 ==== SSA block analysis pass on 352
2021-05-28 23:59:31,718 Running <numba.core.ssa._GatherDefsHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,718 on stmt: $352.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,718 on stmt: $352.3 = call $352.1(k_max, func=$352.1, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None)
2021-05-28 23:59:31,719 on stmt: $352.4 = getiter(value=$352.3)
2021-05-28 23:59:31,719 on stmt: $phi360.1 = $352.4
2021-05-28 23:59:31,719 on stmt: jump 360
2021-05-28 23:59:31,719 ==== SSA block analysis pass on 360
2021-05-28 23:59:31,719 Running <numba.core.ssa._GatherDefsHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,719 on stmt: $360.2 = iternext(value=$phi360.1)
2021-05-28 23:59:31,719 on stmt: $360.3 = pair_first(value=$360.2)
2021-05-28 23:59:31,719 on stmt: $360.4 = pair_second(value=$360.2)
2021-05-28 23:59:31,719 on stmt: $phi362.1 = $360.3
2021-05-28 23:59:31,719 on stmt: $phi464.1 = $360.3
2021-05-28 23:59:31,719 on stmt: $phi464.2 = $phi360.1
2021-05-28 23:59:31,719 on stmt: branch $360.4, 362, 464
2021-05-28 23:59:31,719 ==== SSA block analysis pass on 362
2021-05-28 23:59:31,719 Running <numba.core.ssa._GatherDefsHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,719 on stmt: k = $phi362.1
2021-05-28 23:59:31,719 on stmt: $362.6 = k * index_step
2021-05-28 23:59:31,719 on stmt: $362.7 = offset + $362.6
2021-05-28 23:59:31,719 on stmt: $362.8 = getitem(value=interp_win, index=$362.7, fn=<built-in function getitem>)
2021-05-28 23:59:31,719 on stmt: $362.14 = k * index_step
2021-05-28 23:59:31,719 on stmt: $362.15 = offset + $362.14
2021-05-28 23:59:31,719 on stmt: $362.16 = getitem(value=interp_delta, index=$362.15, fn=<built-in function getitem>)
2021-05-28 23:59:31,719 on stmt: $362.17 = eta * $362.16
2021-05-28 23:59:31,719 on stmt: weight = $362.8 + $362.17
2021-05-28 23:59:31,719 on stmt: jump 400
2021-05-28 23:59:31,720 ==== SSA block analysis pass on 400
2021-05-28 23:59:31,720 Running <numba.core.ssa._GatherDefsHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,720 on stmt: jump 402
2021-05-28 23:59:31,720 ==== SSA block analysis pass on 402
2021-05-28 23:59:31,720 Running <numba.core.ssa._GatherDefsHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,720 on stmt: $402.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,720 on stmt: $402.3 = call $402.1(n_channels, func=$402.1, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-28 23:59:31,720 on stmt: $402.4 = getiter(value=$402.3)
2021-05-28 23:59:31,720 on stmt: $phi410.1 = $402.4
2021-05-28 23:59:31,720 on stmt: jump 410
2021-05-28 23:59:31,720 ==== SSA block analysis pass on 410
2021-05-28 23:59:31,720 Running <numba.core.ssa._GatherDefsHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,720 on stmt: $410.2 = iternext(value=$phi410.1)
2021-05-28 23:59:31,720 on stmt: $410.3 = pair_first(value=$410.2)
2021-05-28 23:59:31,720 on stmt: $410.4 = pair_second(value=$410.2)
2021-05-28 23:59:31,720 on stmt: $phi412.1 = $410.3
2021-05-28 23:59:31,720 on stmt: $phi458.1 = $410.3
2021-05-28 23:59:31,720 on stmt: $phi458.2 = $phi410.1
2021-05-28 23:59:31,720 on stmt: branch $410.4, 412, 458
2021-05-28 23:59:31,720 ==== SSA block analysis pass on 412
2021-05-28 23:59:31,720 Running <numba.core.ssa._GatherDefsHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,720 on stmt: j = $phi412.1
2021-05-28 23:59:31,720 on stmt: $412.5 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-28 23:59:31,720 on stmt: $412.8 = getitem(value=y, index=$412.5, fn=<built-in function getitem>)
2021-05-28 23:59:31,720 on stmt: $412.13 = n + k
2021-05-28 23:59:31,721 on stmt: $const412.14 = const(int, 1)
2021-05-28 23:59:31,721 on stmt: $412.15 = $412.13 + $const412.14
2021-05-28 23:59:31,721 on stmt: $412.17 = build_tuple(items=[Var($412.15, interpn.py:64), Var(j, interpn.py:46)])
2021-05-28 23:59:31,721 on stmt: $412.18 = getitem(value=x, index=$412.17, fn=<built-in function getitem>)
2021-05-28 23:59:31,721 on stmt: $412.19 = weight * $412.18
2021-05-28 23:59:31,721 on stmt: $412.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$412.8, rhs=$412.19, static_lhs=Undefined, static_rhs=Undefined)
2021-05-28 23:59:31,721 on stmt: y[$412.5] = $412.20
2021-05-28 23:59:31,721 on stmt: jump 410
2021-05-28 23:59:31,721 ==== SSA block analysis pass on 458
2021-05-28 23:59:31,721 Running <numba.core.ssa._GatherDefsHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,721 on stmt: jump 460
2021-05-28 23:59:31,721 ==== SSA block analysis pass on 460
2021-05-28 23:59:31,721 Running <numba.core.ssa._GatherDefsHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,721 on stmt: jump 360
2021-05-28 23:59:31,721 ==== SSA block analysis pass on 464
2021-05-28 23:59:31,721 Running <numba.core.ssa._GatherDefsHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,721 on stmt: jump 466
2021-05-28 23:59:31,721 ==== SSA block analysis pass on 466
2021-05-28 23:59:31,721 Running <numba.core.ssa._GatherDefsHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,721 on stmt: $466.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
2021-05-28 23:59:31,721 on stmt: time_register = $466.3
2021-05-28 23:59:31,721 on stmt: jump 112
2021-05-28 23:59:31,722 ==== SSA block analysis pass on 476
2021-05-28 23:59:31,722 Running <numba.core.ssa._GatherDefsHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,722 on stmt: jump 478
2021-05-28 23:59:31,722 ==== SSA block analysis pass on 478
2021-05-28 23:59:31,722 Running <numba.core.ssa._GatherDefsHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,722 on stmt: $const478.1 = const(NoneType, None)
2021-05-28 23:59:31,722 on stmt: $478.2 = cast(value=$const478.1)
2021-05-28 23:59:31,722 on stmt: return $478.2
2021-05-28 23:59:31,723 defs defaultdict(<class 'list'>,
            {'$0.1': [<numba.core.ir.Assign object at 0x00000168E8883208>],
             '$0.11': [<numba.core.ir.Assign object at 0x00000168E8883B38>],
             '$0.21': [<numba.core.ir.Assign object at 0x00000168E8889940>],
             '$0.25': [<numba.core.ir.Assign object at 0x00000168E8889D30>],
             '$0.29': [<numba.core.ir.Assign object at 0x00000168E888E160>],
             '$0.33': [<numba.core.ir.Assign object at 0x00000168E888E550>],
             '$0.8': [<numba.core.ir.Assign object at 0x00000168E8883908>],
             '$104.1': [<numba.core.ir.Assign object at 0x00000168E8889630>],
             '$104.3': [<numba.core.ir.Assign object at 0x00000168E8873CF8>],
             '$104.4': [<numba.core.ir.Assign object at 0x00000168E888E470>],
             '$112.2': [<numba.core.ir.Assign object at 0x00000168E888E978>],
             '$112.3': [<numba.core.ir.Assign object at 0x00000168E888EA20>],
             '$112.4': [<numba.core.ir.Assign object at 0x00000168E888EAC8>],
             '$116.13': [<numba.core.ir.Assign object at 0x00000168E8892828>],
             '$116.19': [<numba.core.ir.Assign object at 0x00000168E8892DA0>],
             '$116.2': [<numba.core.ir.Assign object at 0x00000168E888EE48>],
             '$116.22': [<numba.core.ir.Assign object at 0x00000168E8898048>],
             '$116.25': [<numba.core.ir.Assign object at 0x00000168E8898278>],
             '$116.27': [<numba.core.ir.Assign object at 0x00000168E8898400>],
             '$116.8': [<numba.core.ir.Assign object at 0x00000168E8892358>],
             '$186.1': [<numba.core.ir.Assign object at 0x00000168E8892A20>],
             '$186.3': [<numba.core.ir.Assign object at 0x00000168E888ECC0>],
             '$186.4': [<numba.core.ir.Assign object at 0x00000168E88980F0>],
             '$194.2': [<numba.core.ir.Assign object at 0x00000168E88986D8>],
             '$194.3': [<numba.core.ir.Assign object at 0x00000168E8898780>],
             '$194.4': [<numba.core.ir.Assign object at 0x00000168E8898828>],
             '$196.14': [<numba.core.ir.Assign object at 0x00000168E889C470>],
             '$196.15': [<numba.core.ir.Assign object at 0x00000168E889C550>],
             '$196.16': [<numba.core.ir.Assign object at 0x00000168E889C630>],
             '$196.17': [<numba.core.ir.Assign object at 0x00000168E889C710>],
             '$196.6': [<numba.core.ir.Assign object at 0x00000168E8898E48>],
             '$196.7': [<numba.core.ir.Assign object at 0x00000168E8898F28>],
             '$196.8': [<numba.core.ir.Assign object at 0x00000168E889C048>],
             '$236.1': [<numba.core.ir.Assign object at 0x00000168E889C390>],
             '$236.3': [<numba.core.ir.Assign object at 0x00000168E889C9E8>],
             '$236.4': [<numba.core.ir.Assign object at 0x00000168E889CAC8>],
             '$244.2': [<numba.core.ir.Assign object at 0x00000168E889CC88>],
             '$244.3': [<numba.core.ir.Assign object at 0x00000168E889CD30>],
             '$244.4': [<numba.core.ir.Assign object at 0x00000168E889CDD8>],
             '$246.13': [<numba.core.ir.Assign object at 0x00000168E88A1908>],
             '$246.15': [<numba.core.ir.Assign object at 0x00000168E88A1A90>],
             '$246.16': [<numba.core.ir.Assign object at 0x00000168E88A1B70>],
             '$246.17': [<numba.core.ir.Assign object at 0x00000168E88A1C50>],
             '$246.18': [<numba.core.ir.Assign object at 0x00000168E88A1D30>],
             '$246.5': [<numba.core.ir.Assign object at 0x00000168E88A1390>],
             '$246.8': [<numba.core.ir.Assign object at 0x00000168E88A1588>],
             '$292.13': [<numba.core.ir.Assign object at 0x00000168E88A59B0>],
             '$292.16': [<numba.core.ir.Assign object at 0x00000168E88A5BE0>],
             '$292.18': [<numba.core.ir.Assign object at 0x00000168E88A5DA0>],
             '$292.21': [<numba.core.ir.Assign object at 0x00000168E88A5FD0>],
             '$292.23': [<numba.core.ir.Assign object at 0x00000168E88AA198>],
             '$292.3': [<numba.core.ir.Assign object at 0x00000168E88A5048>],
             '$292.7': [<numba.core.ir.Assign object at 0x00000168E88A5438>],
             '$352.1': [<numba.core.ir.Assign object at 0x00000168E88A5B00>],
             '$352.3': [<numba.core.ir.Assign object at 0x00000168E88AA320>],
             '$352.4': [<numba.core.ir.Assign object at 0x00000168E88AA3C8>],
             '$360.2': [<numba.core.ir.Assign object at 0x00000168E88AA588>],
             '$360.3': [<numba.core.ir.Assign object at 0x00000168E88AA630>],
             '$360.4': [<numba.core.ir.Assign object at 0x00000168E88AA6D8>],
             '$362.14': [<numba.core.ir.Assign object at 0x00000168E88AE320>],
             '$362.15': [<numba.core.ir.Assign object at 0x00000168E88AE400>],
             '$362.16': [<numba.core.ir.Assign object at 0x00000168E88AE4E0>],
             '$362.17': [<numba.core.ir.Assign object at 0x00000168E88AE5C0>],
             '$362.6': [<numba.core.ir.Assign object at 0x00000168E88AACF8>],
             '$362.7': [<numba.core.ir.Assign object at 0x00000168E88AADD8>],
             '$362.8': [<numba.core.ir.Assign object at 0x00000168E88AAEB8>],
             '$402.1': [<numba.core.ir.Assign object at 0x00000168E88AE240>],
             '$402.3': [<numba.core.ir.Assign object at 0x00000168E88AE898>],
             '$402.4': [<numba.core.ir.Assign object at 0x00000168E88AE978>],
             '$410.2': [<numba.core.ir.Assign object at 0x00000168E88AEB38>],
             '$410.3': [<numba.core.ir.Assign object at 0x00000168E88AEBE0>],
             '$410.4': [<numba.core.ir.Assign object at 0x00000168E88AEC88>],
             '$412.13': [<numba.core.ir.Assign object at 0x00000168E88B3780>],
             '$412.15': [<numba.core.ir.Assign object at 0x00000168E88B3940>],
             '$412.17': [<numba.core.ir.Assign object at 0x00000168E88B3AC8>],
             '$412.18': [<numba.core.ir.Assign object at 0x00000168E88B3BA8>],
             '$412.19': [<numba.core.ir.Assign object at 0x00000168E88B3C88>],
             '$412.20': [<numba.core.ir.Assign object at 0x00000168E88B3D68>],
             '$412.5': [<numba.core.ir.Assign object at 0x00000168E88B3208>],
             '$412.8': [<numba.core.ir.Assign object at 0x00000168E88B3400>],
             '$466.3': [<numba.core.ir.Assign object at 0x00000168E88B60B8>],
             '$478.2': [<numba.core.ir.Assign object at 0x00000168E88B63C8>],
             '$const0.2': [<numba.core.ir.Assign object at 0x00000168E88832E8>],
             '$const0.22': [<numba.core.ir.Assign object at 0x00000168E8889A20>],
             '$const0.26': [<numba.core.ir.Assign object at 0x00000168E8889E10>],
             '$const0.30': [<numba.core.ir.Assign object at 0x00000168E888E240>],
             '$const0.34': [<numba.core.ir.Assign object at 0x00000168E888E630>],
             '$const0.5': [<numba.core.ir.Assign object at 0x00000168E88835F8>],
             '$const116.21': [<numba.core.ir.Assign object at 0x00000168E8892F28>],
             '$const292.17': [<numba.core.ir.Assign object at 0x00000168E88A5CC0>],
             '$const412.14': [<numba.core.ir.Assign object at 0x00000168E88B3860>],
             '$const478.1': [<numba.core.ir.Assign object at 0x00000168E88B62E8>],
             '$phi112.1': [<numba.core.ir.Assign object at 0x00000168E8883828>],
             '$phi116.1': [<numba.core.ir.Assign object at 0x00000168E888EB38>],
             '$phi194.1': [<numba.core.ir.Assign object at 0x00000168E88921D0>],
             '$phi196.1': [<numba.core.ir.Assign object at 0x00000168E8898898>],
             '$phi244.1': [<numba.core.ir.Assign object at 0x00000168E889C908>],
             '$phi246.1': [<numba.core.ir.Assign object at 0x00000168E889CE48>],
             '$phi286.1': [<numba.core.ir.Assign object at 0x00000168E889CEB8>],
             '$phi286.2': [<numba.core.ir.Assign object at 0x00000168E889CF28>],
             '$phi290.1': [<numba.core.ir.Assign object at 0x00000168E8898908>],
             '$phi290.2': [<numba.core.ir.Assign object at 0x00000168E8898978>],
             '$phi360.1': [<numba.core.ir.Assign object at 0x00000168E88A5320>],
             '$phi362.1': [<numba.core.ir.Assign object at 0x00000168E88AA748>],
             '$phi410.1': [<numba.core.ir.Assign object at 0x00000168E88AE7B8>],
             '$phi412.1': [<numba.core.ir.Assign object at 0x00000168E88AECF8>],
             '$phi458.1': [<numba.core.ir.Assign object at 0x00000168E88AED68>],
             '$phi458.2': [<numba.core.ir.Assign object at 0x00000168E88AEDD8>],
             '$phi464.1': [<numba.core.ir.Assign object at 0x00000168E88AA7B8>],
             '$phi464.2': [<numba.core.ir.Assign object at 0x00000168E88AA828>],
             '$phi476.1': [<numba.core.ir.Assign object at 0x00000168E888EBA8>],
             '$phi476.2': [<numba.core.ir.Assign object at 0x00000168E888EC18>],
             'eta': [<numba.core.ir.Assign object at 0x00000168E8889588>,
                     <numba.core.ir.Assign object at 0x00000168E8892C50>,
                     <numba.core.ir.Assign object at 0x00000168E88A5860>],
             'frac': [<numba.core.ir.Assign object at 0x00000168E88890F0>,
                      <numba.core.ir.Assign object at 0x00000168E8892438>,
                      <numba.core.ir.Assign object at 0x00000168E88A50B8>],
             'i': [<numba.core.ir.Assign object at 0x00000168E8898AC8>],
             'i_max': [<numba.core.ir.Assign object at 0x00000168E88984E0>],
             'index_frac': [<numba.core.ir.Assign object at 0x00000168E8889278>,
                            <numba.core.ir.Assign object at 0x00000168E88926D8>,
                            <numba.core.ir.Assign object at 0x00000168E88A52E8>],
             'index_step': [<numba.core.ir.Assign object at 0x00000168E8883C18>],
             'interp_delta': [<numba.core.ir.Assign object at 0x00000168E8883080>],
             'interp_win': [<numba.core.ir.Assign object at 0x00000168E8873F98>],
             'j': [<numba.core.ir.Assign object at 0x00000168E88A10B8>,
                   <numba.core.ir.Assign object at 0x00000168E88AEEF0>],
             'k': [<numba.core.ir.Assign object at 0x00000168E88AA978>],
             'k_max': [<numba.core.ir.Assign object at 0x00000168E88AA278>],
             'n': [<numba.core.ir.Assign object at 0x00000168E8883F28>,
                   <numba.core.ir.Assign object at 0x00000168E888EFD0>],
             'n_channels': [<numba.core.ir.Assign object at 0x00000168E88B6550>],
             'n_orig': [<numba.core.ir.Assign object at 0x00000168E88B6D68>],
             'n_out': [<numba.core.ir.Assign object at 0x00000168E88B67F0>],
             'num_table': [<numba.core.ir.Assign object at 0x00000168E8883128>],
             'nwin': [<numba.core.ir.Assign object at 0x00000168E8845780>],
             'offset': [<numba.core.ir.Assign object at 0x00000168E8889400>,
                        <numba.core.ir.Assign object at 0x00000168E88929B0>,
                        <numba.core.ir.Assign object at 0x00000168E88A55C0>],
             'sample_ratio': [<numba.core.ir.Assign object at 0x00000168E8873EF0>],
             'scale': [<numba.core.ir.Assign object at 0x00000168E8883470>],
             't': [<numba.core.ir.Assign object at 0x00000168E888ED68>],
             'time_increment': [<numba.core.ir.Assign object at 0x00000168E8883780>],
             'time_register': [<numba.core.ir.Assign object at 0x00000168E8883DA0>,
                               <numba.core.ir.Assign object at 0x00000168E88B6128>],
             'weight': [<numba.core.ir.Assign object at 0x00000168E8889710>,
                        <numba.core.ir.Assign object at 0x00000168E889C7F0>,
                        <numba.core.ir.Assign object at 0x00000168E88AE6A0>],
             'x': [<numba.core.ir.Assign object at 0x00000168E8873DA0>],
             'y': [<numba.core.ir.Assign object at 0x00000168E8873E48>]})
2021-05-28 23:59:31,724 SSA violators {'time_register', 'index_frac', 'offset', 'n', 'weight', 'eta', 'j', 'frac'}
2021-05-28 23:59:31,724 Fix SSA violator on var time_register
2021-05-28 23:59:31,724 ==== SSA block rewrite pass on 0
2021-05-28 23:59:31,724 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,724 on stmt: x = arg(0, name=x)
2021-05-28 23:59:31,724 on stmt: y = arg(1, name=y)
2021-05-28 23:59:31,724 on stmt: sample_ratio = arg(2, name=sample_ratio)
2021-05-28 23:59:31,724 on stmt: interp_win = arg(3, name=interp_win)
2021-05-28 23:59:31,724 on stmt: interp_delta = arg(4, name=interp_delta)
2021-05-28 23:59:31,724 on stmt: num_table = arg(5, name=num_table)
2021-05-28 23:59:31,724 on stmt: $0.1 = global(min: <built-in function min>)
2021-05-28 23:59:31,724 on stmt: $const0.2 = const(float, 1.0)
2021-05-28 23:59:31,724 on stmt: scale = call $0.1($const0.2, sample_ratio, func=$0.1, args=[Var($const0.2, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None)
2021-05-28 23:59:31,724 on stmt: $const0.5 = const(float, 1.0)
2021-05-28 23:59:31,724 on stmt: time_increment = $const0.5 / sample_ratio
2021-05-28 23:59:31,724 on stmt: $0.8 = global(int: <class 'int'>)
2021-05-28 23:59:31,724 on stmt: $0.11 = scale * num_table
2021-05-28 23:59:31,724 on stmt: index_step = call $0.8($0.11, func=$0.8, args=[Var($0.11, interpn.py:12)], kws=(), vararg=None)
2021-05-28 23:59:31,725 on stmt: time_register = const(float, 0.0)
2021-05-28 23:59:31,725 first assign: time_register
2021-05-28 23:59:31,725 replaced with: time_register = const(float, 0.0)
2021-05-28 23:59:31,725 on stmt: n = const(int, 0)
2021-05-28 23:59:31,725 on stmt: frac = const(float, 0.0)
2021-05-28 23:59:31,725 on stmt: index_frac = const(float, 0.0)
2021-05-28 23:59:31,725 on stmt: offset = const(int, 0)
2021-05-28 23:59:31,725 on stmt: eta = const(float, 0.0)
2021-05-28 23:59:31,725 on stmt: weight = const(float, 0.0)
2021-05-28 23:59:31,725 on stmt: $0.21 = getattr(value=interp_win, attr=shape)
2021-05-28 23:59:31,725 on stmt: $const0.22 = const(int, 0)
2021-05-28 23:59:31,725 on stmt: nwin = static_getitem(value=$0.21, index=0, index_var=$const0.22, fn=<built-in function getitem>)
2021-05-28 23:59:31,725 on stmt: $0.25 = getattr(value=x, attr=shape)
2021-05-28 23:59:31,725 on stmt: $const0.26 = const(int, 0)
2021-05-28 23:59:31,725 on stmt: n_orig = static_getitem(value=$0.25, index=0, index_var=$const0.26, fn=<built-in function getitem>)
2021-05-28 23:59:31,725 on stmt: $0.29 = getattr(value=y, attr=shape)
2021-05-28 23:59:31,725 on stmt: $const0.30 = const(int, 0)
2021-05-28 23:59:31,725 on stmt: n_out = static_getitem(value=$0.29, index=0, index_var=$const0.30, fn=<built-in function getitem>)
2021-05-28 23:59:31,725 on stmt: $0.33 = getattr(value=y, attr=shape)
2021-05-28 23:59:31,725 on stmt: $const0.34 = const(int, 1)
2021-05-28 23:59:31,725 on stmt: n_channels = static_getitem(value=$0.33, index=1, index_var=$const0.34, fn=<built-in function getitem>)
2021-05-28 23:59:31,726 on stmt: jump 100
2021-05-28 23:59:31,726 ==== SSA block rewrite pass on 100
2021-05-28 23:59:31,726 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,726 on stmt: jump 104
2021-05-28 23:59:31,726 ==== SSA block rewrite pass on 104
2021-05-28 23:59:31,726 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,726 on stmt: $104.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,726 on stmt: $104.3 = call $104.1(n_out, func=$104.1, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None)
2021-05-28 23:59:31,726 on stmt: $104.4 = getiter(value=$104.3)
2021-05-28 23:59:31,726 on stmt: $phi112.1 = $104.4
2021-05-28 23:59:31,726 on stmt: jump 112
2021-05-28 23:59:31,726 ==== SSA block rewrite pass on 112
2021-05-28 23:59:31,726 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,726 on stmt: $112.2 = iternext(value=$phi112.1)
2021-05-28 23:59:31,726 on stmt: $112.3 = pair_first(value=$112.2)
2021-05-28 23:59:31,726 on stmt: $112.4 = pair_second(value=$112.2)
2021-05-28 23:59:31,726 on stmt: $phi116.1 = $112.3
2021-05-28 23:59:31,726 on stmt: $phi476.1 = $112.3
2021-05-28 23:59:31,726 on stmt: $phi476.2 = $phi112.1
2021-05-28 23:59:31,726 on stmt: branch $112.4, 116, 476
2021-05-28 23:59:31,726 ==== SSA block rewrite pass on 116
2021-05-28 23:59:31,727 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,727 on stmt: t = $phi116.1
2021-05-28 23:59:31,727 on stmt: $116.2 = global(int: <class 'int'>)
2021-05-28 23:59:31,727 on stmt: n = call $116.2(time_register, func=$116.2, args=[Var(time_register, interpn.py:13)], kws=(), vararg=None)
2021-05-28 23:59:31,727 on stmt: $116.8 = time_register - n
2021-05-28 23:59:31,727 on stmt: frac = scale * $116.8
2021-05-28 23:59:31,727 on stmt: index_frac = frac * num_table
2021-05-28 23:59:31,727 on stmt: $116.13 = global(int: <class 'int'>)
2021-05-28 23:59:31,727 on stmt: offset = call $116.13(index_frac, func=$116.13, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None)
2021-05-28 23:59:31,727 on stmt: eta = index_frac - offset
2021-05-28 23:59:31,727 on stmt: $116.19 = global(min: <built-in function min>)
2021-05-28 23:59:31,727 on stmt: $const116.21 = const(int, 1)
2021-05-28 23:59:31,727 on stmt: $116.22 = n + $const116.21
2021-05-28 23:59:31,727 on stmt: $116.25 = nwin - offset
2021-05-28 23:59:31,727 on stmt: $116.27 = $116.25 // index_step
2021-05-28 23:59:31,727 on stmt: i_max = call $116.19($116.22, $116.27, func=$116.19, args=[Var($116.22, interpn.py:42), Var($116.27, interpn.py:42)], kws=(), vararg=None)
2021-05-28 23:59:31,727 on stmt: jump 184
2021-05-28 23:59:31,727 ==== SSA block rewrite pass on 184
2021-05-28 23:59:31,727 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,727 on stmt: jump 186
2021-05-28 23:59:31,727 ==== SSA block rewrite pass on 186
2021-05-28 23:59:31,727 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,727 on stmt: $186.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,727 on stmt: $186.3 = call $186.1(i_max, func=$186.1, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None)
2021-05-28 23:59:31,728 on stmt: $186.4 = getiter(value=$186.3)
2021-05-28 23:59:31,728 on stmt: $phi194.1 = $186.4
2021-05-28 23:59:31,728 on stmt: jump 194
2021-05-28 23:59:31,728 ==== SSA block rewrite pass on 194
2021-05-28 23:59:31,728 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,728 on stmt: $194.2 = iternext(value=$phi194.1)
2021-05-28 23:59:31,728 on stmt: $194.3 = pair_first(value=$194.2)
2021-05-28 23:59:31,728 on stmt: $194.4 = pair_second(value=$194.2)
2021-05-28 23:59:31,728 on stmt: $phi196.1 = $194.3
2021-05-28 23:59:31,728 on stmt: $phi290.1 = $194.3
2021-05-28 23:59:31,728 on stmt: $phi290.2 = $phi194.1
2021-05-28 23:59:31,728 on stmt: branch $194.4, 196, 290
2021-05-28 23:59:31,728 ==== SSA block rewrite pass on 196
2021-05-28 23:59:31,728 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,728 on stmt: i = $phi196.1
2021-05-28 23:59:31,728 on stmt: $196.6 = i * index_step
2021-05-28 23:59:31,728 on stmt: $196.7 = offset + $196.6
2021-05-28 23:59:31,728 on stmt: $196.8 = getitem(value=interp_win, index=$196.7, fn=<built-in function getitem>)
2021-05-28 23:59:31,728 on stmt: $196.14 = i * index_step
2021-05-28 23:59:31,728 on stmt: $196.15 = offset + $196.14
2021-05-28 23:59:31,729 on stmt: $196.16 = getitem(value=interp_delta, index=$196.15, fn=<built-in function getitem>)
2021-05-28 23:59:31,729 on stmt: $196.17 = eta * $196.16
2021-05-28 23:59:31,729 on stmt: weight = $196.8 + $196.17
2021-05-28 23:59:31,729 on stmt: jump 234
2021-05-28 23:59:31,729 ==== SSA block rewrite pass on 234
2021-05-28 23:59:31,729 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,729 on stmt: jump 236
2021-05-28 23:59:31,729 ==== SSA block rewrite pass on 236
2021-05-28 23:59:31,729 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,729 on stmt: $236.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,729 on stmt: $236.3 = call $236.1(n_channels, func=$236.1, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-28 23:59:31,729 on stmt: $236.4 = getiter(value=$236.3)
2021-05-28 23:59:31,729 on stmt: $phi244.1 = $236.4
2021-05-28 23:59:31,729 on stmt: jump 244
2021-05-28 23:59:31,729 ==== SSA block rewrite pass on 244
2021-05-28 23:59:31,729 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,729 on stmt: $244.2 = iternext(value=$phi244.1)
2021-05-28 23:59:31,729 on stmt: $244.3 = pair_first(value=$244.2)
2021-05-28 23:59:31,729 on stmt: $244.4 = pair_second(value=$244.2)
2021-05-28 23:59:31,729 on stmt: $phi246.1 = $244.3
2021-05-28 23:59:31,729 on stmt: $phi286.1 = $244.3
2021-05-28 23:59:31,729 on stmt: $phi286.2 = $phi244.1
2021-05-28 23:59:31,729 on stmt: branch $244.4, 246, 286
2021-05-28 23:59:31,730 ==== SSA block rewrite pass on 246
2021-05-28 23:59:31,730 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,730 on stmt: j = $phi246.1
2021-05-28 23:59:31,730 on stmt: $246.5 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-28 23:59:31,730 on stmt: $246.8 = getitem(value=y, index=$246.5, fn=<built-in function getitem>)
2021-05-28 23:59:31,730 on stmt: $246.13 = n - i
2021-05-28 23:59:31,730 on stmt: $246.15 = build_tuple(items=[Var($246.13, interpn.py:47), Var(j, interpn.py:46)])
2021-05-28 23:59:31,730 on stmt: $246.16 = getitem(value=x, index=$246.15, fn=<built-in function getitem>)
2021-05-28 23:59:31,730 on stmt: $246.17 = weight * $246.16
2021-05-28 23:59:31,730 on stmt: $246.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$246.8, rhs=$246.17, static_lhs=Undefined, static_rhs=Undefined)
2021-05-28 23:59:31,730 on stmt: y[$246.5] = $246.18
2021-05-28 23:59:31,730 on stmt: jump 244
2021-05-28 23:59:31,730 ==== SSA block rewrite pass on 286
2021-05-28 23:59:31,730 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,730 on stmt: jump 288
2021-05-28 23:59:31,730 ==== SSA block rewrite pass on 288
2021-05-28 23:59:31,730 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,730 on stmt: jump 194
2021-05-28 23:59:31,730 ==== SSA block rewrite pass on 290
2021-05-28 23:59:31,730 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,730 on stmt: jump 292
2021-05-28 23:59:31,730 ==== SSA block rewrite pass on 292
2021-05-28 23:59:31,730 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,730 on stmt: $292.3 = scale - frac
2021-05-28 23:59:31,731 on stmt: frac = $292.3
2021-05-28 23:59:31,731 on stmt: index_frac = frac * num_table
2021-05-28 23:59:31,731 on stmt: $292.7 = global(int: <class 'int'>)
2021-05-28 23:59:31,731 on stmt: offset = call $292.7(index_frac, func=$292.7, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None)
2021-05-28 23:59:31,731 on stmt: eta = index_frac - offset
2021-05-28 23:59:31,731 on stmt: $292.13 = global(min: <built-in function min>)
2021-05-28 23:59:31,731 on stmt: $292.16 = n_orig - n
2021-05-28 23:59:31,731 on stmt: $const292.17 = const(int, 1)
2021-05-28 23:59:31,731 on stmt: $292.18 = $292.16 - $const292.17
2021-05-28 23:59:31,731 on stmt: $292.21 = nwin - offset
2021-05-28 23:59:31,731 on stmt: $292.23 = $292.21 // index_step
2021-05-28 23:59:31,731 on stmt: k_max = call $292.13($292.18, $292.23, func=$292.13, args=[Var($292.18, interpn.py:60), Var($292.23, interpn.py:60)], kws=(), vararg=None)
2021-05-28 23:59:31,731 on stmt: jump 350
2021-05-28 23:59:31,731 ==== SSA block rewrite pass on 350
2021-05-28 23:59:31,731 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,731 on stmt: jump 352
2021-05-28 23:59:31,731 ==== SSA block rewrite pass on 352
2021-05-28 23:59:31,731 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,731 on stmt: $352.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,731 on stmt: $352.3 = call $352.1(k_max, func=$352.1, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None)
2021-05-28 23:59:31,731 on stmt: $352.4 = getiter(value=$352.3)
2021-05-28 23:59:31,731 on stmt: $phi360.1 = $352.4
2021-05-28 23:59:31,731 on stmt: jump 360
2021-05-28 23:59:31,731 ==== SSA block rewrite pass on 360
2021-05-28 23:59:31,732 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,732 on stmt: $360.2 = iternext(value=$phi360.1)
2021-05-28 23:59:31,732 on stmt: $360.3 = pair_first(value=$360.2)
2021-05-28 23:59:31,732 on stmt: $360.4 = pair_second(value=$360.2)
2021-05-28 23:59:31,732 on stmt: $phi362.1 = $360.3
2021-05-28 23:59:31,732 on stmt: $phi464.1 = $360.3
2021-05-28 23:59:31,732 on stmt: $phi464.2 = $phi360.1
2021-05-28 23:59:31,732 on stmt: branch $360.4, 362, 464
2021-05-28 23:59:31,732 ==== SSA block rewrite pass on 362
2021-05-28 23:59:31,732 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,732 on stmt: k = $phi362.1
2021-05-28 23:59:31,732 on stmt: $362.6 = k * index_step
2021-05-28 23:59:31,732 on stmt: $362.7 = offset + $362.6
2021-05-28 23:59:31,732 on stmt: $362.8 = getitem(value=interp_win, index=$362.7, fn=<built-in function getitem>)
2021-05-28 23:59:31,732 on stmt: $362.14 = k * index_step
2021-05-28 23:59:31,732 on stmt: $362.15 = offset + $362.14
2021-05-28 23:59:31,732 on stmt: $362.16 = getitem(value=interp_delta, index=$362.15, fn=<built-in function getitem>)
2021-05-28 23:59:31,732 on stmt: $362.17 = eta * $362.16
2021-05-28 23:59:31,732 on stmt: weight = $362.8 + $362.17
2021-05-28 23:59:31,732 on stmt: jump 400
2021-05-28 23:59:31,732 ==== SSA block rewrite pass on 400
2021-05-28 23:59:31,733 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,733 on stmt: jump 402
2021-05-28 23:59:31,733 ==== SSA block rewrite pass on 402
2021-05-28 23:59:31,733 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,733 on stmt: $402.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,733 on stmt: $402.3 = call $402.1(n_channels, func=$402.1, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-28 23:59:31,733 on stmt: $402.4 = getiter(value=$402.3)
2021-05-28 23:59:31,733 on stmt: $phi410.1 = $402.4
2021-05-28 23:59:31,733 on stmt: jump 410
2021-05-28 23:59:31,733 ==== SSA block rewrite pass on 410
2021-05-28 23:59:31,733 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,733 on stmt: $410.2 = iternext(value=$phi410.1)
2021-05-28 23:59:31,733 on stmt: $410.3 = pair_first(value=$410.2)
2021-05-28 23:59:31,733 on stmt: $410.4 = pair_second(value=$410.2)
2021-05-28 23:59:31,733 on stmt: $phi412.1 = $410.3
2021-05-28 23:59:31,733 on stmt: $phi458.1 = $410.3
2021-05-28 23:59:31,733 on stmt: $phi458.2 = $phi410.1
2021-05-28 23:59:31,733 on stmt: branch $410.4, 412, 458
2021-05-28 23:59:31,733 ==== SSA block rewrite pass on 412
2021-05-28 23:59:31,733 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,733 on stmt: j = $phi412.1
2021-05-28 23:59:31,733 on stmt: $412.5 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-28 23:59:31,733 on stmt: $412.8 = getitem(value=y, index=$412.5, fn=<built-in function getitem>)
2021-05-28 23:59:31,733 on stmt: $412.13 = n + k
2021-05-28 23:59:31,733 on stmt: $const412.14 = const(int, 1)
2021-05-28 23:59:31,734 on stmt: $412.15 = $412.13 + $const412.14
2021-05-28 23:59:31,734 on stmt: $412.17 = build_tuple(items=[Var($412.15, interpn.py:64), Var(j, interpn.py:46)])
2021-05-28 23:59:31,734 on stmt: $412.18 = getitem(value=x, index=$412.17, fn=<built-in function getitem>)
2021-05-28 23:59:31,734 on stmt: $412.19 = weight * $412.18
2021-05-28 23:59:31,734 on stmt: $412.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$412.8, rhs=$412.19, static_lhs=Undefined, static_rhs=Undefined)
2021-05-28 23:59:31,734 on stmt: y[$412.5] = $412.20
2021-05-28 23:59:31,734 on stmt: jump 410
2021-05-28 23:59:31,734 ==== SSA block rewrite pass on 458
2021-05-28 23:59:31,734 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,734 on stmt: jump 460
2021-05-28 23:59:31,734 ==== SSA block rewrite pass on 460
2021-05-28 23:59:31,734 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,734 on stmt: jump 360
2021-05-28 23:59:31,734 ==== SSA block rewrite pass on 464
2021-05-28 23:59:31,734 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,734 on stmt: jump 466
2021-05-28 23:59:31,734 ==== SSA block rewrite pass on 466
2021-05-28 23:59:31,734 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,734 on stmt: $466.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
2021-05-28 23:59:31,734 on stmt: time_register = $466.3
2021-05-28 23:59:31,734 replaced with: time_register.1 = $466.3
2021-05-28 23:59:31,734 on stmt: jump 112
2021-05-28 23:59:31,734 ==== SSA block rewrite pass on 476
2021-05-28 23:59:31,734 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,734 on stmt: jump 478
2021-05-28 23:59:31,735 ==== SSA block rewrite pass on 478
2021-05-28 23:59:31,735 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,735 on stmt: $const478.1 = const(NoneType, None)
2021-05-28 23:59:31,735 on stmt: $478.2 = cast(value=$const478.1)
2021-05-28 23:59:31,735 on stmt: return $478.2
2021-05-28 23:59:31,735 Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x00000168E8873128>],
             466: [<numba.core.ir.Assign object at 0x00000168E88C8320>]})
2021-05-28 23:59:31,735 ==== SSA block rewrite pass on 0
2021-05-28 23:59:31,735 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8208>
2021-05-28 23:59:31,736 on stmt: x = arg(0, name=x)
2021-05-28 23:59:31,736 on stmt: y = arg(1, name=y)
2021-05-28 23:59:31,736 on stmt: sample_ratio = arg(2, name=sample_ratio)
2021-05-28 23:59:31,736 on stmt: interp_win = arg(3, name=interp_win)
2021-05-28 23:59:31,736 on stmt: interp_delta = arg(4, name=interp_delta)
2021-05-28 23:59:31,736 on stmt: num_table = arg(5, name=num_table)
2021-05-28 23:59:31,736 on stmt: $0.1 = global(min: <built-in function min>)
2021-05-28 23:59:31,736 on stmt: $const0.2 = const(float, 1.0)
2021-05-28 23:59:31,736 on stmt: scale = call $0.1($const0.2, sample_ratio, func=$0.1, args=[Var($const0.2, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None)
2021-05-28 23:59:31,736 on stmt: $const0.5 = const(float, 1.0)
2021-05-28 23:59:31,736 on stmt: time_increment = $const0.5 / sample_ratio
2021-05-28 23:59:31,736 on stmt: $0.8 = global(int: <class 'int'>)
2021-05-28 23:59:31,736 on stmt: $0.11 = scale * num_table
2021-05-28 23:59:31,736 on stmt: index_step = call $0.8($0.11, func=$0.8, args=[Var($0.11, interpn.py:12)], kws=(), vararg=None)
2021-05-28 23:59:31,736 on stmt: time_register = const(float, 0.0)
2021-05-28 23:59:31,736 on stmt: n = const(int, 0)
2021-05-28 23:59:31,737 on stmt: frac = const(float, 0.0)
2021-05-28 23:59:31,737 on stmt: index_frac = const(float, 0.0)
2021-05-28 23:59:31,737 on stmt: offset = const(int, 0)
2021-05-28 23:59:31,737 on stmt: eta = const(float, 0.0)
2021-05-28 23:59:31,737 on stmt: weight = const(float, 0.0)
2021-05-28 23:59:31,737 on stmt: $0.21 = getattr(value=interp_win, attr=shape)
2021-05-28 23:59:31,737 on stmt: $const0.22 = const(int, 0)
2021-05-28 23:59:31,737 on stmt: nwin = static_getitem(value=$0.21, index=0, index_var=$const0.22, fn=<built-in function getitem>)
2021-05-28 23:59:31,737 on stmt: $0.25 = getattr(value=x, attr=shape)
2021-05-28 23:59:31,737 on stmt: $const0.26 = const(int, 0)
2021-05-28 23:59:31,737 on stmt: n_orig = static_getitem(value=$0.25, index=0, index_var=$const0.26, fn=<built-in function getitem>)
2021-05-28 23:59:31,737 on stmt: $0.29 = getattr(value=y, attr=shape)
2021-05-28 23:59:31,737 on stmt: $const0.30 = const(int, 0)
2021-05-28 23:59:31,737 on stmt: n_out = static_getitem(value=$0.29, index=0, index_var=$const0.30, fn=<built-in function getitem>)
2021-05-28 23:59:31,737 on stmt: $0.33 = getattr(value=y, attr=shape)
2021-05-28 23:59:31,737 on stmt: $const0.34 = const(int, 1)
2021-05-28 23:59:31,737 on stmt: n_channels = static_getitem(value=$0.33, index=1, index_var=$const0.34, fn=<built-in function getitem>)
2021-05-28 23:59:31,737 on stmt: jump 100
2021-05-28 23:59:31,737 ==== SSA block rewrite pass on 100
2021-05-28 23:59:31,737 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8208>
2021-05-28 23:59:31,737 on stmt: jump 104
2021-05-28 23:59:31,737 ==== SSA block rewrite pass on 104
2021-05-28 23:59:31,738 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8208>
2021-05-28 23:59:31,738 on stmt: $104.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,738 on stmt: $104.3 = call $104.1(n_out, func=$104.1, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None)
2021-05-28 23:59:31,738 on stmt: $104.4 = getiter(value=$104.3)
2021-05-28 23:59:31,738 on stmt: $phi112.1 = $104.4
2021-05-28 23:59:31,738 on stmt: jump 112
2021-05-28 23:59:31,738 ==== SSA block rewrite pass on 112
2021-05-28 23:59:31,738 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8208>
2021-05-28 23:59:31,738 on stmt: $112.2 = iternext(value=$phi112.1)
2021-05-28 23:59:31,738 on stmt: $112.3 = pair_first(value=$112.2)
2021-05-28 23:59:31,738 on stmt: $112.4 = pair_second(value=$112.2)
2021-05-28 23:59:31,738 on stmt: $phi116.1 = $112.3
2021-05-28 23:59:31,738 on stmt: $phi476.1 = $112.3
2021-05-28 23:59:31,738 on stmt: $phi476.2 = $phi112.1
2021-05-28 23:59:31,738 on stmt: branch $112.4, 116, 476
2021-05-28 23:59:31,738 ==== SSA block rewrite pass on 116
2021-05-28 23:59:31,738 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8208>
2021-05-28 23:59:31,738 on stmt: t = $phi116.1
2021-05-28 23:59:31,738 on stmt: $116.2 = global(int: <class 'int'>)
2021-05-28 23:59:31,738 on stmt: n = call $116.2(time_register, func=$116.2, args=[Var(time_register, interpn.py:13)], kws=(), vararg=None)
2021-05-28 23:59:31,739 find_def var='time_register' stmt=n = call $116.2(time_register, func=$116.2, args=[Var(time_register, interpn.py:13)], kws=(), vararg=None)
2021-05-28 23:59:31,739 find_def_from_top label 116
2021-05-28 23:59:31,739 idom 112 from label 116
2021-05-28 23:59:31,739 find_def_from_bottom label 112
2021-05-28 23:59:31,739 find_def_from_top label 112
2021-05-28 23:59:31,739 insert phi node time_register.2 = phi(incoming_values=[], incoming_blocks=[]) at 112
2021-05-28 23:59:31,739 find_def_from_bottom label 104
2021-05-28 23:59:31,739 find_def_from_top label 104
2021-05-28 23:59:31,739 idom 100 from label 104
2021-05-28 23:59:31,739 find_def_from_bottom label 100
2021-05-28 23:59:31,739 find_def_from_top label 100
2021-05-28 23:59:31,739 idom 0 from label 100
2021-05-28 23:59:31,739 find_def_from_bottom label 0
2021-05-28 23:59:31,739 incoming_def time_register = const(float, 0.0)
2021-05-28 23:59:31,739 find_def_from_bottom label 466
2021-05-28 23:59:31,739 incoming_def time_register.1 = $466.3
2021-05-28 23:59:31,739 replaced with: n = call $116.2(time_register.2, func=$116.2, args=[Var(time_register.2, interpn.py:27)], kws=(), vararg=None)
2021-05-28 23:59:31,739 on stmt: $116.8 = time_register - n
2021-05-28 23:59:31,739 find_def var='time_register' stmt=$116.8 = time_register - n
2021-05-28 23:59:31,739 find_def_from_top label 116
2021-05-28 23:59:31,739 idom 112 from label 116
2021-05-28 23:59:31,740 find_def_from_bottom label 112
2021-05-28 23:59:31,740 replaced with: $116.8 = time_register.2 - n
2021-05-28 23:59:31,740 on stmt: frac = scale * $116.8
2021-05-28 23:59:31,740 on stmt: index_frac = frac * num_table
2021-05-28 23:59:31,740 on stmt: $116.13 = global(int: <class 'int'>)
2021-05-28 23:59:31,740 on stmt: offset = call $116.13(index_frac, func=$116.13, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None)
2021-05-28 23:59:31,740 on stmt: eta = index_frac - offset
2021-05-28 23:59:31,740 on stmt: $116.19 = global(min: <built-in function min>)
2021-05-28 23:59:31,740 on stmt: $const116.21 = const(int, 1)
2021-05-28 23:59:31,740 on stmt: $116.22 = n + $const116.21
2021-05-28 23:59:31,740 on stmt: $116.25 = nwin - offset
2021-05-28 23:59:31,740 on stmt: $116.27 = $116.25 // index_step
2021-05-28 23:59:31,740 on stmt: i_max = call $116.19($116.22, $116.27, func=$116.19, args=[Var($116.22, interpn.py:42), Var($116.27, interpn.py:42)], kws=(), vararg=None)
2021-05-28 23:59:31,740 on stmt: jump 184
2021-05-28 23:59:31,740 ==== SSA block rewrite pass on 184
2021-05-28 23:59:31,740 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8208>
2021-05-28 23:59:31,740 on stmt: jump 186
2021-05-28 23:59:31,740 ==== SSA block rewrite pass on 186
2021-05-28 23:59:31,740 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8208>
2021-05-28 23:59:31,740 on stmt: $186.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,741 on stmt: $186.3 = call $186.1(i_max, func=$186.1, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None)
2021-05-28 23:59:31,741 on stmt: $186.4 = getiter(value=$186.3)
2021-05-28 23:59:31,741 on stmt: $phi194.1 = $186.4
2021-05-28 23:59:31,741 on stmt: jump 194
2021-05-28 23:59:31,741 ==== SSA block rewrite pass on 194
2021-05-28 23:59:31,741 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8208>
2021-05-28 23:59:31,741 on stmt: $194.2 = iternext(value=$phi194.1)
2021-05-28 23:59:31,741 on stmt: $194.3 = pair_first(value=$194.2)
2021-05-28 23:59:31,741 on stmt: $194.4 = pair_second(value=$194.2)
2021-05-28 23:59:31,741 on stmt: $phi196.1 = $194.3
2021-05-28 23:59:31,741 on stmt: $phi290.1 = $194.3
2021-05-28 23:59:31,741 on stmt: $phi290.2 = $phi194.1
2021-05-28 23:59:31,741 on stmt: branch $194.4, 196, 290
2021-05-28 23:59:31,741 ==== SSA block rewrite pass on 196
2021-05-28 23:59:31,741 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8208>
2021-05-28 23:59:31,741 on stmt: i = $phi196.1
2021-05-28 23:59:31,741 on stmt: $196.6 = i * index_step
2021-05-28 23:59:31,741 on stmt: $196.7 = offset + $196.6
2021-05-28 23:59:31,741 on stmt: $196.8 = getitem(value=interp_win, index=$196.7, fn=<built-in function getitem>)
2021-05-28 23:59:31,741 on stmt: $196.14 = i * index_step
2021-05-28 23:59:31,741 on stmt: $196.15 = offset + $196.14
2021-05-28 23:59:31,741 on stmt: $196.16 = getitem(value=interp_delta, index=$196.15, fn=<built-in function getitem>)
2021-05-28 23:59:31,741 on stmt: $196.17 = eta * $196.16
2021-05-28 23:59:31,742 on stmt: weight = $196.8 + $196.17
2021-05-28 23:59:31,742 on stmt: jump 234
2021-05-28 23:59:31,742 ==== SSA block rewrite pass on 234
2021-05-28 23:59:31,742 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8208>
2021-05-28 23:59:31,742 on stmt: jump 236
2021-05-28 23:59:31,742 ==== SSA block rewrite pass on 236
2021-05-28 23:59:31,742 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8208>
2021-05-28 23:59:31,742 on stmt: $236.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,742 on stmt: $236.3 = call $236.1(n_channels, func=$236.1, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-28 23:59:31,742 on stmt: $236.4 = getiter(value=$236.3)
2021-05-28 23:59:31,742 on stmt: $phi244.1 = $236.4
2021-05-28 23:59:31,742 on stmt: jump 244
2021-05-28 23:59:31,742 ==== SSA block rewrite pass on 244
2021-05-28 23:59:31,742 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8208>
2021-05-28 23:59:31,742 on stmt: $244.2 = iternext(value=$phi244.1)
2021-05-28 23:59:31,742 on stmt: $244.3 = pair_first(value=$244.2)
2021-05-28 23:59:31,742 on stmt: $244.4 = pair_second(value=$244.2)
2021-05-28 23:59:31,742 on stmt: $phi246.1 = $244.3
2021-05-28 23:59:31,742 on stmt: $phi286.1 = $244.3
2021-05-28 23:59:31,742 on stmt: $phi286.2 = $phi244.1
2021-05-28 23:59:31,742 on stmt: branch $244.4, 246, 286
2021-05-28 23:59:31,742 ==== SSA block rewrite pass on 246
2021-05-28 23:59:31,742 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8208>
2021-05-28 23:59:31,742 on stmt: j = $phi246.1
2021-05-28 23:59:31,743 on stmt: $246.5 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-28 23:59:31,743 on stmt: $246.8 = getitem(value=y, index=$246.5, fn=<built-in function getitem>)
2021-05-28 23:59:31,743 on stmt: $246.13 = n - i
2021-05-28 23:59:31,743 on stmt: $246.15 = build_tuple(items=[Var($246.13, interpn.py:47), Var(j, interpn.py:46)])
2021-05-28 23:59:31,743 on stmt: $246.16 = getitem(value=x, index=$246.15, fn=<built-in function getitem>)
2021-05-28 23:59:31,743 on stmt: $246.17 = weight * $246.16
2021-05-28 23:59:31,743 on stmt: $246.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$246.8, rhs=$246.17, static_lhs=Undefined, static_rhs=Undefined)
2021-05-28 23:59:31,743 on stmt: y[$246.5] = $246.18
2021-05-28 23:59:31,743 on stmt: jump 244
2021-05-28 23:59:31,743 ==== SSA block rewrite pass on 286
2021-05-28 23:59:31,743 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8208>
2021-05-28 23:59:31,743 on stmt: jump 288
2021-05-28 23:59:31,743 ==== SSA block rewrite pass on 288
2021-05-28 23:59:31,743 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8208>
2021-05-28 23:59:31,743 on stmt: jump 194
2021-05-28 23:59:31,743 ==== SSA block rewrite pass on 290
2021-05-28 23:59:31,743 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8208>
2021-05-28 23:59:31,743 on stmt: jump 292
2021-05-28 23:59:31,743 ==== SSA block rewrite pass on 292
2021-05-28 23:59:31,743 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8208>
2021-05-28 23:59:31,743 on stmt: $292.3 = scale - frac
2021-05-28 23:59:31,743 on stmt: frac = $292.3
2021-05-28 23:59:31,743 on stmt: index_frac = frac * num_table
2021-05-28 23:59:31,744 on stmt: $292.7 = global(int: <class 'int'>)
2021-05-28 23:59:31,744 on stmt: offset = call $292.7(index_frac, func=$292.7, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None)
2021-05-28 23:59:31,744 on stmt: eta = index_frac - offset
2021-05-28 23:59:31,744 on stmt: $292.13 = global(min: <built-in function min>)
2021-05-28 23:59:31,744 on stmt: $292.16 = n_orig - n
2021-05-28 23:59:31,744 on stmt: $const292.17 = const(int, 1)
2021-05-28 23:59:31,744 on stmt: $292.18 = $292.16 - $const292.17
2021-05-28 23:59:31,744 on stmt: $292.21 = nwin - offset
2021-05-28 23:59:31,744 on stmt: $292.23 = $292.21 // index_step
2021-05-28 23:59:31,744 on stmt: k_max = call $292.13($292.18, $292.23, func=$292.13, args=[Var($292.18, interpn.py:60), Var($292.23, interpn.py:60)], kws=(), vararg=None)
2021-05-28 23:59:31,744 on stmt: jump 350
2021-05-28 23:59:31,744 ==== SSA block rewrite pass on 350
2021-05-28 23:59:31,744 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8208>
2021-05-28 23:59:31,744 on stmt: jump 352
2021-05-28 23:59:31,744 ==== SSA block rewrite pass on 352
2021-05-28 23:59:31,744 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8208>
2021-05-28 23:59:31,744 on stmt: $352.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,744 on stmt: $352.3 = call $352.1(k_max, func=$352.1, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None)
2021-05-28 23:59:31,744 on stmt: $352.4 = getiter(value=$352.3)
2021-05-28 23:59:31,744 on stmt: $phi360.1 = $352.4
2021-05-28 23:59:31,744 on stmt: jump 360
2021-05-28 23:59:31,744 ==== SSA block rewrite pass on 360
2021-05-28 23:59:31,745 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8208>
2021-05-28 23:59:31,745 on stmt: $360.2 = iternext(value=$phi360.1)
2021-05-28 23:59:31,745 on stmt: $360.3 = pair_first(value=$360.2)
2021-05-28 23:59:31,745 on stmt: $360.4 = pair_second(value=$360.2)
2021-05-28 23:59:31,745 on stmt: $phi362.1 = $360.3
2021-05-28 23:59:31,745 on stmt: $phi464.1 = $360.3
2021-05-28 23:59:31,745 on stmt: $phi464.2 = $phi360.1
2021-05-28 23:59:31,745 on stmt: branch $360.4, 362, 464
2021-05-28 23:59:31,745 ==== SSA block rewrite pass on 362
2021-05-28 23:59:31,745 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8208>
2021-05-28 23:59:31,745 on stmt: k = $phi362.1
2021-05-28 23:59:31,745 on stmt: $362.6 = k * index_step
2021-05-28 23:59:31,745 on stmt: $362.7 = offset + $362.6
2021-05-28 23:59:31,745 on stmt: $362.8 = getitem(value=interp_win, index=$362.7, fn=<built-in function getitem>)
2021-05-28 23:59:31,745 on stmt: $362.14 = k * index_step
2021-05-28 23:59:31,745 on stmt: $362.15 = offset + $362.14
2021-05-28 23:59:31,745 on stmt: $362.16 = getitem(value=interp_delta, index=$362.15, fn=<built-in function getitem>)
2021-05-28 23:59:31,745 on stmt: $362.17 = eta * $362.16
2021-05-28 23:59:31,745 on stmt: weight = $362.8 + $362.17
2021-05-28 23:59:31,745 on stmt: jump 400
2021-05-28 23:59:31,746 ==== SSA block rewrite pass on 400
2021-05-28 23:59:31,746 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8208>
2021-05-28 23:59:31,746 on stmt: jump 402
2021-05-28 23:59:31,746 ==== SSA block rewrite pass on 402
2021-05-28 23:59:31,746 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8208>
2021-05-28 23:59:31,746 on stmt: $402.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,746 on stmt: $402.3 = call $402.1(n_channels, func=$402.1, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-28 23:59:31,746 on stmt: $402.4 = getiter(value=$402.3)
2021-05-28 23:59:31,746 on stmt: $phi410.1 = $402.4
2021-05-28 23:59:31,746 on stmt: jump 410
2021-05-28 23:59:31,746 ==== SSA block rewrite pass on 410
2021-05-28 23:59:31,746 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8208>
2021-05-28 23:59:31,746 on stmt: $410.2 = iternext(value=$phi410.1)
2021-05-28 23:59:31,746 on stmt: $410.3 = pair_first(value=$410.2)
2021-05-28 23:59:31,746 on stmt: $410.4 = pair_second(value=$410.2)
2021-05-28 23:59:31,746 on stmt: $phi412.1 = $410.3
2021-05-28 23:59:31,746 on stmt: $phi458.1 = $410.3
2021-05-28 23:59:31,746 on stmt: $phi458.2 = $phi410.1
2021-05-28 23:59:31,746 on stmt: branch $410.4, 412, 458
2021-05-28 23:59:31,746 ==== SSA block rewrite pass on 412
2021-05-28 23:59:31,746 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8208>
2021-05-28 23:59:31,747 on stmt: j = $phi412.1
2021-05-28 23:59:31,747 on stmt: $412.5 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-28 23:59:31,747 on stmt: $412.8 = getitem(value=y, index=$412.5, fn=<built-in function getitem>)
2021-05-28 23:59:31,747 on stmt: $412.13 = n + k
2021-05-28 23:59:31,747 on stmt: $const412.14 = const(int, 1)
2021-05-28 23:59:31,747 on stmt: $412.15 = $412.13 + $const412.14
2021-05-28 23:59:31,747 on stmt: $412.17 = build_tuple(items=[Var($412.15, interpn.py:64), Var(j, interpn.py:46)])
2021-05-28 23:59:31,747 on stmt: $412.18 = getitem(value=x, index=$412.17, fn=<built-in function getitem>)
2021-05-28 23:59:31,747 on stmt: $412.19 = weight * $412.18
2021-05-28 23:59:31,747 on stmt: $412.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$412.8, rhs=$412.19, static_lhs=Undefined, static_rhs=Undefined)
2021-05-28 23:59:31,747 on stmt: y[$412.5] = $412.20
2021-05-28 23:59:31,747 on stmt: jump 410
2021-05-28 23:59:31,747 ==== SSA block rewrite pass on 458
2021-05-28 23:59:31,747 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8208>
2021-05-28 23:59:31,747 on stmt: jump 460
2021-05-28 23:59:31,747 ==== SSA block rewrite pass on 460
2021-05-28 23:59:31,747 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8208>
2021-05-28 23:59:31,747 on stmt: jump 360
2021-05-28 23:59:31,747 ==== SSA block rewrite pass on 464
2021-05-28 23:59:31,747 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8208>
2021-05-28 23:59:31,748 on stmt: jump 466
2021-05-28 23:59:31,748 ==== SSA block rewrite pass on 466
2021-05-28 23:59:31,748 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8208>
2021-05-28 23:59:31,748 on stmt: $466.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
2021-05-28 23:59:31,748 find_def var='time_register' stmt=$466.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
2021-05-28 23:59:31,748 find_def_from_top label 466
2021-05-28 23:59:31,748 idom 464 from label 466
2021-05-28 23:59:31,748 find_def_from_bottom label 464
2021-05-28 23:59:31,748 find_def_from_top label 464
2021-05-28 23:59:31,748 idom 360 from label 464
2021-05-28 23:59:31,748 find_def_from_bottom label 360
2021-05-28 23:59:31,748 find_def_from_top label 360
2021-05-28 23:59:31,748 idom 352 from label 360
2021-05-28 23:59:31,748 find_def_from_bottom label 352
2021-05-28 23:59:31,748 find_def_from_top label 352
2021-05-28 23:59:31,748 idom 350 from label 352
2021-05-28 23:59:31,748 find_def_from_bottom label 350
2021-05-28 23:59:31,748 find_def_from_top label 350
2021-05-28 23:59:31,748 idom 292 from label 350
2021-05-28 23:59:31,748 find_def_from_bottom label 292
2021-05-28 23:59:31,748 find_def_from_top label 292
2021-05-28 23:59:31,748 idom 290 from label 292
2021-05-28 23:59:31,748 find_def_from_bottom label 290
2021-05-28 23:59:31,749 find_def_from_top label 290
2021-05-28 23:59:31,749 idom 194 from label 290
2021-05-28 23:59:31,749 find_def_from_bottom label 194
2021-05-28 23:59:31,749 find_def_from_top label 194
2021-05-28 23:59:31,749 idom 186 from label 194
2021-05-28 23:59:31,749 find_def_from_bottom label 186
2021-05-28 23:59:31,749 find_def_from_top label 186
2021-05-28 23:59:31,749 idom 184 from label 186
2021-05-28 23:59:31,749 find_def_from_bottom label 184
2021-05-28 23:59:31,749 find_def_from_top label 184
2021-05-28 23:59:31,749 idom 116 from label 184
2021-05-28 23:59:31,749 find_def_from_bottom label 116
2021-05-28 23:59:31,749 find_def_from_top label 116
2021-05-28 23:59:31,749 idom 112 from label 116
2021-05-28 23:59:31,749 find_def_from_bottom label 112
2021-05-28 23:59:31,749 replaced with: $466.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register.2, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
2021-05-28 23:59:31,749 on stmt: time_register.1 = $466.3
2021-05-28 23:59:31,749 on stmt: jump 112
2021-05-28 23:59:31,749 ==== SSA block rewrite pass on 476
2021-05-28 23:59:31,749 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8208>
2021-05-28 23:59:31,749 on stmt: jump 478
2021-05-28 23:59:31,749 ==== SSA block rewrite pass on 478
2021-05-28 23:59:31,749 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8208>
2021-05-28 23:59:31,749 on stmt: $const478.1 = const(NoneType, None)
2021-05-28 23:59:31,749 on stmt: $478.2 = cast(value=$const478.1)
2021-05-28 23:59:31,749 on stmt: return $478.2
2021-05-28 23:59:31,750 Fix SSA violator on var index_frac
2021-05-28 23:59:31,750 ==== SSA block rewrite pass on 0
2021-05-28 23:59:31,750 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,750 on stmt: x = arg(0, name=x)
2021-05-28 23:59:31,750 on stmt: y = arg(1, name=y)
2021-05-28 23:59:31,750 on stmt: sample_ratio = arg(2, name=sample_ratio)
2021-05-28 23:59:31,750 on stmt: interp_win = arg(3, name=interp_win)
2021-05-28 23:59:31,750 on stmt: interp_delta = arg(4, name=interp_delta)
2021-05-28 23:59:31,750 on stmt: num_table = arg(5, name=num_table)
2021-05-28 23:59:31,750 on stmt: $0.1 = global(min: <built-in function min>)
2021-05-28 23:59:31,750 on stmt: $const0.2 = const(float, 1.0)
2021-05-28 23:59:31,750 on stmt: scale = call $0.1($const0.2, sample_ratio, func=$0.1, args=[Var($const0.2, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None)
2021-05-28 23:59:31,750 on stmt: $const0.5 = const(float, 1.0)
2021-05-28 23:59:31,750 on stmt: time_increment = $const0.5 / sample_ratio
2021-05-28 23:59:31,750 on stmt: $0.8 = global(int: <class 'int'>)
2021-05-28 23:59:31,750 on stmt: $0.11 = scale * num_table
2021-05-28 23:59:31,750 on stmt: index_step = call $0.8($0.11, func=$0.8, args=[Var($0.11, interpn.py:12)], kws=(), vararg=None)
2021-05-28 23:59:31,750 on stmt: time_register = const(float, 0.0)
2021-05-28 23:59:31,750 on stmt: n = const(int, 0)
2021-05-28 23:59:31,750 on stmt: frac = const(float, 0.0)
2021-05-28 23:59:31,750 on stmt: index_frac = const(float, 0.0)
2021-05-28 23:59:31,750 first assign: index_frac
2021-05-28 23:59:31,750 replaced with: index_frac = const(float, 0.0)
2021-05-28 23:59:31,750 on stmt: offset = const(int, 0)
2021-05-28 23:59:31,751 on stmt: eta = const(float, 0.0)
2021-05-28 23:59:31,751 on stmt: weight = const(float, 0.0)
2021-05-28 23:59:31,751 on stmt: $0.21 = getattr(value=interp_win, attr=shape)
2021-05-28 23:59:31,751 on stmt: $const0.22 = const(int, 0)
2021-05-28 23:59:31,751 on stmt: nwin = static_getitem(value=$0.21, index=0, index_var=$const0.22, fn=<built-in function getitem>)
2021-05-28 23:59:31,751 on stmt: $0.25 = getattr(value=x, attr=shape)
2021-05-28 23:59:31,751 on stmt: $const0.26 = const(int, 0)
2021-05-28 23:59:31,751 on stmt: n_orig = static_getitem(value=$0.25, index=0, index_var=$const0.26, fn=<built-in function getitem>)
2021-05-28 23:59:31,751 on stmt: $0.29 = getattr(value=y, attr=shape)
2021-05-28 23:59:31,751 on stmt: $const0.30 = const(int, 0)
2021-05-28 23:59:31,751 on stmt: n_out = static_getitem(value=$0.29, index=0, index_var=$const0.30, fn=<built-in function getitem>)
2021-05-28 23:59:31,751 on stmt: $0.33 = getattr(value=y, attr=shape)
2021-05-28 23:59:31,751 on stmt: $const0.34 = const(int, 1)
2021-05-28 23:59:31,751 on stmt: n_channels = static_getitem(value=$0.33, index=1, index_var=$const0.34, fn=<built-in function getitem>)
2021-05-28 23:59:31,751 on stmt: jump 100
2021-05-28 23:59:31,751 ==== SSA block rewrite pass on 100
2021-05-28 23:59:31,751 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,751 on stmt: jump 104
2021-05-28 23:59:31,751 ==== SSA block rewrite pass on 104
2021-05-28 23:59:31,751 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,751 on stmt: $104.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,751 on stmt: $104.3 = call $104.1(n_out, func=$104.1, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None)
2021-05-28 23:59:31,751 on stmt: $104.4 = getiter(value=$104.3)
2021-05-28 23:59:31,751 on stmt: $phi112.1 = $104.4
2021-05-28 23:59:31,751 on stmt: jump 112
2021-05-28 23:59:31,752 ==== SSA block rewrite pass on 112
2021-05-28 23:59:31,752 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,752 on stmt: time_register.2 = phi(incoming_values=[Var(time_register, interpn.py:13), Var(time_register.1, interpn.py:67)], incoming_blocks=[104, 466])
2021-05-28 23:59:31,752 on stmt: $112.2 = iternext(value=$phi112.1)
2021-05-28 23:59:31,752 on stmt: $112.3 = pair_first(value=$112.2)
2021-05-28 23:59:31,752 on stmt: $112.4 = pair_second(value=$112.2)
2021-05-28 23:59:31,752 on stmt: $phi116.1 = $112.3
2021-05-28 23:59:31,752 on stmt: $phi476.1 = $112.3
2021-05-28 23:59:31,752 on stmt: $phi476.2 = $phi112.1
2021-05-28 23:59:31,752 on stmt: branch $112.4, 116, 476
2021-05-28 23:59:31,752 ==== SSA block rewrite pass on 116
2021-05-28 23:59:31,752 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,752 on stmt: t = $phi116.1
2021-05-28 23:59:31,752 on stmt: $116.2 = global(int: <class 'int'>)
2021-05-28 23:59:31,752 on stmt: n = call $116.2(time_register.2, func=$116.2, args=[Var(time_register.2, interpn.py:27)], kws=(), vararg=None)
2021-05-28 23:59:31,752 on stmt: $116.8 = time_register.2 - n
2021-05-28 23:59:31,752 on stmt: frac = scale * $116.8
2021-05-28 23:59:31,752 on stmt: index_frac = frac * num_table
2021-05-28 23:59:31,752 replaced with: index_frac.1 = frac * num_table
2021-05-28 23:59:31,752 on stmt: $116.13 = global(int: <class 'int'>)
2021-05-28 23:59:31,752 on stmt: offset = call $116.13(index_frac, func=$116.13, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None)
2021-05-28 23:59:31,752 on stmt: eta = index_frac - offset
2021-05-28 23:59:31,753 on stmt: $116.19 = global(min: <built-in function min>)
2021-05-28 23:59:31,753 on stmt: $const116.21 = const(int, 1)
2021-05-28 23:59:31,753 on stmt: $116.22 = n + $const116.21
2021-05-28 23:59:31,753 on stmt: $116.25 = nwin - offset
2021-05-28 23:59:31,753 on stmt: $116.27 = $116.25 // index_step
2021-05-28 23:59:31,753 on stmt: i_max = call $116.19($116.22, $116.27, func=$116.19, args=[Var($116.22, interpn.py:42), Var($116.27, interpn.py:42)], kws=(), vararg=None)
2021-05-28 23:59:31,753 on stmt: jump 184
2021-05-28 23:59:31,753 ==== SSA block rewrite pass on 184
2021-05-28 23:59:31,753 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,753 on stmt: jump 186
2021-05-28 23:59:31,753 ==== SSA block rewrite pass on 186
2021-05-28 23:59:31,753 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,753 on stmt: $186.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,753 on stmt: $186.3 = call $186.1(i_max, func=$186.1, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None)
2021-05-28 23:59:31,753 on stmt: $186.4 = getiter(value=$186.3)
2021-05-28 23:59:31,753 on stmt: $phi194.1 = $186.4
2021-05-28 23:59:31,753 on stmt: jump 194
2021-05-28 23:59:31,753 ==== SSA block rewrite pass on 194
2021-05-28 23:59:31,753 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,753 on stmt: $194.2 = iternext(value=$phi194.1)
2021-05-28 23:59:31,753 on stmt: $194.3 = pair_first(value=$194.2)
2021-05-28 23:59:31,754 on stmt: $194.4 = pair_second(value=$194.2)
2021-05-28 23:59:31,754 on stmt: $phi196.1 = $194.3
2021-05-28 23:59:31,754 on stmt: $phi290.1 = $194.3
2021-05-28 23:59:31,754 on stmt: $phi290.2 = $phi194.1
2021-05-28 23:59:31,754 on stmt: branch $194.4, 196, 290
2021-05-28 23:59:31,754 ==== SSA block rewrite pass on 196
2021-05-28 23:59:31,754 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,754 on stmt: i = $phi196.1
2021-05-28 23:59:31,754 on stmt: $196.6 = i * index_step
2021-05-28 23:59:31,754 on stmt: $196.7 = offset + $196.6
2021-05-28 23:59:31,754 on stmt: $196.8 = getitem(value=interp_win, index=$196.7, fn=<built-in function getitem>)
2021-05-28 23:59:31,754 on stmt: $196.14 = i * index_step
2021-05-28 23:59:31,754 on stmt: $196.15 = offset + $196.14
2021-05-28 23:59:31,754 on stmt: $196.16 = getitem(value=interp_delta, index=$196.15, fn=<built-in function getitem>)
2021-05-28 23:59:31,754 on stmt: $196.17 = eta * $196.16
2021-05-28 23:59:31,754 on stmt: weight = $196.8 + $196.17
2021-05-28 23:59:31,754 on stmt: jump 234
2021-05-28 23:59:31,754 ==== SSA block rewrite pass on 234
2021-05-28 23:59:31,754 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,754 on stmt: jump 236
2021-05-28 23:59:31,754 ==== SSA block rewrite pass on 236
2021-05-28 23:59:31,754 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,754 on stmt: $236.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,754 on stmt: $236.3 = call $236.1(n_channels, func=$236.1, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-28 23:59:31,755 on stmt: $236.4 = getiter(value=$236.3)
2021-05-28 23:59:31,755 on stmt: $phi244.1 = $236.4
2021-05-28 23:59:31,755 on stmt: jump 244
2021-05-28 23:59:31,755 ==== SSA block rewrite pass on 244
2021-05-28 23:59:31,755 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,755 on stmt: $244.2 = iternext(value=$phi244.1)
2021-05-28 23:59:31,755 on stmt: $244.3 = pair_first(value=$244.2)
2021-05-28 23:59:31,755 on stmt: $244.4 = pair_second(value=$244.2)
2021-05-28 23:59:31,755 on stmt: $phi246.1 = $244.3
2021-05-28 23:59:31,755 on stmt: $phi286.1 = $244.3
2021-05-28 23:59:31,755 on stmt: $phi286.2 = $phi244.1
2021-05-28 23:59:31,755 on stmt: branch $244.4, 246, 286
2021-05-28 23:59:31,755 ==== SSA block rewrite pass on 246
2021-05-28 23:59:31,755 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,755 on stmt: j = $phi246.1
2021-05-28 23:59:31,755 on stmt: $246.5 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-28 23:59:31,755 on stmt: $246.8 = getitem(value=y, index=$246.5, fn=<built-in function getitem>)
2021-05-28 23:59:31,755 on stmt: $246.13 = n - i
2021-05-28 23:59:31,755 on stmt: $246.15 = build_tuple(items=[Var($246.13, interpn.py:47), Var(j, interpn.py:46)])
2021-05-28 23:59:31,755 on stmt: $246.16 = getitem(value=x, index=$246.15, fn=<built-in function getitem>)
2021-05-28 23:59:31,755 on stmt: $246.17 = weight * $246.16
2021-05-28 23:59:31,755 on stmt: $246.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$246.8, rhs=$246.17, static_lhs=Undefined, static_rhs=Undefined)
2021-05-28 23:59:31,755 on stmt: y[$246.5] = $246.18
2021-05-28 23:59:31,756 on stmt: jump 244
2021-05-28 23:59:31,756 ==== SSA block rewrite pass on 286
2021-05-28 23:59:31,756 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,756 on stmt: jump 288
2021-05-28 23:59:31,756 ==== SSA block rewrite pass on 288
2021-05-28 23:59:31,756 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,756 on stmt: jump 194
2021-05-28 23:59:31,756 ==== SSA block rewrite pass on 290
2021-05-28 23:59:31,756 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,756 on stmt: jump 292
2021-05-28 23:59:31,756 ==== SSA block rewrite pass on 292
2021-05-28 23:59:31,756 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,756 on stmt: $292.3 = scale - frac
2021-05-28 23:59:31,756 on stmt: frac = $292.3
2021-05-28 23:59:31,756 on stmt: index_frac = frac * num_table
2021-05-28 23:59:31,756 replaced with: index_frac.2 = frac * num_table
2021-05-28 23:59:31,756 on stmt: $292.7 = global(int: <class 'int'>)
2021-05-28 23:59:31,756 on stmt: offset = call $292.7(index_frac, func=$292.7, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None)
2021-05-28 23:59:31,756 on stmt: eta = index_frac - offset
2021-05-28 23:59:31,756 on stmt: $292.13 = global(min: <built-in function min>)
2021-05-28 23:59:31,756 on stmt: $292.16 = n_orig - n
2021-05-28 23:59:31,757 on stmt: $const292.17 = const(int, 1)
2021-05-28 23:59:31,757 on stmt: $292.18 = $292.16 - $const292.17
2021-05-28 23:59:31,757 on stmt: $292.21 = nwin - offset
2021-05-28 23:59:31,757 on stmt: $292.23 = $292.21 // index_step
2021-05-28 23:59:31,757 on stmt: k_max = call $292.13($292.18, $292.23, func=$292.13, args=[Var($292.18, interpn.py:60), Var($292.23, interpn.py:60)], kws=(), vararg=None)
2021-05-28 23:59:31,757 on stmt: jump 350
2021-05-28 23:59:31,757 ==== SSA block rewrite pass on 350
2021-05-28 23:59:31,757 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,757 on stmt: jump 352
2021-05-28 23:59:31,757 ==== SSA block rewrite pass on 352
2021-05-28 23:59:31,757 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,757 on stmt: $352.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,757 on stmt: $352.3 = call $352.1(k_max, func=$352.1, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None)
2021-05-28 23:59:31,757 on stmt: $352.4 = getiter(value=$352.3)
2021-05-28 23:59:31,757 on stmt: $phi360.1 = $352.4
2021-05-28 23:59:31,757 on stmt: jump 360
2021-05-28 23:59:31,757 ==== SSA block rewrite pass on 360
2021-05-28 23:59:31,757 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,757 on stmt: $360.2 = iternext(value=$phi360.1)
2021-05-28 23:59:31,757 on stmt: $360.3 = pair_first(value=$360.2)
2021-05-28 23:59:31,757 on stmt: $360.4 = pair_second(value=$360.2)
2021-05-28 23:59:31,757 on stmt: $phi362.1 = $360.3
2021-05-28 23:59:31,757 on stmt: $phi464.1 = $360.3
2021-05-28 23:59:31,757 on stmt: $phi464.2 = $phi360.1
2021-05-28 23:59:31,757 on stmt: branch $360.4, 362, 464
2021-05-28 23:59:31,757 ==== SSA block rewrite pass on 362
2021-05-28 23:59:31,758 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,758 on stmt: k = $phi362.1
2021-05-28 23:59:31,758 on stmt: $362.6 = k * index_step
2021-05-28 23:59:31,758 on stmt: $362.7 = offset + $362.6
2021-05-28 23:59:31,758 on stmt: $362.8 = getitem(value=interp_win, index=$362.7, fn=<built-in function getitem>)
2021-05-28 23:59:31,758 on stmt: $362.14 = k * index_step
2021-05-28 23:59:31,758 on stmt: $362.15 = offset + $362.14
2021-05-28 23:59:31,758 on stmt: $362.16 = getitem(value=interp_delta, index=$362.15, fn=<built-in function getitem>)
2021-05-28 23:59:31,758 on stmt: $362.17 = eta * $362.16
2021-05-28 23:59:31,758 on stmt: weight = $362.8 + $362.17
2021-05-28 23:59:31,758 on stmt: jump 400
2021-05-28 23:59:31,758 ==== SSA block rewrite pass on 400
2021-05-28 23:59:31,758 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,758 on stmt: jump 402
2021-05-28 23:59:31,758 ==== SSA block rewrite pass on 402
2021-05-28 23:59:31,758 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,758 on stmt: $402.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,758 on stmt: $402.3 = call $402.1(n_channels, func=$402.1, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-28 23:59:31,758 on stmt: $402.4 = getiter(value=$402.3)
2021-05-28 23:59:31,758 on stmt: $phi410.1 = $402.4
2021-05-28 23:59:31,758 on stmt: jump 410
2021-05-28 23:59:31,759 ==== SSA block rewrite pass on 410
2021-05-28 23:59:31,759 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,759 on stmt: $410.2 = iternext(value=$phi410.1)
2021-05-28 23:59:31,759 on stmt: $410.3 = pair_first(value=$410.2)
2021-05-28 23:59:31,759 on stmt: $410.4 = pair_second(value=$410.2)
2021-05-28 23:59:31,759 on stmt: $phi412.1 = $410.3
2021-05-28 23:59:31,759 on stmt: $phi458.1 = $410.3
2021-05-28 23:59:31,759 on stmt: $phi458.2 = $phi410.1
2021-05-28 23:59:31,759 on stmt: branch $410.4, 412, 458
2021-05-28 23:59:31,759 ==== SSA block rewrite pass on 412
2021-05-28 23:59:31,759 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,759 on stmt: j = $phi412.1
2021-05-28 23:59:31,759 on stmt: $412.5 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-28 23:59:31,759 on stmt: $412.8 = getitem(value=y, index=$412.5, fn=<built-in function getitem>)
2021-05-28 23:59:31,759 on stmt: $412.13 = n + k
2021-05-28 23:59:31,759 on stmt: $const412.14 = const(int, 1)
2021-05-28 23:59:31,759 on stmt: $412.15 = $412.13 + $const412.14
2021-05-28 23:59:31,759 on stmt: $412.17 = build_tuple(items=[Var($412.15, interpn.py:64), Var(j, interpn.py:46)])
2021-05-28 23:59:31,759 on stmt: $412.18 = getitem(value=x, index=$412.17, fn=<built-in function getitem>)
2021-05-28 23:59:31,759 on stmt: $412.19 = weight * $412.18
2021-05-28 23:59:31,759 on stmt: $412.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$412.8, rhs=$412.19, static_lhs=Undefined, static_rhs=Undefined)
2021-05-28 23:59:31,759 on stmt: y[$412.5] = $412.20
2021-05-28 23:59:31,759 on stmt: jump 410
2021-05-28 23:59:31,759 ==== SSA block rewrite pass on 458
2021-05-28 23:59:31,759 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,760 on stmt: jump 460
2021-05-28 23:59:31,760 ==== SSA block rewrite pass on 460
2021-05-28 23:59:31,760 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,760 on stmt: jump 360
2021-05-28 23:59:31,760 ==== SSA block rewrite pass on 464
2021-05-28 23:59:31,760 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,760 on stmt: jump 466
2021-05-28 23:59:31,760 ==== SSA block rewrite pass on 466
2021-05-28 23:59:31,760 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,760 on stmt: $466.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register.2, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
2021-05-28 23:59:31,760 on stmt: time_register.1 = $466.3
2021-05-28 23:59:31,760 on stmt: jump 112
2021-05-28 23:59:31,760 ==== SSA block rewrite pass on 476
2021-05-28 23:59:31,760 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,760 on stmt: jump 478
2021-05-28 23:59:31,760 ==== SSA block rewrite pass on 478
2021-05-28 23:59:31,760 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6EB8>
2021-05-28 23:59:31,760 on stmt: $const478.1 = const(NoneType, None)
2021-05-28 23:59:31,760 on stmt: $478.2 = cast(value=$const478.1)
2021-05-28 23:59:31,760 on stmt: return $478.2
2021-05-28 23:59:31,760 Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x00000168E88B6D30>],
             116: [<numba.core.ir.Assign object at 0x00000168E88B6DA0>],
             292: [<numba.core.ir.Assign object at 0x00000168E8845898>]})
2021-05-28 23:59:31,761 ==== SSA block rewrite pass on 0
2021-05-28 23:59:31,761 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F98>
2021-05-28 23:59:31,761 on stmt: x = arg(0, name=x)
2021-05-28 23:59:31,761 on stmt: y = arg(1, name=y)
2021-05-28 23:59:31,761 on stmt: sample_ratio = arg(2, name=sample_ratio)
2021-05-28 23:59:31,761 on stmt: interp_win = arg(3, name=interp_win)
2021-05-28 23:59:31,761 on stmt: interp_delta = arg(4, name=interp_delta)
2021-05-28 23:59:31,761 on stmt: num_table = arg(5, name=num_table)
2021-05-28 23:59:31,761 on stmt: $0.1 = global(min: <built-in function min>)
2021-05-28 23:59:31,761 on stmt: $const0.2 = const(float, 1.0)
2021-05-28 23:59:31,761 on stmt: scale = call $0.1($const0.2, sample_ratio, func=$0.1, args=[Var($const0.2, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None)
2021-05-28 23:59:31,761 on stmt: $const0.5 = const(float, 1.0)
2021-05-28 23:59:31,761 on stmt: time_increment = $const0.5 / sample_ratio
2021-05-28 23:59:31,761 on stmt: $0.8 = global(int: <class 'int'>)
2021-05-28 23:59:31,761 on stmt: $0.11 = scale * num_table
2021-05-28 23:59:31,761 on stmt: index_step = call $0.8($0.11, func=$0.8, args=[Var($0.11, interpn.py:12)], kws=(), vararg=None)
2021-05-28 23:59:31,761 on stmt: time_register = const(float, 0.0)
2021-05-28 23:59:31,762 on stmt: n = const(int, 0)
2021-05-28 23:59:31,762 on stmt: frac = const(float, 0.0)
2021-05-28 23:59:31,762 on stmt: index_frac = const(float, 0.0)
2021-05-28 23:59:31,762 on stmt: offset = const(int, 0)
2021-05-28 23:59:31,762 on stmt: eta = const(float, 0.0)
2021-05-28 23:59:31,762 on stmt: weight = const(float, 0.0)
2021-05-28 23:59:31,762 on stmt: $0.21 = getattr(value=interp_win, attr=shape)
2021-05-28 23:59:31,762 on stmt: $const0.22 = const(int, 0)
2021-05-28 23:59:31,762 on stmt: nwin = static_getitem(value=$0.21, index=0, index_var=$const0.22, fn=<built-in function getitem>)
2021-05-28 23:59:31,762 on stmt: $0.25 = getattr(value=x, attr=shape)
2021-05-28 23:59:31,762 on stmt: $const0.26 = const(int, 0)
2021-05-28 23:59:31,762 on stmt: n_orig = static_getitem(value=$0.25, index=0, index_var=$const0.26, fn=<built-in function getitem>)
2021-05-28 23:59:31,762 on stmt: $0.29 = getattr(value=y, attr=shape)
2021-05-28 23:59:31,762 on stmt: $const0.30 = const(int, 0)
2021-05-28 23:59:31,762 on stmt: n_out = static_getitem(value=$0.29, index=0, index_var=$const0.30, fn=<built-in function getitem>)
2021-05-28 23:59:31,762 on stmt: $0.33 = getattr(value=y, attr=shape)
2021-05-28 23:59:31,762 on stmt: $const0.34 = const(int, 1)
2021-05-28 23:59:31,763 on stmt: n_channels = static_getitem(value=$0.33, index=1, index_var=$const0.34, fn=<built-in function getitem>)
2021-05-28 23:59:31,763 on stmt: jump 100
2021-05-28 23:59:31,763 ==== SSA block rewrite pass on 100
2021-05-28 23:59:31,763 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F98>
2021-05-28 23:59:31,763 on stmt: jump 104
2021-05-28 23:59:31,763 ==== SSA block rewrite pass on 104
2021-05-28 23:59:31,763 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F98>
2021-05-28 23:59:31,763 on stmt: $104.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,763 on stmt: $104.3 = call $104.1(n_out, func=$104.1, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None)
2021-05-28 23:59:31,763 on stmt: $104.4 = getiter(value=$104.3)
2021-05-28 23:59:31,763 on stmt: $phi112.1 = $104.4
2021-05-28 23:59:31,763 on stmt: jump 112
2021-05-28 23:59:31,763 ==== SSA block rewrite pass on 112
2021-05-28 23:59:31,763 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F98>
2021-05-28 23:59:31,763 on stmt: time_register.2 = phi(incoming_values=[Var(time_register, interpn.py:13), Var(time_register.1, interpn.py:67)], incoming_blocks=[104, 466])
2021-05-28 23:59:31,763 on stmt: $112.2 = iternext(value=$phi112.1)
2021-05-28 23:59:31,763 on stmt: $112.3 = pair_first(value=$112.2)
2021-05-28 23:59:31,763 on stmt: $112.4 = pair_second(value=$112.2)
2021-05-28 23:59:31,763 on stmt: $phi116.1 = $112.3
2021-05-28 23:59:31,763 on stmt: $phi476.1 = $112.3
2021-05-28 23:59:31,763 on stmt: $phi476.2 = $phi112.1
2021-05-28 23:59:31,763 on stmt: branch $112.4, 116, 476
2021-05-28 23:59:31,763 ==== SSA block rewrite pass on 116
2021-05-28 23:59:31,763 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F98>
2021-05-28 23:59:31,764 on stmt: t = $phi116.1
2021-05-28 23:59:31,764 on stmt: $116.2 = global(int: <class 'int'>)
2021-05-28 23:59:31,764 on stmt: n = call $116.2(time_register.2, func=$116.2, args=[Var(time_register.2, interpn.py:27)], kws=(), vararg=None)
2021-05-28 23:59:31,764 on stmt: $116.8 = time_register.2 - n
2021-05-28 23:59:31,764 on stmt: frac = scale * $116.8
2021-05-28 23:59:31,764 on stmt: index_frac.1 = frac * num_table
2021-05-28 23:59:31,764 on stmt: $116.13 = global(int: <class 'int'>)
2021-05-28 23:59:31,764 on stmt: offset = call $116.13(index_frac, func=$116.13, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None)
2021-05-28 23:59:31,764 find_def var='index_frac' stmt=offset = call $116.13(index_frac, func=$116.13, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None)
2021-05-28 23:59:31,764 replaced with: offset = call $116.13(index_frac.1, func=$116.13, args=[Var(index_frac.1, interpn.py:35)], kws=(), vararg=None)
2021-05-28 23:59:31,764 on stmt: eta = index_frac - offset
2021-05-28 23:59:31,764 find_def var='index_frac' stmt=eta = index_frac - offset
2021-05-28 23:59:31,764 replaced with: eta = index_frac.1 - offset
2021-05-28 23:59:31,764 on stmt: $116.19 = global(min: <built-in function min>)
2021-05-28 23:59:31,764 on stmt: $const116.21 = const(int, 1)
2021-05-28 23:59:31,764 on stmt: $116.22 = n + $const116.21
2021-05-28 23:59:31,764 on stmt: $116.25 = nwin - offset
2021-05-28 23:59:31,764 on stmt: $116.27 = $116.25 // index_step
2021-05-28 23:59:31,764 on stmt: i_max = call $116.19($116.22, $116.27, func=$116.19, args=[Var($116.22, interpn.py:42), Var($116.27, interpn.py:42)], kws=(), vararg=None)
2021-05-28 23:59:31,764 on stmt: jump 184
2021-05-28 23:59:31,765 ==== SSA block rewrite pass on 184
2021-05-28 23:59:31,765 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F98>
2021-05-28 23:59:31,765 on stmt: jump 186
2021-05-28 23:59:31,765 ==== SSA block rewrite pass on 186
2021-05-28 23:59:31,765 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F98>
2021-05-28 23:59:31,765 on stmt: $186.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,765 on stmt: $186.3 = call $186.1(i_max, func=$186.1, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None)
2021-05-28 23:59:31,765 on stmt: $186.4 = getiter(value=$186.3)
2021-05-28 23:59:31,765 on stmt: $phi194.1 = $186.4
2021-05-28 23:59:31,765 on stmt: jump 194
2021-05-28 23:59:31,765 ==== SSA block rewrite pass on 194
2021-05-28 23:59:31,765 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F98>
2021-05-28 23:59:31,765 on stmt: $194.2 = iternext(value=$phi194.1)
2021-05-28 23:59:31,765 on stmt: $194.3 = pair_first(value=$194.2)
2021-05-28 23:59:31,765 on stmt: $194.4 = pair_second(value=$194.2)
2021-05-28 23:59:31,765 on stmt: $phi196.1 = $194.3
2021-05-28 23:59:31,765 on stmt: $phi290.1 = $194.3
2021-05-28 23:59:31,765 on stmt: $phi290.2 = $phi194.1
2021-05-28 23:59:31,765 on stmt: branch $194.4, 196, 290
2021-05-28 23:59:31,765 ==== SSA block rewrite pass on 196
2021-05-28 23:59:31,765 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F98>
2021-05-28 23:59:31,765 on stmt: i = $phi196.1
2021-05-28 23:59:31,765 on stmt: $196.6 = i * index_step
2021-05-28 23:59:31,765 on stmt: $196.7 = offset + $196.6
2021-05-28 23:59:31,766 on stmt: $196.8 = getitem(value=interp_win, index=$196.7, fn=<built-in function getitem>)
2021-05-28 23:59:31,766 on stmt: $196.14 = i * index_step
2021-05-28 23:59:31,766 on stmt: $196.15 = offset + $196.14
2021-05-28 23:59:31,766 on stmt: $196.16 = getitem(value=interp_delta, index=$196.15, fn=<built-in function getitem>)
2021-05-28 23:59:31,766 on stmt: $196.17 = eta * $196.16
2021-05-28 23:59:31,766 on stmt: weight = $196.8 + $196.17
2021-05-28 23:59:31,766 on stmt: jump 234
2021-05-28 23:59:31,766 ==== SSA block rewrite pass on 234
2021-05-28 23:59:31,766 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F98>
2021-05-28 23:59:31,766 on stmt: jump 236
2021-05-28 23:59:31,766 ==== SSA block rewrite pass on 236
2021-05-28 23:59:31,766 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F98>
2021-05-28 23:59:31,766 on stmt: $236.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,766 on stmt: $236.3 = call $236.1(n_channels, func=$236.1, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-28 23:59:31,766 on stmt: $236.4 = getiter(value=$236.3)
2021-05-28 23:59:31,766 on stmt: $phi244.1 = $236.4
2021-05-28 23:59:31,766 on stmt: jump 244
2021-05-28 23:59:31,766 ==== SSA block rewrite pass on 244
2021-05-28 23:59:31,766 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F98>
2021-05-28 23:59:31,767 on stmt: $244.2 = iternext(value=$phi244.1)
2021-05-28 23:59:31,767 on stmt: $244.3 = pair_first(value=$244.2)
2021-05-28 23:59:31,767 on stmt: $244.4 = pair_second(value=$244.2)
2021-05-28 23:59:31,767 on stmt: $phi246.1 = $244.3
2021-05-28 23:59:31,767 on stmt: $phi286.1 = $244.3
2021-05-28 23:59:31,767 on stmt: $phi286.2 = $phi244.1
2021-05-28 23:59:31,767 on stmt: branch $244.4, 246, 286
2021-05-28 23:59:31,767 ==== SSA block rewrite pass on 246
2021-05-28 23:59:31,767 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F98>
2021-05-28 23:59:31,767 on stmt: j = $phi246.1
2021-05-28 23:59:31,767 on stmt: $246.5 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-28 23:59:31,767 on stmt: $246.8 = getitem(value=y, index=$246.5, fn=<built-in function getitem>)
2021-05-28 23:59:31,767 on stmt: $246.13 = n - i
2021-05-28 23:59:31,767 on stmt: $246.15 = build_tuple(items=[Var($246.13, interpn.py:47), Var(j, interpn.py:46)])
2021-05-28 23:59:31,767 on stmt: $246.16 = getitem(value=x, index=$246.15, fn=<built-in function getitem>)
2021-05-28 23:59:31,767 on stmt: $246.17 = weight * $246.16
2021-05-28 23:59:31,767 on stmt: $246.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$246.8, rhs=$246.17, static_lhs=Undefined, static_rhs=Undefined)
2021-05-28 23:59:31,767 on stmt: y[$246.5] = $246.18
2021-05-28 23:59:31,767 on stmt: jump 244
2021-05-28 23:59:31,767 ==== SSA block rewrite pass on 286
2021-05-28 23:59:31,767 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F98>
2021-05-28 23:59:31,767 on stmt: jump 288
2021-05-28 23:59:31,767 ==== SSA block rewrite pass on 288
2021-05-28 23:59:31,767 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F98>
2021-05-28 23:59:31,768 on stmt: jump 194
2021-05-28 23:59:31,768 ==== SSA block rewrite pass on 290
2021-05-28 23:59:31,768 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F98>
2021-05-28 23:59:31,768 on stmt: jump 292
2021-05-28 23:59:31,768 ==== SSA block rewrite pass on 292
2021-05-28 23:59:31,768 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F98>
2021-05-28 23:59:31,768 on stmt: $292.3 = scale - frac
2021-05-28 23:59:31,768 on stmt: frac = $292.3
2021-05-28 23:59:31,768 on stmt: index_frac.2 = frac * num_table
2021-05-28 23:59:31,768 on stmt: $292.7 = global(int: <class 'int'>)
2021-05-28 23:59:31,768 on stmt: offset = call $292.7(index_frac, func=$292.7, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None)
2021-05-28 23:59:31,768 find_def var='index_frac' stmt=offset = call $292.7(index_frac, func=$292.7, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None)
2021-05-28 23:59:31,768 replaced with: offset = call $292.7(index_frac.2, func=$292.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None)
2021-05-28 23:59:31,768 on stmt: eta = index_frac - offset
2021-05-28 23:59:31,768 find_def var='index_frac' stmt=eta = index_frac - offset
2021-05-28 23:59:31,768 replaced with: eta = index_frac.2 - offset
2021-05-28 23:59:31,769 on stmt: $292.13 = global(min: <built-in function min>)
2021-05-28 23:59:31,769 on stmt: $292.16 = n_orig - n
2021-05-28 23:59:31,769 on stmt: $const292.17 = const(int, 1)
2021-05-28 23:59:31,769 on stmt: $292.18 = $292.16 - $const292.17
2021-05-28 23:59:31,769 on stmt: $292.21 = nwin - offset
2021-05-28 23:59:31,769 on stmt: $292.23 = $292.21 // index_step
2021-05-28 23:59:31,769 on stmt: k_max = call $292.13($292.18, $292.23, func=$292.13, args=[Var($292.18, interpn.py:60), Var($292.23, interpn.py:60)], kws=(), vararg=None)
2021-05-28 23:59:31,769 on stmt: jump 350
2021-05-28 23:59:31,769 ==== SSA block rewrite pass on 350
2021-05-28 23:59:31,769 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F98>
2021-05-28 23:59:31,769 on stmt: jump 352
2021-05-28 23:59:31,769 ==== SSA block rewrite pass on 352
2021-05-28 23:59:31,769 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F98>
2021-05-28 23:59:31,769 on stmt: $352.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,769 on stmt: $352.3 = call $352.1(k_max, func=$352.1, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None)
2021-05-28 23:59:31,769 on stmt: $352.4 = getiter(value=$352.3)
2021-05-28 23:59:31,770 on stmt: $phi360.1 = $352.4
2021-05-28 23:59:31,770 on stmt: jump 360
2021-05-28 23:59:31,770 ==== SSA block rewrite pass on 360
2021-05-28 23:59:31,770 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F98>
2021-05-28 23:59:31,770 on stmt: $360.2 = iternext(value=$phi360.1)
2021-05-28 23:59:31,770 on stmt: $360.3 = pair_first(value=$360.2)
2021-05-28 23:59:31,770 on stmt: $360.4 = pair_second(value=$360.2)
2021-05-28 23:59:31,770 on stmt: $phi362.1 = $360.3
2021-05-28 23:59:31,770 on stmt: $phi464.1 = $360.3
2021-05-28 23:59:31,770 on stmt: $phi464.2 = $phi360.1
2021-05-28 23:59:31,770 on stmt: branch $360.4, 362, 464
2021-05-28 23:59:31,770 ==== SSA block rewrite pass on 362
2021-05-28 23:59:31,770 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F98>
2021-05-28 23:59:31,770 on stmt: k = $phi362.1
2021-05-28 23:59:31,770 on stmt: $362.6 = k * index_step
2021-05-28 23:59:31,770 on stmt: $362.7 = offset + $362.6
2021-05-28 23:59:31,770 on stmt: $362.8 = getitem(value=interp_win, index=$362.7, fn=<built-in function getitem>)
2021-05-28 23:59:31,770 on stmt: $362.14 = k * index_step
2021-05-28 23:59:31,770 on stmt: $362.15 = offset + $362.14
2021-05-28 23:59:31,770 on stmt: $362.16 = getitem(value=interp_delta, index=$362.15, fn=<built-in function getitem>)
2021-05-28 23:59:31,771 on stmt: $362.17 = eta * $362.16
2021-05-28 23:59:31,771 on stmt: weight = $362.8 + $362.17
2021-05-28 23:59:31,771 on stmt: jump 400
2021-05-28 23:59:31,771 ==== SSA block rewrite pass on 400
2021-05-28 23:59:31,771 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F98>
2021-05-28 23:59:31,771 on stmt: jump 402
2021-05-28 23:59:31,771 ==== SSA block rewrite pass on 402
2021-05-28 23:59:31,771 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F98>
2021-05-28 23:59:31,771 on stmt: $402.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,771 on stmt: $402.3 = call $402.1(n_channels, func=$402.1, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-28 23:59:31,771 on stmt: $402.4 = getiter(value=$402.3)
2021-05-28 23:59:31,771 on stmt: $phi410.1 = $402.4
2021-05-28 23:59:31,771 on stmt: jump 410
2021-05-28 23:59:31,771 ==== SSA block rewrite pass on 410
2021-05-28 23:59:31,771 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F98>
2021-05-28 23:59:31,771 on stmt: $410.2 = iternext(value=$phi410.1)
2021-05-28 23:59:31,771 on stmt: $410.3 = pair_first(value=$410.2)
2021-05-28 23:59:31,771 on stmt: $410.4 = pair_second(value=$410.2)
2021-05-28 23:59:31,771 on stmt: $phi412.1 = $410.3
2021-05-28 23:59:31,771 on stmt: $phi458.1 = $410.3
2021-05-28 23:59:31,771 on stmt: $phi458.2 = $phi410.1
2021-05-28 23:59:31,771 on stmt: branch $410.4, 412, 458
2021-05-28 23:59:31,771 ==== SSA block rewrite pass on 412
2021-05-28 23:59:31,771 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F98>
2021-05-28 23:59:31,771 on stmt: j = $phi412.1
2021-05-28 23:59:31,772 on stmt: $412.5 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-28 23:59:31,772 on stmt: $412.8 = getitem(value=y, index=$412.5, fn=<built-in function getitem>)
2021-05-28 23:59:31,772 on stmt: $412.13 = n + k
2021-05-28 23:59:31,772 on stmt: $const412.14 = const(int, 1)
2021-05-28 23:59:31,772 on stmt: $412.15 = $412.13 + $const412.14
2021-05-28 23:59:31,772 on stmt: $412.17 = build_tuple(items=[Var($412.15, interpn.py:64), Var(j, interpn.py:46)])
2021-05-28 23:59:31,772 on stmt: $412.18 = getitem(value=x, index=$412.17, fn=<built-in function getitem>)
2021-05-28 23:59:31,772 on stmt: $412.19 = weight * $412.18
2021-05-28 23:59:31,772 on stmt: $412.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$412.8, rhs=$412.19, static_lhs=Undefined, static_rhs=Undefined)
2021-05-28 23:59:31,772 on stmt: y[$412.5] = $412.20
2021-05-28 23:59:31,772 on stmt: jump 410
2021-05-28 23:59:31,772 ==== SSA block rewrite pass on 458
2021-05-28 23:59:31,772 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F98>
2021-05-28 23:59:31,772 on stmt: jump 460
2021-05-28 23:59:31,772 ==== SSA block rewrite pass on 460
2021-05-28 23:59:31,772 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F98>
2021-05-28 23:59:31,772 on stmt: jump 360
2021-05-28 23:59:31,772 ==== SSA block rewrite pass on 464
2021-05-28 23:59:31,772 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F98>
2021-05-28 23:59:31,772 on stmt: jump 466
2021-05-28 23:59:31,772 ==== SSA block rewrite pass on 466
2021-05-28 23:59:31,772 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F98>
2021-05-28 23:59:31,772 on stmt: $466.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register.2, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
2021-05-28 23:59:31,773 on stmt: time_register.1 = $466.3
2021-05-28 23:59:31,773 on stmt: jump 112
2021-05-28 23:59:31,773 ==== SSA block rewrite pass on 476
2021-05-28 23:59:31,773 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F98>
2021-05-28 23:59:31,773 on stmt: jump 478
2021-05-28 23:59:31,773 ==== SSA block rewrite pass on 478
2021-05-28 23:59:31,773 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F98>
2021-05-28 23:59:31,773 on stmt: $const478.1 = const(NoneType, None)
2021-05-28 23:59:31,773 on stmt: $478.2 = cast(value=$const478.1)
2021-05-28 23:59:31,773 on stmt: return $478.2
2021-05-28 23:59:31,773 Fix SSA violator on var offset
2021-05-28 23:59:31,773 ==== SSA block rewrite pass on 0
2021-05-28 23:59:31,773 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,773 on stmt: x = arg(0, name=x)
2021-05-28 23:59:31,773 on stmt: y = arg(1, name=y)
2021-05-28 23:59:31,773 on stmt: sample_ratio = arg(2, name=sample_ratio)
2021-05-28 23:59:31,773 on stmt: interp_win = arg(3, name=interp_win)
2021-05-28 23:59:31,773 on stmt: interp_delta = arg(4, name=interp_delta)
2021-05-28 23:59:31,773 on stmt: num_table = arg(5, name=num_table)
2021-05-28 23:59:31,773 on stmt: $0.1 = global(min: <built-in function min>)
2021-05-28 23:59:31,773 on stmt: $const0.2 = const(float, 1.0)
2021-05-28 23:59:31,773 on stmt: scale = call $0.1($const0.2, sample_ratio, func=$0.1, args=[Var($const0.2, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None)
2021-05-28 23:59:31,773 on stmt: $const0.5 = const(float, 1.0)
2021-05-28 23:59:31,773 on stmt: time_increment = $const0.5 / sample_ratio
2021-05-28 23:59:31,774 on stmt: $0.8 = global(int: <class 'int'>)
2021-05-28 23:59:31,774 on stmt: $0.11 = scale * num_table
2021-05-28 23:59:31,774 on stmt: index_step = call $0.8($0.11, func=$0.8, args=[Var($0.11, interpn.py:12)], kws=(), vararg=None)
2021-05-28 23:59:31,774 on stmt: time_register = const(float, 0.0)
2021-05-28 23:59:31,774 on stmt: n = const(int, 0)
2021-05-28 23:59:31,774 on stmt: frac = const(float, 0.0)
2021-05-28 23:59:31,774 on stmt: index_frac = const(float, 0.0)
2021-05-28 23:59:31,774 on stmt: offset = const(int, 0)
2021-05-28 23:59:31,774 first assign: offset
2021-05-28 23:59:31,774 replaced with: offset = const(int, 0)
2021-05-28 23:59:31,774 on stmt: eta = const(float, 0.0)
2021-05-28 23:59:31,774 on stmt: weight = const(float, 0.0)
2021-05-28 23:59:31,774 on stmt: $0.21 = getattr(value=interp_win, attr=shape)
2021-05-28 23:59:31,774 on stmt: $const0.22 = const(int, 0)
2021-05-28 23:59:31,774 on stmt: nwin = static_getitem(value=$0.21, index=0, index_var=$const0.22, fn=<built-in function getitem>)
2021-05-28 23:59:31,774 on stmt: $0.25 = getattr(value=x, attr=shape)
2021-05-28 23:59:31,774 on stmt: $const0.26 = const(int, 0)
2021-05-28 23:59:31,774 on stmt: n_orig = static_getitem(value=$0.25, index=0, index_var=$const0.26, fn=<built-in function getitem>)
2021-05-28 23:59:31,774 on stmt: $0.29 = getattr(value=y, attr=shape)
2021-05-28 23:59:31,774 on stmt: $const0.30 = const(int, 0)
2021-05-28 23:59:31,774 on stmt: n_out = static_getitem(value=$0.29, index=0, index_var=$const0.30, fn=<built-in function getitem>)
2021-05-28 23:59:31,774 on stmt: $0.33 = getattr(value=y, attr=shape)
2021-05-28 23:59:31,774 on stmt: $const0.34 = const(int, 1)
2021-05-28 23:59:31,774 on stmt: n_channels = static_getitem(value=$0.33, index=1, index_var=$const0.34, fn=<built-in function getitem>)
2021-05-28 23:59:31,775 on stmt: jump 100
2021-05-28 23:59:31,775 ==== SSA block rewrite pass on 100
2021-05-28 23:59:31,775 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,775 on stmt: jump 104
2021-05-28 23:59:31,775 ==== SSA block rewrite pass on 104
2021-05-28 23:59:31,775 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,775 on stmt: $104.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,775 on stmt: $104.3 = call $104.1(n_out, func=$104.1, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None)
2021-05-28 23:59:31,775 on stmt: $104.4 = getiter(value=$104.3)
2021-05-28 23:59:31,775 on stmt: $phi112.1 = $104.4
2021-05-28 23:59:31,775 on stmt: jump 112
2021-05-28 23:59:31,775 ==== SSA block rewrite pass on 112
2021-05-28 23:59:31,775 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,775 on stmt: time_register.2 = phi(incoming_values=[Var(time_register, interpn.py:13), Var(time_register.1, interpn.py:67)], incoming_blocks=[104, 466])
2021-05-28 23:59:31,775 on stmt: $112.2 = iternext(value=$phi112.1)
2021-05-28 23:59:31,775 on stmt: $112.3 = pair_first(value=$112.2)
2021-05-28 23:59:31,775 on stmt: $112.4 = pair_second(value=$112.2)
2021-05-28 23:59:31,775 on stmt: $phi116.1 = $112.3
2021-05-28 23:59:31,775 on stmt: $phi476.1 = $112.3
2021-05-28 23:59:31,775 on stmt: $phi476.2 = $phi112.1
2021-05-28 23:59:31,775 on stmt: branch $112.4, 116, 476
2021-05-28 23:59:31,775 ==== SSA block rewrite pass on 116
2021-05-28 23:59:31,775 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,775 on stmt: t = $phi116.1
2021-05-28 23:59:31,775 on stmt: $116.2 = global(int: <class 'int'>)
2021-05-28 23:59:31,775 on stmt: n = call $116.2(time_register.2, func=$116.2, args=[Var(time_register.2, interpn.py:27)], kws=(), vararg=None)
2021-05-28 23:59:31,776 on stmt: $116.8 = time_register.2 - n
2021-05-28 23:59:31,776 on stmt: frac = scale * $116.8
2021-05-28 23:59:31,776 on stmt: index_frac.1 = frac * num_table
2021-05-28 23:59:31,776 on stmt: $116.13 = global(int: <class 'int'>)
2021-05-28 23:59:31,776 on stmt: offset = call $116.13(index_frac.1, func=$116.13, args=[Var(index_frac.1, interpn.py:35)], kws=(), vararg=None)
2021-05-28 23:59:31,776 replaced with: offset.1 = call $116.13(index_frac.1, func=$116.13, args=[Var(index_frac.1, interpn.py:35)], kws=(), vararg=None)
2021-05-28 23:59:31,776 on stmt: eta = index_frac.1 - offset
2021-05-28 23:59:31,776 on stmt: $116.19 = global(min: <built-in function min>)
2021-05-28 23:59:31,776 on stmt: $const116.21 = const(int, 1)
2021-05-28 23:59:31,776 on stmt: $116.22 = n + $const116.21
2021-05-28 23:59:31,776 on stmt: $116.25 = nwin - offset
2021-05-28 23:59:31,776 on stmt: $116.27 = $116.25 // index_step
2021-05-28 23:59:31,776 on stmt: i_max = call $116.19($116.22, $116.27, func=$116.19, args=[Var($116.22, interpn.py:42), Var($116.27, interpn.py:42)], kws=(), vararg=None)
2021-05-28 23:59:31,776 on stmt: jump 184
2021-05-28 23:59:31,776 ==== SSA block rewrite pass on 184
2021-05-28 23:59:31,776 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,776 on stmt: jump 186
2021-05-28 23:59:31,776 ==== SSA block rewrite pass on 186
2021-05-28 23:59:31,776 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,776 on stmt: $186.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,776 on stmt: $186.3 = call $186.1(i_max, func=$186.1, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None)
2021-05-28 23:59:31,777 on stmt: $186.4 = getiter(value=$186.3)
2021-05-28 23:59:31,777 on stmt: $phi194.1 = $186.4
2021-05-28 23:59:31,777 on stmt: jump 194
2021-05-28 23:59:31,777 ==== SSA block rewrite pass on 194
2021-05-28 23:59:31,777 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,777 on stmt: $194.2 = iternext(value=$phi194.1)
2021-05-28 23:59:31,777 on stmt: $194.3 = pair_first(value=$194.2)
2021-05-28 23:59:31,777 on stmt: $194.4 = pair_second(value=$194.2)
2021-05-28 23:59:31,777 on stmt: $phi196.1 = $194.3
2021-05-28 23:59:31,777 on stmt: $phi290.1 = $194.3
2021-05-28 23:59:31,777 on stmt: $phi290.2 = $phi194.1
2021-05-28 23:59:31,777 on stmt: branch $194.4, 196, 290
2021-05-28 23:59:31,777 ==== SSA block rewrite pass on 196
2021-05-28 23:59:31,777 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,777 on stmt: i = $phi196.1
2021-05-28 23:59:31,777 on stmt: $196.6 = i * index_step
2021-05-28 23:59:31,777 on stmt: $196.7 = offset + $196.6
2021-05-28 23:59:31,777 on stmt: $196.8 = getitem(value=interp_win, index=$196.7, fn=<built-in function getitem>)
2021-05-28 23:59:31,777 on stmt: $196.14 = i * index_step
2021-05-28 23:59:31,778 on stmt: $196.15 = offset + $196.14
2021-05-28 23:59:31,778 on stmt: $196.16 = getitem(value=interp_delta, index=$196.15, fn=<built-in function getitem>)
2021-05-28 23:59:31,778 on stmt: $196.17 = eta * $196.16
2021-05-28 23:59:31,778 on stmt: weight = $196.8 + $196.17
2021-05-28 23:59:31,778 on stmt: jump 234
2021-05-28 23:59:31,778 ==== SSA block rewrite pass on 234
2021-05-28 23:59:31,778 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,778 on stmt: jump 236
2021-05-28 23:59:31,778 ==== SSA block rewrite pass on 236
2021-05-28 23:59:31,778 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,778 on stmt: $236.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,778 on stmt: $236.3 = call $236.1(n_channels, func=$236.1, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-28 23:59:31,778 on stmt: $236.4 = getiter(value=$236.3)
2021-05-28 23:59:31,778 on stmt: $phi244.1 = $236.4
2021-05-28 23:59:31,778 on stmt: jump 244
2021-05-28 23:59:31,778 ==== SSA block rewrite pass on 244
2021-05-28 23:59:31,778 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,778 on stmt: $244.2 = iternext(value=$phi244.1)
2021-05-28 23:59:31,778 on stmt: $244.3 = pair_first(value=$244.2)
2021-05-28 23:59:31,778 on stmt: $244.4 = pair_second(value=$244.2)
2021-05-28 23:59:31,779 on stmt: $phi246.1 = $244.3
2021-05-28 23:59:31,779 on stmt: $phi286.1 = $244.3
2021-05-28 23:59:31,779 on stmt: $phi286.2 = $phi244.1
2021-05-28 23:59:31,779 on stmt: branch $244.4, 246, 286
2021-05-28 23:59:31,779 ==== SSA block rewrite pass on 246
2021-05-28 23:59:31,779 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,779 on stmt: j = $phi246.1
2021-05-28 23:59:31,779 on stmt: $246.5 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-28 23:59:31,779 on stmt: $246.8 = getitem(value=y, index=$246.5, fn=<built-in function getitem>)
2021-05-28 23:59:31,779 on stmt: $246.13 = n - i
2021-05-28 23:59:31,779 on stmt: $246.15 = build_tuple(items=[Var($246.13, interpn.py:47), Var(j, interpn.py:46)])
2021-05-28 23:59:31,779 on stmt: $246.16 = getitem(value=x, index=$246.15, fn=<built-in function getitem>)
2021-05-28 23:59:31,779 on stmt: $246.17 = weight * $246.16
2021-05-28 23:59:31,779 on stmt: $246.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$246.8, rhs=$246.17, static_lhs=Undefined, static_rhs=Undefined)
2021-05-28 23:59:31,779 on stmt: y[$246.5] = $246.18
2021-05-28 23:59:31,779 on stmt: jump 244
2021-05-28 23:59:31,779 ==== SSA block rewrite pass on 286
2021-05-28 23:59:31,779 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,779 on stmt: jump 288
2021-05-28 23:59:31,779 ==== SSA block rewrite pass on 288
2021-05-28 23:59:31,779 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,780 on stmt: jump 194
2021-05-28 23:59:31,780 ==== SSA block rewrite pass on 290
2021-05-28 23:59:31,780 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,780 on stmt: jump 292
2021-05-28 23:59:31,780 ==== SSA block rewrite pass on 292
2021-05-28 23:59:31,780 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,780 on stmt: $292.3 = scale - frac
2021-05-28 23:59:31,780 on stmt: frac = $292.3
2021-05-28 23:59:31,780 on stmt: index_frac.2 = frac * num_table
2021-05-28 23:59:31,780 on stmt: $292.7 = global(int: <class 'int'>)
2021-05-28 23:59:31,780 on stmt: offset = call $292.7(index_frac.2, func=$292.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None)
2021-05-28 23:59:31,780 replaced with: offset.2 = call $292.7(index_frac.2, func=$292.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None)
2021-05-28 23:59:31,780 on stmt: eta = index_frac.2 - offset
2021-05-28 23:59:31,780 on stmt: $292.13 = global(min: <built-in function min>)
2021-05-28 23:59:31,780 on stmt: $292.16 = n_orig - n
2021-05-28 23:59:31,780 on stmt: $const292.17 = const(int, 1)
2021-05-28 23:59:31,780 on stmt: $292.18 = $292.16 - $const292.17
2021-05-28 23:59:31,780 on stmt: $292.21 = nwin - offset
2021-05-28 23:59:31,780 on stmt: $292.23 = $292.21 // index_step
2021-05-28 23:59:31,780 on stmt: k_max = call $292.13($292.18, $292.23, func=$292.13, args=[Var($292.18, interpn.py:60), Var($292.23, interpn.py:60)], kws=(), vararg=None)
2021-05-28 23:59:31,780 on stmt: jump 350
2021-05-28 23:59:31,780 ==== SSA block rewrite pass on 350
2021-05-28 23:59:31,780 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,780 on stmt: jump 352
2021-05-28 23:59:31,781 ==== SSA block rewrite pass on 352
2021-05-28 23:59:31,781 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,781 on stmt: $352.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,781 on stmt: $352.3 = call $352.1(k_max, func=$352.1, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None)
2021-05-28 23:59:31,781 on stmt: $352.4 = getiter(value=$352.3)
2021-05-28 23:59:31,781 on stmt: $phi360.1 = $352.4
2021-05-28 23:59:31,781 on stmt: jump 360
2021-05-28 23:59:31,781 ==== SSA block rewrite pass on 360
2021-05-28 23:59:31,781 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,781 on stmt: $360.2 = iternext(value=$phi360.1)
2021-05-28 23:59:31,781 on stmt: $360.3 = pair_first(value=$360.2)
2021-05-28 23:59:31,781 on stmt: $360.4 = pair_second(value=$360.2)
2021-05-28 23:59:31,781 on stmt: $phi362.1 = $360.3
2021-05-28 23:59:31,781 on stmt: $phi464.1 = $360.3
2021-05-28 23:59:31,781 on stmt: $phi464.2 = $phi360.1
2021-05-28 23:59:31,781 on stmt: branch $360.4, 362, 464
2021-05-28 23:59:31,781 ==== SSA block rewrite pass on 362
2021-05-28 23:59:31,781 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,781 on stmt: k = $phi362.1
2021-05-28 23:59:31,781 on stmt: $362.6 = k * index_step
2021-05-28 23:59:31,781 on stmt: $362.7 = offset + $362.6
2021-05-28 23:59:31,781 on stmt: $362.8 = getitem(value=interp_win, index=$362.7, fn=<built-in function getitem>)
2021-05-28 23:59:31,781 on stmt: $362.14 = k * index_step
2021-05-28 23:59:31,781 on stmt: $362.15 = offset + $362.14
2021-05-28 23:59:31,781 on stmt: $362.16 = getitem(value=interp_delta, index=$362.15, fn=<built-in function getitem>)
2021-05-28 23:59:31,782 on stmt: $362.17 = eta * $362.16
2021-05-28 23:59:31,782 on stmt: weight = $362.8 + $362.17
2021-05-28 23:59:31,782 on stmt: jump 400
2021-05-28 23:59:31,782 ==== SSA block rewrite pass on 400
2021-05-28 23:59:31,782 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,782 on stmt: jump 402
2021-05-28 23:59:31,782 ==== SSA block rewrite pass on 402
2021-05-28 23:59:31,782 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,782 on stmt: $402.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,782 on stmt: $402.3 = call $402.1(n_channels, func=$402.1, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-28 23:59:31,782 on stmt: $402.4 = getiter(value=$402.3)
2021-05-28 23:59:31,782 on stmt: $phi410.1 = $402.4
2021-05-28 23:59:31,782 on stmt: jump 410
2021-05-28 23:59:31,782 ==== SSA block rewrite pass on 410
2021-05-28 23:59:31,782 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,782 on stmt: $410.2 = iternext(value=$phi410.1)
2021-05-28 23:59:31,782 on stmt: $410.3 = pair_first(value=$410.2)
2021-05-28 23:59:31,782 on stmt: $410.4 = pair_second(value=$410.2)
2021-05-28 23:59:31,782 on stmt: $phi412.1 = $410.3
2021-05-28 23:59:31,782 on stmt: $phi458.1 = $410.3
2021-05-28 23:59:31,782 on stmt: $phi458.2 = $phi410.1
2021-05-28 23:59:31,782 on stmt: branch $410.4, 412, 458
2021-05-28 23:59:31,782 ==== SSA block rewrite pass on 412
2021-05-28 23:59:31,782 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,782 on stmt: j = $phi412.1
2021-05-28 23:59:31,782 on stmt: $412.5 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-28 23:59:31,783 on stmt: $412.8 = getitem(value=y, index=$412.5, fn=<built-in function getitem>)
2021-05-28 23:59:31,783 on stmt: $412.13 = n + k
2021-05-28 23:59:31,783 on stmt: $const412.14 = const(int, 1)
2021-05-28 23:59:31,783 on stmt: $412.15 = $412.13 + $const412.14
2021-05-28 23:59:31,783 on stmt: $412.17 = build_tuple(items=[Var($412.15, interpn.py:64), Var(j, interpn.py:46)])
2021-05-28 23:59:31,783 on stmt: $412.18 = getitem(value=x, index=$412.17, fn=<built-in function getitem>)
2021-05-28 23:59:31,783 on stmt: $412.19 = weight * $412.18
2021-05-28 23:59:31,783 on stmt: $412.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$412.8, rhs=$412.19, static_lhs=Undefined, static_rhs=Undefined)
2021-05-28 23:59:31,783 on stmt: y[$412.5] = $412.20
2021-05-28 23:59:31,783 on stmt: jump 410
2021-05-28 23:59:31,783 ==== SSA block rewrite pass on 458
2021-05-28 23:59:31,783 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,783 on stmt: jump 460
2021-05-28 23:59:31,783 ==== SSA block rewrite pass on 460
2021-05-28 23:59:31,783 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,783 on stmt: jump 360
2021-05-28 23:59:31,783 ==== SSA block rewrite pass on 464
2021-05-28 23:59:31,783 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,783 on stmt: jump 466
2021-05-28 23:59:31,783 ==== SSA block rewrite pass on 466
2021-05-28 23:59:31,783 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,783 on stmt: $466.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register.2, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
2021-05-28 23:59:31,783 on stmt: time_register.1 = $466.3
2021-05-28 23:59:31,784 on stmt: jump 112
2021-05-28 23:59:31,784 ==== SSA block rewrite pass on 476
2021-05-28 23:59:31,784 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,784 on stmt: jump 478
2021-05-28 23:59:31,784 ==== SSA block rewrite pass on 478
2021-05-28 23:59:31,784 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88664E0>
2021-05-28 23:59:31,784 on stmt: $const478.1 = const(NoneType, None)
2021-05-28 23:59:31,784 on stmt: $478.2 = cast(value=$const478.1)
2021-05-28 23:59:31,784 on stmt: return $478.2
2021-05-28 23:59:31,784 Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x00000168E8845978>],
             116: [<numba.core.ir.Assign object at 0x00000168E88450B8>],
             292: [<numba.core.ir.Assign object at 0x00000168E88C8208>]})
2021-05-28 23:59:31,784 ==== SSA block rewrite pass on 0
2021-05-28 23:59:31,784 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8128>
2021-05-28 23:59:31,784 on stmt: x = arg(0, name=x)
2021-05-28 23:59:31,784 on stmt: y = arg(1, name=y)
2021-05-28 23:59:31,784 on stmt: sample_ratio = arg(2, name=sample_ratio)
2021-05-28 23:59:31,784 on stmt: interp_win = arg(3, name=interp_win)
2021-05-28 23:59:31,784 on stmt: interp_delta = arg(4, name=interp_delta)
2021-05-28 23:59:31,785 on stmt: num_table = arg(5, name=num_table)
2021-05-28 23:59:31,785 on stmt: $0.1 = global(min: <built-in function min>)
2021-05-28 23:59:31,785 on stmt: $const0.2 = const(float, 1.0)
2021-05-28 23:59:31,785 on stmt: scale = call $0.1($const0.2, sample_ratio, func=$0.1, args=[Var($const0.2, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None)
2021-05-28 23:59:31,785 on stmt: $const0.5 = const(float, 1.0)
2021-05-28 23:59:31,785 on stmt: time_increment = $const0.5 / sample_ratio
2021-05-28 23:59:31,785 on stmt: $0.8 = global(int: <class 'int'>)
2021-05-28 23:59:31,785 on stmt: $0.11 = scale * num_table
2021-05-28 23:59:31,785 on stmt: index_step = call $0.8($0.11, func=$0.8, args=[Var($0.11, interpn.py:12)], kws=(), vararg=None)
2021-05-28 23:59:31,785 on stmt: time_register = const(float, 0.0)
2021-05-28 23:59:31,785 on stmt: n = const(int, 0)
2021-05-28 23:59:31,785 on stmt: frac = const(float, 0.0)
2021-05-28 23:59:31,785 on stmt: index_frac = const(float, 0.0)
2021-05-28 23:59:31,785 on stmt: offset = const(int, 0)
2021-05-28 23:59:31,785 on stmt: eta = const(float, 0.0)
2021-05-28 23:59:31,785 on stmt: weight = const(float, 0.0)
2021-05-28 23:59:31,786 on stmt: $0.21 = getattr(value=interp_win, attr=shape)
2021-05-28 23:59:31,786 on stmt: $const0.22 = const(int, 0)
2021-05-28 23:59:31,786 on stmt: nwin = static_getitem(value=$0.21, index=0, index_var=$const0.22, fn=<built-in function getitem>)
2021-05-28 23:59:31,786 on stmt: $0.25 = getattr(value=x, attr=shape)
2021-05-28 23:59:31,786 on stmt: $const0.26 = const(int, 0)
2021-05-28 23:59:31,786 on stmt: n_orig = static_getitem(value=$0.25, index=0, index_var=$const0.26, fn=<built-in function getitem>)
2021-05-28 23:59:31,786 on stmt: $0.29 = getattr(value=y, attr=shape)
2021-05-28 23:59:31,786 on stmt: $const0.30 = const(int, 0)
2021-05-28 23:59:31,786 on stmt: n_out = static_getitem(value=$0.29, index=0, index_var=$const0.30, fn=<built-in function getitem>)
2021-05-28 23:59:31,786 on stmt: $0.33 = getattr(value=y, attr=shape)
2021-05-28 23:59:31,786 on stmt: $const0.34 = const(int, 1)
2021-05-28 23:59:31,786 on stmt: n_channels = static_getitem(value=$0.33, index=1, index_var=$const0.34, fn=<built-in function getitem>)
2021-05-28 23:59:31,786 on stmt: jump 100
2021-05-28 23:59:31,786 ==== SSA block rewrite pass on 100
2021-05-28 23:59:31,786 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8128>
2021-05-28 23:59:31,786 on stmt: jump 104
2021-05-28 23:59:31,786 ==== SSA block rewrite pass on 104
2021-05-28 23:59:31,786 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8128>
2021-05-28 23:59:31,786 on stmt: $104.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,786 on stmt: $104.3 = call $104.1(n_out, func=$104.1, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None)
2021-05-28 23:59:31,786 on stmt: $104.4 = getiter(value=$104.3)
2021-05-28 23:59:31,787 on stmt: $phi112.1 = $104.4
2021-05-28 23:59:31,787 on stmt: jump 112
2021-05-28 23:59:31,787 ==== SSA block rewrite pass on 112
2021-05-28 23:59:31,787 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8128>
2021-05-28 23:59:31,787 on stmt: time_register.2 = phi(incoming_values=[Var(time_register, interpn.py:13), Var(time_register.1, interpn.py:67)], incoming_blocks=[104, 466])
2021-05-28 23:59:31,787 on stmt: $112.2 = iternext(value=$phi112.1)
2021-05-28 23:59:31,787 on stmt: $112.3 = pair_first(value=$112.2)
2021-05-28 23:59:31,787 on stmt: $112.4 = pair_second(value=$112.2)
2021-05-28 23:59:31,787 on stmt: $phi116.1 = $112.3
2021-05-28 23:59:31,787 on stmt: $phi476.1 = $112.3
2021-05-28 23:59:31,787 on stmt: $phi476.2 = $phi112.1
2021-05-28 23:59:31,787 on stmt: branch $112.4, 116, 476
2021-05-28 23:59:31,787 ==== SSA block rewrite pass on 116
2021-05-28 23:59:31,787 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8128>
2021-05-28 23:59:31,787 on stmt: t = $phi116.1
2021-05-28 23:59:31,787 on stmt: $116.2 = global(int: <class 'int'>)
2021-05-28 23:59:31,787 on stmt: n = call $116.2(time_register.2, func=$116.2, args=[Var(time_register.2, interpn.py:27)], kws=(), vararg=None)
2021-05-28 23:59:31,787 on stmt: $116.8 = time_register.2 - n
2021-05-28 23:59:31,787 on stmt: frac = scale * $116.8
2021-05-28 23:59:31,787 on stmt: index_frac.1 = frac * num_table
2021-05-28 23:59:31,787 on stmt: $116.13 = global(int: <class 'int'>)
2021-05-28 23:59:31,787 on stmt: offset.1 = call $116.13(index_frac.1, func=$116.13, args=[Var(index_frac.1, interpn.py:35)], kws=(), vararg=None)
2021-05-28 23:59:31,787 on stmt: eta = index_frac.1 - offset
2021-05-28 23:59:31,788 find_def var='offset' stmt=eta = index_frac.1 - offset
2021-05-28 23:59:31,788 replaced with: eta = index_frac.1 - offset.1
2021-05-28 23:59:31,788 on stmt: $116.19 = global(min: <built-in function min>)
2021-05-28 23:59:31,788 on stmt: $const116.21 = const(int, 1)
2021-05-28 23:59:31,788 on stmt: $116.22 = n + $const116.21
2021-05-28 23:59:31,788 on stmt: $116.25 = nwin - offset
2021-05-28 23:59:31,788 find_def var='offset' stmt=$116.25 = nwin - offset
2021-05-28 23:59:31,788 replaced with: $116.25 = nwin - offset.1
2021-05-28 23:59:31,788 on stmt: $116.27 = $116.25 // index_step
2021-05-28 23:59:31,788 on stmt: i_max = call $116.19($116.22, $116.27, func=$116.19, args=[Var($116.22, interpn.py:42), Var($116.27, interpn.py:42)], kws=(), vararg=None)
2021-05-28 23:59:31,788 on stmt: jump 184
2021-05-28 23:59:31,788 ==== SSA block rewrite pass on 184
2021-05-28 23:59:31,788 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8128>
2021-05-28 23:59:31,788 on stmt: jump 186
2021-05-28 23:59:31,788 ==== SSA block rewrite pass on 186
2021-05-28 23:59:31,788 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8128>
2021-05-28 23:59:31,788 on stmt: $186.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,789 on stmt: $186.3 = call $186.1(i_max, func=$186.1, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None)
2021-05-28 23:59:31,789 on stmt: $186.4 = getiter(value=$186.3)
2021-05-28 23:59:31,789 on stmt: $phi194.1 = $186.4
2021-05-28 23:59:31,789 on stmt: jump 194
2021-05-28 23:59:31,789 ==== SSA block rewrite pass on 194
2021-05-28 23:59:31,789 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8128>
2021-05-28 23:59:31,789 on stmt: $194.2 = iternext(value=$phi194.1)
2021-05-28 23:59:31,789 on stmt: $194.3 = pair_first(value=$194.2)
2021-05-28 23:59:31,789 on stmt: $194.4 = pair_second(value=$194.2)
2021-05-28 23:59:31,789 on stmt: $phi196.1 = $194.3
2021-05-28 23:59:31,789 on stmt: $phi290.1 = $194.3
2021-05-28 23:59:31,789 on stmt: $phi290.2 = $phi194.1
2021-05-28 23:59:31,789 on stmt: branch $194.4, 196, 290
2021-05-28 23:59:31,789 ==== SSA block rewrite pass on 196
2021-05-28 23:59:31,789 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8128>
2021-05-28 23:59:31,789 on stmt: i = $phi196.1
2021-05-28 23:59:31,789 on stmt: $196.6 = i * index_step
2021-05-28 23:59:31,789 on stmt: $196.7 = offset + $196.6
2021-05-28 23:59:31,789 find_def var='offset' stmt=$196.7 = offset + $196.6
2021-05-28 23:59:31,789 find_def_from_top label 196
2021-05-28 23:59:31,789 idom 194 from label 196
2021-05-28 23:59:31,789 find_def_from_bottom label 194
2021-05-28 23:59:31,789 find_def_from_top label 194
2021-05-28 23:59:31,789 idom 186 from label 194
2021-05-28 23:59:31,790 find_def_from_bottom label 186
2021-05-28 23:59:31,790 find_def_from_top label 186
2021-05-28 23:59:31,790 idom 184 from label 186
2021-05-28 23:59:31,790 find_def_from_bottom label 184
2021-05-28 23:59:31,790 find_def_from_top label 184
2021-05-28 23:59:31,790 idom 116 from label 184
2021-05-28 23:59:31,790 find_def_from_bottom label 116
2021-05-28 23:59:31,790 replaced with: $196.7 = offset.1 + $196.6
2021-05-28 23:59:31,790 on stmt: $196.8 = getitem(value=interp_win, index=$196.7, fn=<built-in function getitem>)
2021-05-28 23:59:31,790 on stmt: $196.14 = i * index_step
2021-05-28 23:59:31,790 on stmt: $196.15 = offset + $196.14
2021-05-28 23:59:31,790 find_def var='offset' stmt=$196.15 = offset + $196.14
2021-05-28 23:59:31,790 find_def_from_top label 196
2021-05-28 23:59:31,790 idom 194 from label 196
2021-05-28 23:59:31,790 find_def_from_bottom label 194
2021-05-28 23:59:31,790 find_def_from_top label 194
2021-05-28 23:59:31,790 idom 186 from label 194
2021-05-28 23:59:31,790 find_def_from_bottom label 186
2021-05-28 23:59:31,790 find_def_from_top label 186
2021-05-28 23:59:31,790 idom 184 from label 186
2021-05-28 23:59:31,790 find_def_from_bottom label 184
2021-05-28 23:59:31,790 find_def_from_top label 184
2021-05-28 23:59:31,790 idom 116 from label 184
2021-05-28 23:59:31,790 find_def_from_bottom label 116
2021-05-28 23:59:31,791 replaced with: $196.15 = offset.1 + $196.14
2021-05-28 23:59:31,791 on stmt: $196.16 = getitem(value=interp_delta, index=$196.15, fn=<built-in function getitem>)
2021-05-28 23:59:31,791 on stmt: $196.17 = eta * $196.16
2021-05-28 23:59:31,791 on stmt: weight = $196.8 + $196.17
2021-05-28 23:59:31,791 on stmt: jump 234
2021-05-28 23:59:31,791 ==== SSA block rewrite pass on 234
2021-05-28 23:59:31,791 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8128>
2021-05-28 23:59:31,791 on stmt: jump 236
2021-05-28 23:59:31,791 ==== SSA block rewrite pass on 236
2021-05-28 23:59:31,791 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8128>
2021-05-28 23:59:31,791 on stmt: $236.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,791 on stmt: $236.3 = call $236.1(n_channels, func=$236.1, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-28 23:59:31,791 on stmt: $236.4 = getiter(value=$236.3)
2021-05-28 23:59:31,791 on stmt: $phi244.1 = $236.4
2021-05-28 23:59:31,791 on stmt: jump 244
2021-05-28 23:59:31,791 ==== SSA block rewrite pass on 244
2021-05-28 23:59:31,791 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8128>
2021-05-28 23:59:31,791 on stmt: $244.2 = iternext(value=$phi244.1)
2021-05-28 23:59:31,791 on stmt: $244.3 = pair_first(value=$244.2)
2021-05-28 23:59:31,791 on stmt: $244.4 = pair_second(value=$244.2)
2021-05-28 23:59:31,791 on stmt: $phi246.1 = $244.3
2021-05-28 23:59:31,791 on stmt: $phi286.1 = $244.3
2021-05-28 23:59:31,791 on stmt: $phi286.2 = $phi244.1
2021-05-28 23:59:31,792 on stmt: branch $244.4, 246, 286
2021-05-28 23:59:31,792 ==== SSA block rewrite pass on 246
2021-05-28 23:59:31,792 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8128>
2021-05-28 23:59:31,792 on stmt: j = $phi246.1
2021-05-28 23:59:31,792 on stmt: $246.5 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-28 23:59:31,792 on stmt: $246.8 = getitem(value=y, index=$246.5, fn=<built-in function getitem>)
2021-05-28 23:59:31,792 on stmt: $246.13 = n - i
2021-05-28 23:59:31,792 on stmt: $246.15 = build_tuple(items=[Var($246.13, interpn.py:47), Var(j, interpn.py:46)])
2021-05-28 23:59:31,792 on stmt: $246.16 = getitem(value=x, index=$246.15, fn=<built-in function getitem>)
2021-05-28 23:59:31,792 on stmt: $246.17 = weight * $246.16
2021-05-28 23:59:31,792 on stmt: $246.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$246.8, rhs=$246.17, static_lhs=Undefined, static_rhs=Undefined)
2021-05-28 23:59:31,792 on stmt: y[$246.5] = $246.18
2021-05-28 23:59:31,792 on stmt: jump 244
2021-05-28 23:59:31,792 ==== SSA block rewrite pass on 286
2021-05-28 23:59:31,792 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8128>
2021-05-28 23:59:31,792 on stmt: jump 288
2021-05-28 23:59:31,792 ==== SSA block rewrite pass on 288
2021-05-28 23:59:31,792 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8128>
2021-05-28 23:59:31,792 on stmt: jump 194
2021-05-28 23:59:31,792 ==== SSA block rewrite pass on 290
2021-05-28 23:59:31,792 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8128>
2021-05-28 23:59:31,792 on stmt: jump 292
2021-05-28 23:59:31,792 ==== SSA block rewrite pass on 292
2021-05-28 23:59:31,793 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8128>
2021-05-28 23:59:31,793 on stmt: $292.3 = scale - frac
2021-05-28 23:59:31,793 on stmt: frac = $292.3
2021-05-28 23:59:31,793 on stmt: index_frac.2 = frac * num_table
2021-05-28 23:59:31,793 on stmt: $292.7 = global(int: <class 'int'>)
2021-05-28 23:59:31,793 on stmt: offset.2 = call $292.7(index_frac.2, func=$292.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None)
2021-05-28 23:59:31,793 on stmt: eta = index_frac.2 - offset
2021-05-28 23:59:31,793 find_def var='offset' stmt=eta = index_frac.2 - offset
2021-05-28 23:59:31,793 replaced with: eta = index_frac.2 - offset.2
2021-05-28 23:59:31,793 on stmt: $292.13 = global(min: <built-in function min>)
2021-05-28 23:59:31,793 on stmt: $292.16 = n_orig - n
2021-05-28 23:59:31,793 on stmt: $const292.17 = const(int, 1)
2021-05-28 23:59:31,793 on stmt: $292.18 = $292.16 - $const292.17
2021-05-28 23:59:31,793 on stmt: $292.21 = nwin - offset
2021-05-28 23:59:31,793 find_def var='offset' stmt=$292.21 = nwin - offset
2021-05-28 23:59:31,793 replaced with: $292.21 = nwin - offset.2
2021-05-28 23:59:31,793 on stmt: $292.23 = $292.21 // index_step
2021-05-28 23:59:31,793 on stmt: k_max = call $292.13($292.18, $292.23, func=$292.13, args=[Var($292.18, interpn.py:60), Var($292.23, interpn.py:60)], kws=(), vararg=None)
2021-05-28 23:59:31,793 on stmt: jump 350
2021-05-28 23:59:31,794 ==== SSA block rewrite pass on 350
2021-05-28 23:59:31,794 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8128>
2021-05-28 23:59:31,794 on stmt: jump 352
2021-05-28 23:59:31,794 ==== SSA block rewrite pass on 352
2021-05-28 23:59:31,794 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8128>
2021-05-28 23:59:31,794 on stmt: $352.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,794 on stmt: $352.3 = call $352.1(k_max, func=$352.1, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None)
2021-05-28 23:59:31,794 on stmt: $352.4 = getiter(value=$352.3)
2021-05-28 23:59:31,794 on stmt: $phi360.1 = $352.4
2021-05-28 23:59:31,794 on stmt: jump 360
2021-05-28 23:59:31,794 ==== SSA block rewrite pass on 360
2021-05-28 23:59:31,794 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8128>
2021-05-28 23:59:31,794 on stmt: $360.2 = iternext(value=$phi360.1)
2021-05-28 23:59:31,794 on stmt: $360.3 = pair_first(value=$360.2)
2021-05-28 23:59:31,794 on stmt: $360.4 = pair_second(value=$360.2)
2021-05-28 23:59:31,794 on stmt: $phi362.1 = $360.3
2021-05-28 23:59:31,794 on stmt: $phi464.1 = $360.3
2021-05-28 23:59:31,794 on stmt: $phi464.2 = $phi360.1
2021-05-28 23:59:31,794 on stmt: branch $360.4, 362, 464
2021-05-28 23:59:31,794 ==== SSA block rewrite pass on 362
2021-05-28 23:59:31,794 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8128>
2021-05-28 23:59:31,794 on stmt: k = $phi362.1
2021-05-28 23:59:31,795 on stmt: $362.6 = k * index_step
2021-05-28 23:59:31,795 on stmt: $362.7 = offset + $362.6
2021-05-28 23:59:31,795 find_def var='offset' stmt=$362.7 = offset + $362.6
2021-05-28 23:59:31,795 find_def_from_top label 362
2021-05-28 23:59:31,795 idom 360 from label 362
2021-05-28 23:59:31,795 find_def_from_bottom label 360
2021-05-28 23:59:31,795 find_def_from_top label 360
2021-05-28 23:59:31,795 idom 352 from label 360
2021-05-28 23:59:31,795 find_def_from_bottom label 352
2021-05-28 23:59:31,795 find_def_from_top label 352
2021-05-28 23:59:31,795 idom 350 from label 352
2021-05-28 23:59:31,795 find_def_from_bottom label 350
2021-05-28 23:59:31,795 find_def_from_top label 350
2021-05-28 23:59:31,795 idom 292 from label 350
2021-05-28 23:59:31,795 find_def_from_bottom label 292
2021-05-28 23:59:31,795 replaced with: $362.7 = offset.2 + $362.6
2021-05-28 23:59:31,795 on stmt: $362.8 = getitem(value=interp_win, index=$362.7, fn=<built-in function getitem>)
2021-05-28 23:59:31,795 on stmt: $362.14 = k * index_step
2021-05-28 23:59:31,795 on stmt: $362.15 = offset + $362.14
2021-05-28 23:59:31,795 find_def var='offset' stmt=$362.15 = offset + $362.14
2021-05-28 23:59:31,795 find_def_from_top label 362
2021-05-28 23:59:31,796 idom 360 from label 362
2021-05-28 23:59:31,796 find_def_from_bottom label 360
2021-05-28 23:59:31,796 find_def_from_top label 360
2021-05-28 23:59:31,796 idom 352 from label 360
2021-05-28 23:59:31,796 find_def_from_bottom label 352
2021-05-28 23:59:31,796 find_def_from_top label 352
2021-05-28 23:59:31,796 idom 350 from label 352
2021-05-28 23:59:31,796 find_def_from_bottom label 350
2021-05-28 23:59:31,796 find_def_from_top label 350
2021-05-28 23:59:31,796 idom 292 from label 350
2021-05-28 23:59:31,796 find_def_from_bottom label 292
2021-05-28 23:59:31,796 replaced with: $362.15 = offset.2 + $362.14
2021-05-28 23:59:31,796 on stmt: $362.16 = getitem(value=interp_delta, index=$362.15, fn=<built-in function getitem>)
2021-05-28 23:59:31,796 on stmt: $362.17 = eta * $362.16
2021-05-28 23:59:31,796 on stmt: weight = $362.8 + $362.17
2021-05-28 23:59:31,796 on stmt: jump 400
2021-05-28 23:59:31,796 ==== SSA block rewrite pass on 400
2021-05-28 23:59:31,796 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8128>
2021-05-28 23:59:31,796 on stmt: jump 402
2021-05-28 23:59:31,796 ==== SSA block rewrite pass on 402
2021-05-28 23:59:31,796 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8128>
2021-05-28 23:59:31,797 on stmt: $402.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,797 on stmt: $402.3 = call $402.1(n_channels, func=$402.1, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-28 23:59:31,797 on stmt: $402.4 = getiter(value=$402.3)
2021-05-28 23:59:31,797 on stmt: $phi410.1 = $402.4
2021-05-28 23:59:31,797 on stmt: jump 410
2021-05-28 23:59:31,797 ==== SSA block rewrite pass on 410
2021-05-28 23:59:31,797 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8128>
2021-05-28 23:59:31,797 on stmt: $410.2 = iternext(value=$phi410.1)
2021-05-28 23:59:31,797 on stmt: $410.3 = pair_first(value=$410.2)
2021-05-28 23:59:31,797 on stmt: $410.4 = pair_second(value=$410.2)
2021-05-28 23:59:31,797 on stmt: $phi412.1 = $410.3
2021-05-28 23:59:31,797 on stmt: $phi458.1 = $410.3
2021-05-28 23:59:31,797 on stmt: $phi458.2 = $phi410.1
2021-05-28 23:59:31,797 on stmt: branch $410.4, 412, 458
2021-05-28 23:59:31,797 ==== SSA block rewrite pass on 412
2021-05-28 23:59:31,797 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8128>
2021-05-28 23:59:31,797 on stmt: j = $phi412.1
2021-05-28 23:59:31,797 on stmt: $412.5 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-28 23:59:31,797 on stmt: $412.8 = getitem(value=y, index=$412.5, fn=<built-in function getitem>)
2021-05-28 23:59:31,797 on stmt: $412.13 = n + k
2021-05-28 23:59:31,797 on stmt: $const412.14 = const(int, 1)
2021-05-28 23:59:31,797 on stmt: $412.15 = $412.13 + $const412.14
2021-05-28 23:59:31,798 on stmt: $412.17 = build_tuple(items=[Var($412.15, interpn.py:64), Var(j, interpn.py:46)])
2021-05-28 23:59:31,798 on stmt: $412.18 = getitem(value=x, index=$412.17, fn=<built-in function getitem>)
2021-05-28 23:59:31,798 on stmt: $412.19 = weight * $412.18
2021-05-28 23:59:31,798 on stmt: $412.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$412.8, rhs=$412.19, static_lhs=Undefined, static_rhs=Undefined)
2021-05-28 23:59:31,798 on stmt: y[$412.5] = $412.20
2021-05-28 23:59:31,798 on stmt: jump 410
2021-05-28 23:59:31,798 ==== SSA block rewrite pass on 458
2021-05-28 23:59:31,798 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8128>
2021-05-28 23:59:31,798 on stmt: jump 460
2021-05-28 23:59:31,798 ==== SSA block rewrite pass on 460
2021-05-28 23:59:31,798 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8128>
2021-05-28 23:59:31,798 on stmt: jump 360
2021-05-28 23:59:31,798 ==== SSA block rewrite pass on 464
2021-05-28 23:59:31,798 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8128>
2021-05-28 23:59:31,798 on stmt: jump 466
2021-05-28 23:59:31,798 ==== SSA block rewrite pass on 466
2021-05-28 23:59:31,798 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8128>
2021-05-28 23:59:31,798 on stmt: $466.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register.2, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
2021-05-28 23:59:31,798 on stmt: time_register.1 = $466.3
2021-05-28 23:59:31,798 on stmt: jump 112
2021-05-28 23:59:31,798 ==== SSA block rewrite pass on 476
2021-05-28 23:59:31,799 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8128>
2021-05-28 23:59:31,799 on stmt: jump 478
2021-05-28 23:59:31,799 ==== SSA block rewrite pass on 478
2021-05-28 23:59:31,799 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8128>
2021-05-28 23:59:31,799 on stmt: $const478.1 = const(NoneType, None)
2021-05-28 23:59:31,799 on stmt: $478.2 = cast(value=$const478.1)
2021-05-28 23:59:31,799 on stmt: return $478.2
2021-05-28 23:59:31,799 Fix SSA violator on var n
2021-05-28 23:59:31,799 ==== SSA block rewrite pass on 0
2021-05-28 23:59:31,799 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8845828>
2021-05-28 23:59:31,799 on stmt: x = arg(0, name=x)
2021-05-28 23:59:31,799 on stmt: y = arg(1, name=y)
2021-05-28 23:59:31,799 on stmt: sample_ratio = arg(2, name=sample_ratio)
2021-05-28 23:59:31,799 on stmt: interp_win = arg(3, name=interp_win)
2021-05-28 23:59:31,799 on stmt: interp_delta = arg(4, name=interp_delta)
2021-05-28 23:59:31,799 on stmt: num_table = arg(5, name=num_table)
2021-05-28 23:59:31,799 on stmt: $0.1 = global(min: <built-in function min>)
2021-05-28 23:59:31,799 on stmt: $const0.2 = const(float, 1.0)
2021-05-28 23:59:31,799 on stmt: scale = call $0.1($const0.2, sample_ratio, func=$0.1, args=[Var($const0.2, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None)
2021-05-28 23:59:31,799 on stmt: $const0.5 = const(float, 1.0)
2021-05-28 23:59:31,799 on stmt: time_increment = $const0.5 / sample_ratio
2021-05-28 23:59:31,799 on stmt: $0.8 = global(int: <class 'int'>)
2021-05-28 23:59:31,799 on stmt: $0.11 = scale * num_table
2021-05-28 23:59:31,800 on stmt: index_step = call $0.8($0.11, func=$0.8, args=[Var($0.11, interpn.py:12)], kws=(), vararg=None)
2021-05-28 23:59:31,800 on stmt: time_register = const(float, 0.0)
2021-05-28 23:59:31,800 on stmt: n = const(int, 0)
2021-05-28 23:59:31,800 first assign: n
2021-05-28 23:59:31,800 replaced with: n = const(int, 0)
2021-05-28 23:59:31,800 on stmt: frac = const(float, 0.0)
2021-05-28 23:59:31,800 on stmt: index_frac = const(float, 0.0)
2021-05-28 23:59:31,800 on stmt: offset = const(int, 0)
2021-05-28 23:59:31,800 on stmt: eta = const(float, 0.0)
2021-05-28 23:59:31,800 on stmt: weight = const(float, 0.0)
2021-05-28 23:59:31,800 on stmt: $0.21 = getattr(value=interp_win, attr=shape)
2021-05-28 23:59:31,800 on stmt: $const0.22 = const(int, 0)
2021-05-28 23:59:31,800 on stmt: nwin = static_getitem(value=$0.21, index=0, index_var=$const0.22, fn=<built-in function getitem>)
2021-05-28 23:59:31,800 on stmt: $0.25 = getattr(value=x, attr=shape)
2021-05-28 23:59:31,800 on stmt: $const0.26 = const(int, 0)
2021-05-28 23:59:31,800 on stmt: n_orig = static_getitem(value=$0.25, index=0, index_var=$const0.26, fn=<built-in function getitem>)
2021-05-28 23:59:31,800 on stmt: $0.29 = getattr(value=y, attr=shape)
2021-05-28 23:59:31,800 on stmt: $const0.30 = const(int, 0)
2021-05-28 23:59:31,800 on stmt: n_out = static_getitem(value=$0.29, index=0, index_var=$const0.30, fn=<built-in function getitem>)
2021-05-28 23:59:31,800 on stmt: $0.33 = getattr(value=y, attr=shape)
2021-05-28 23:59:31,800 on stmt: $const0.34 = const(int, 1)
2021-05-28 23:59:31,800 on stmt: n_channels = static_getitem(value=$0.33, index=1, index_var=$const0.34, fn=<built-in function getitem>)
2021-05-28 23:59:31,801 on stmt: jump 100
2021-05-28 23:59:31,801 ==== SSA block rewrite pass on 100
2021-05-28 23:59:31,801 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8845828>
2021-05-28 23:59:31,801 on stmt: jump 104
2021-05-28 23:59:31,801 ==== SSA block rewrite pass on 104
2021-05-28 23:59:31,801 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8845828>
2021-05-28 23:59:31,801 on stmt: $104.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,801 on stmt: $104.3 = call $104.1(n_out, func=$104.1, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None)
2021-05-28 23:59:31,801 on stmt: $104.4 = getiter(value=$104.3)
2021-05-28 23:59:31,801 on stmt: $phi112.1 = $104.4
2021-05-28 23:59:31,801 on stmt: jump 112
2021-05-28 23:59:31,801 ==== SSA block rewrite pass on 112
2021-05-28 23:59:31,801 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8845828>
2021-05-28 23:59:31,801 on stmt: time_register.2 = phi(incoming_values=[Var(time_register, interpn.py:13), Var(time_register.1, interpn.py:67)], incoming_blocks=[104, 466])
2021-05-28 23:59:31,802 on stmt: $112.2 = iternext(value=$phi112.1)
2021-05-28 23:59:31,802 on stmt: $112.3 = pair_first(value=$112.2)
2021-05-28 23:59:31,802 on stmt: $112.4 = pair_second(value=$112.2)
2021-05-28 23:59:31,802 on stmt: $phi116.1 = $112.3
2021-05-28 23:59:31,802 on stmt: $phi476.1 = $112.3
2021-05-28 23:59:31,802 on stmt: $phi476.2 = $phi112.1
2021-05-28 23:59:31,802 on stmt: branch $112.4, 116, 476
2021-05-28 23:59:31,802 ==== SSA block rewrite pass on 116
2021-05-28 23:59:31,802 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8845828>
2021-05-28 23:59:31,802 on stmt: t = $phi116.1
2021-05-28 23:59:31,802 on stmt: $116.2 = global(int: <class 'int'>)
2021-05-28 23:59:31,802 on stmt: n = call $116.2(time_register.2, func=$116.2, args=[Var(time_register.2, interpn.py:27)], kws=(), vararg=None)
2021-05-28 23:59:31,802 replaced with: n.1 = call $116.2(time_register.2, func=$116.2, args=[Var(time_register.2, interpn.py:27)], kws=(), vararg=None)
2021-05-28 23:59:31,802 on stmt: $116.8 = time_register.2 - n
2021-05-28 23:59:31,802 on stmt: frac = scale * $116.8
2021-05-28 23:59:31,802 on stmt: index_frac.1 = frac * num_table
2021-05-28 23:59:31,802 on stmt: $116.13 = global(int: <class 'int'>)
2021-05-28 23:59:31,802 on stmt: offset.1 = call $116.13(index_frac.1, func=$116.13, args=[Var(index_frac.1, interpn.py:35)], kws=(), vararg=None)
2021-05-28 23:59:31,802 on stmt: eta = index_frac.1 - offset.1
2021-05-28 23:59:31,802 on stmt: $116.19 = global(min: <built-in function min>)
2021-05-28 23:59:31,802 on stmt: $const116.21 = const(int, 1)
2021-05-28 23:59:31,803 on stmt: $116.22 = n + $const116.21
2021-05-28 23:59:31,803 on stmt: $116.25 = nwin - offset.1
2021-05-28 23:59:31,803 on stmt: $116.27 = $116.25 // index_step
2021-05-28 23:59:31,803 on stmt: i_max = call $116.19($116.22, $116.27, func=$116.19, args=[Var($116.22, interpn.py:42), Var($116.27, interpn.py:42)], kws=(), vararg=None)
2021-05-28 23:59:31,803 on stmt: jump 184
2021-05-28 23:59:31,803 ==== SSA block rewrite pass on 184
2021-05-28 23:59:31,803 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8845828>
2021-05-28 23:59:31,803 on stmt: jump 186
2021-05-28 23:59:31,803 ==== SSA block rewrite pass on 186
2021-05-28 23:59:31,803 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8845828>
2021-05-28 23:59:31,803 on stmt: $186.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,803 on stmt: $186.3 = call $186.1(i_max, func=$186.1, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None)
2021-05-28 23:59:31,803 on stmt: $186.4 = getiter(value=$186.3)
2021-05-28 23:59:31,803 on stmt: $phi194.1 = $186.4
2021-05-28 23:59:31,803 on stmt: jump 194
2021-05-28 23:59:31,803 ==== SSA block rewrite pass on 194
2021-05-28 23:59:31,803 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8845828>
2021-05-28 23:59:31,803 on stmt: $194.2 = iternext(value=$phi194.1)
2021-05-28 23:59:31,803 on stmt: $194.3 = pair_first(value=$194.2)
2021-05-28 23:59:31,803 on stmt: $194.4 = pair_second(value=$194.2)
2021-05-28 23:59:31,803 on stmt: $phi196.1 = $194.3
2021-05-28 23:59:31,803 on stmt: $phi290.1 = $194.3
2021-05-28 23:59:31,803 on stmt: $phi290.2 = $phi194.1
2021-05-28 23:59:31,803 on stmt: branch $194.4, 196, 290
2021-05-28 23:59:31,804 ==== SSA block rewrite pass on 196
2021-05-28 23:59:31,804 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8845828>
2021-05-28 23:59:31,804 on stmt: i = $phi196.1
2021-05-28 23:59:31,804 on stmt: $196.6 = i * index_step
2021-05-28 23:59:31,804 on stmt: $196.7 = offset.1 + $196.6
2021-05-28 23:59:31,804 on stmt: $196.8 = getitem(value=interp_win, index=$196.7, fn=<built-in function getitem>)
2021-05-28 23:59:31,804 on stmt: $196.14 = i * index_step
2021-05-28 23:59:31,804 on stmt: $196.15 = offset.1 + $196.14
2021-05-28 23:59:31,804 on stmt: $196.16 = getitem(value=interp_delta, index=$196.15, fn=<built-in function getitem>)
2021-05-28 23:59:31,804 on stmt: $196.17 = eta * $196.16
2021-05-28 23:59:31,804 on stmt: weight = $196.8 + $196.17
2021-05-28 23:59:31,804 on stmt: jump 234
2021-05-28 23:59:31,804 ==== SSA block rewrite pass on 234
2021-05-28 23:59:31,804 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8845828>
2021-05-28 23:59:31,804 on stmt: jump 236
2021-05-28 23:59:31,804 ==== SSA block rewrite pass on 236
2021-05-28 23:59:31,804 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8845828>
2021-05-28 23:59:31,804 on stmt: $236.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,804 on stmt: $236.3 = call $236.1(n_channels, func=$236.1, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-28 23:59:31,804 on stmt: $236.4 = getiter(value=$236.3)
2021-05-28 23:59:31,804 on stmt: $phi244.1 = $236.4
2021-05-28 23:59:31,804 on stmt: jump 244
2021-05-28 23:59:31,804 ==== SSA block rewrite pass on 244
2021-05-28 23:59:31,804 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8845828>
2021-05-28 23:59:31,804 on stmt: $244.2 = iternext(value=$phi244.1)
2021-05-28 23:59:31,805 on stmt: $244.3 = pair_first(value=$244.2)
2021-05-28 23:59:31,805 on stmt: $244.4 = pair_second(value=$244.2)
2021-05-28 23:59:31,805 on stmt: $phi246.1 = $244.3
2021-05-28 23:59:31,805 on stmt: $phi286.1 = $244.3
2021-05-28 23:59:31,805 on stmt: $phi286.2 = $phi244.1
2021-05-28 23:59:31,805 on stmt: branch $244.4, 246, 286
2021-05-28 23:59:31,805 ==== SSA block rewrite pass on 246
2021-05-28 23:59:31,805 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8845828>
2021-05-28 23:59:31,805 on stmt: j = $phi246.1
2021-05-28 23:59:31,805 on stmt: $246.5 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-28 23:59:31,805 on stmt: $246.8 = getitem(value=y, index=$246.5, fn=<built-in function getitem>)
2021-05-28 23:59:31,805 on stmt: $246.13 = n - i
2021-05-28 23:59:31,805 on stmt: $246.15 = build_tuple(items=[Var($246.13, interpn.py:47), Var(j, interpn.py:46)])
2021-05-28 23:59:31,805 on stmt: $246.16 = getitem(value=x, index=$246.15, fn=<built-in function getitem>)
2021-05-28 23:59:31,805 on stmt: $246.17 = weight * $246.16
2021-05-28 23:59:31,805 on stmt: $246.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$246.8, rhs=$246.17, static_lhs=Undefined, static_rhs=Undefined)
2021-05-28 23:59:31,805 on stmt: y[$246.5] = $246.18
2021-05-28 23:59:31,805 on stmt: jump 244
2021-05-28 23:59:31,805 ==== SSA block rewrite pass on 286
2021-05-28 23:59:31,805 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8845828>
2021-05-28 23:59:31,805 on stmt: jump 288
2021-05-28 23:59:31,805 ==== SSA block rewrite pass on 288
2021-05-28 23:59:31,805 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8845828>
2021-05-28 23:59:31,805 on stmt: jump 194
2021-05-28 23:59:31,805 ==== SSA block rewrite pass on 290
2021-05-28 23:59:31,806 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8845828>
2021-05-28 23:59:31,806 on stmt: jump 292
2021-05-28 23:59:31,806 ==== SSA block rewrite pass on 292
2021-05-28 23:59:31,806 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8845828>
2021-05-28 23:59:31,806 on stmt: $292.3 = scale - frac
2021-05-28 23:59:31,806 on stmt: frac = $292.3
2021-05-28 23:59:31,806 on stmt: index_frac.2 = frac * num_table
2021-05-28 23:59:31,806 on stmt: $292.7 = global(int: <class 'int'>)
2021-05-28 23:59:31,806 on stmt: offset.2 = call $292.7(index_frac.2, func=$292.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None)
2021-05-28 23:59:31,806 on stmt: eta = index_frac.2 - offset.2
2021-05-28 23:59:31,806 on stmt: $292.13 = global(min: <built-in function min>)
2021-05-28 23:59:31,806 on stmt: $292.16 = n_orig - n
2021-05-28 23:59:31,806 on stmt: $const292.17 = const(int, 1)
2021-05-28 23:59:31,806 on stmt: $292.18 = $292.16 - $const292.17
2021-05-28 23:59:31,806 on stmt: $292.21 = nwin - offset.2
2021-05-28 23:59:31,806 on stmt: $292.23 = $292.21 // index_step
2021-05-28 23:59:31,806 on stmt: k_max = call $292.13($292.18, $292.23, func=$292.13, args=[Var($292.18, interpn.py:60), Var($292.23, interpn.py:60)], kws=(), vararg=None)
2021-05-28 23:59:31,806 on stmt: jump 350
2021-05-28 23:59:31,806 ==== SSA block rewrite pass on 350
2021-05-28 23:59:31,806 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8845828>
2021-05-28 23:59:31,807 on stmt: jump 352
2021-05-28 23:59:31,807 ==== SSA block rewrite pass on 352
2021-05-28 23:59:31,807 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8845828>
2021-05-28 23:59:31,807 on stmt: $352.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,807 on stmt: $352.3 = call $352.1(k_max, func=$352.1, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None)
2021-05-28 23:59:31,807 on stmt: $352.4 = getiter(value=$352.3)
2021-05-28 23:59:31,807 on stmt: $phi360.1 = $352.4
2021-05-28 23:59:31,807 on stmt: jump 360
2021-05-28 23:59:31,807 ==== SSA block rewrite pass on 360
2021-05-28 23:59:31,807 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8845828>
2021-05-28 23:59:31,807 on stmt: $360.2 = iternext(value=$phi360.1)
2021-05-28 23:59:31,807 on stmt: $360.3 = pair_first(value=$360.2)
2021-05-28 23:59:31,807 on stmt: $360.4 = pair_second(value=$360.2)
2021-05-28 23:59:31,807 on stmt: $phi362.1 = $360.3
2021-05-28 23:59:31,807 on stmt: $phi464.1 = $360.3
2021-05-28 23:59:31,807 on stmt: $phi464.2 = $phi360.1
2021-05-28 23:59:31,807 on stmt: branch $360.4, 362, 464
2021-05-28 23:59:31,807 ==== SSA block rewrite pass on 362
2021-05-28 23:59:31,807 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8845828>
2021-05-28 23:59:31,807 on stmt: k = $phi362.1
2021-05-28 23:59:31,807 on stmt: $362.6 = k * index_step
2021-05-28 23:59:31,807 on stmt: $362.7 = offset.2 + $362.6
2021-05-28 23:59:31,807 on stmt: $362.8 = getitem(value=interp_win, index=$362.7, fn=<built-in function getitem>)
2021-05-28 23:59:31,807 on stmt: $362.14 = k * index_step
2021-05-28 23:59:31,807 on stmt: $362.15 = offset.2 + $362.14
2021-05-28 23:59:31,808 on stmt: $362.16 = getitem(value=interp_delta, index=$362.15, fn=<built-in function getitem>)
2021-05-28 23:59:31,808 on stmt: $362.17 = eta * $362.16
2021-05-28 23:59:31,808 on stmt: weight = $362.8 + $362.17
2021-05-28 23:59:31,808 on stmt: jump 400
2021-05-28 23:59:31,808 ==== SSA block rewrite pass on 400
2021-05-28 23:59:31,808 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8845828>
2021-05-28 23:59:31,808 on stmt: jump 402
2021-05-28 23:59:31,808 ==== SSA block rewrite pass on 402
2021-05-28 23:59:31,808 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8845828>
2021-05-28 23:59:31,808 on stmt: $402.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,808 on stmt: $402.3 = call $402.1(n_channels, func=$402.1, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-28 23:59:31,808 on stmt: $402.4 = getiter(value=$402.3)
2021-05-28 23:59:31,808 on stmt: $phi410.1 = $402.4
2021-05-28 23:59:31,808 on stmt: jump 410
2021-05-28 23:59:31,808 ==== SSA block rewrite pass on 410
2021-05-28 23:59:31,808 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8845828>
2021-05-28 23:59:31,808 on stmt: $410.2 = iternext(value=$phi410.1)
2021-05-28 23:59:31,808 on stmt: $410.3 = pair_first(value=$410.2)
2021-05-28 23:59:31,808 on stmt: $410.4 = pair_second(value=$410.2)
2021-05-28 23:59:31,808 on stmt: $phi412.1 = $410.3
2021-05-28 23:59:31,808 on stmt: $phi458.1 = $410.3
2021-05-28 23:59:31,809 on stmt: $phi458.2 = $phi410.1
2021-05-28 23:59:31,809 on stmt: branch $410.4, 412, 458
2021-05-28 23:59:31,809 ==== SSA block rewrite pass on 412
2021-05-28 23:59:31,809 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8845828>
2021-05-28 23:59:31,809 on stmt: j = $phi412.1
2021-05-28 23:59:31,809 on stmt: $412.5 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-28 23:59:31,809 on stmt: $412.8 = getitem(value=y, index=$412.5, fn=<built-in function getitem>)
2021-05-28 23:59:31,809 on stmt: $412.13 = n + k
2021-05-28 23:59:31,809 on stmt: $const412.14 = const(int, 1)
2021-05-28 23:59:31,809 on stmt: $412.15 = $412.13 + $const412.14
2021-05-28 23:59:31,809 on stmt: $412.17 = build_tuple(items=[Var($412.15, interpn.py:64), Var(j, interpn.py:46)])
2021-05-28 23:59:31,809 on stmt: $412.18 = getitem(value=x, index=$412.17, fn=<built-in function getitem>)
2021-05-28 23:59:31,809 on stmt: $412.19 = weight * $412.18
2021-05-28 23:59:31,809 on stmt: $412.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$412.8, rhs=$412.19, static_lhs=Undefined, static_rhs=Undefined)
2021-05-28 23:59:31,809 on stmt: y[$412.5] = $412.20
2021-05-28 23:59:31,809 on stmt: jump 410
2021-05-28 23:59:31,809 ==== SSA block rewrite pass on 458
2021-05-28 23:59:31,809 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8845828>
2021-05-28 23:59:31,809 on stmt: jump 460
2021-05-28 23:59:31,809 ==== SSA block rewrite pass on 460
2021-05-28 23:59:31,809 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8845828>
2021-05-28 23:59:31,809 on stmt: jump 360
2021-05-28 23:59:31,809 ==== SSA block rewrite pass on 464
2021-05-28 23:59:31,809 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8845828>
2021-05-28 23:59:31,810 on stmt: jump 466
2021-05-28 23:59:31,810 ==== SSA block rewrite pass on 466
2021-05-28 23:59:31,810 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8845828>
2021-05-28 23:59:31,810 on stmt: $466.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register.2, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
2021-05-28 23:59:31,810 on stmt: time_register.1 = $466.3
2021-05-28 23:59:31,810 on stmt: jump 112
2021-05-28 23:59:31,810 ==== SSA block rewrite pass on 476
2021-05-28 23:59:31,810 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8845828>
2021-05-28 23:59:31,810 on stmt: jump 478
2021-05-28 23:59:31,810 ==== SSA block rewrite pass on 478
2021-05-28 23:59:31,810 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8845828>
2021-05-28 23:59:31,810 on stmt: $const478.1 = const(NoneType, None)
2021-05-28 23:59:31,810 on stmt: $478.2 = cast(value=$const478.1)
2021-05-28 23:59:31,810 on stmt: return $478.2
2021-05-28 23:59:31,810 Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x00000168E88450F0>],
             116: [<numba.core.ir.Assign object at 0x00000168E88B6DD8>]})
2021-05-28 23:59:31,811 ==== SSA block rewrite pass on 0
2021-05-28 23:59:31,811 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F60>
2021-05-28 23:59:31,811 on stmt: x = arg(0, name=x)
2021-05-28 23:59:31,811 on stmt: y = arg(1, name=y)
2021-05-28 23:59:31,811 on stmt: sample_ratio = arg(2, name=sample_ratio)
2021-05-28 23:59:31,811 on stmt: interp_win = arg(3, name=interp_win)
2021-05-28 23:59:31,811 on stmt: interp_delta = arg(4, name=interp_delta)
2021-05-28 23:59:31,811 on stmt: num_table = arg(5, name=num_table)
2021-05-28 23:59:31,811 on stmt: $0.1 = global(min: <built-in function min>)
2021-05-28 23:59:31,811 on stmt: $const0.2 = const(float, 1.0)
2021-05-28 23:59:31,811 on stmt: scale = call $0.1($const0.2, sample_ratio, func=$0.1, args=[Var($const0.2, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None)
2021-05-28 23:59:31,811 on stmt: $const0.5 = const(float, 1.0)
2021-05-28 23:59:31,811 on stmt: time_increment = $const0.5 / sample_ratio
2021-05-28 23:59:31,811 on stmt: $0.8 = global(int: <class 'int'>)
2021-05-28 23:59:31,811 on stmt: $0.11 = scale * num_table
2021-05-28 23:59:31,811 on stmt: index_step = call $0.8($0.11, func=$0.8, args=[Var($0.11, interpn.py:12)], kws=(), vararg=None)
2021-05-28 23:59:31,811 on stmt: time_register = const(float, 0.0)
2021-05-28 23:59:31,811 on stmt: n = const(int, 0)
2021-05-28 23:59:31,811 on stmt: frac = const(float, 0.0)
2021-05-28 23:59:31,811 on stmt: index_frac = const(float, 0.0)
2021-05-28 23:59:31,812 on stmt: offset = const(int, 0)
2021-05-28 23:59:31,812 on stmt: eta = const(float, 0.0)
2021-05-28 23:59:31,812 on stmt: weight = const(float, 0.0)
2021-05-28 23:59:31,812 on stmt: $0.21 = getattr(value=interp_win, attr=shape)
2021-05-28 23:59:31,812 on stmt: $const0.22 = const(int, 0)
2021-05-28 23:59:31,812 on stmt: nwin = static_getitem(value=$0.21, index=0, index_var=$const0.22, fn=<built-in function getitem>)
2021-05-28 23:59:31,812 on stmt: $0.25 = getattr(value=x, attr=shape)
2021-05-28 23:59:31,812 on stmt: $const0.26 = const(int, 0)
2021-05-28 23:59:31,812 on stmt: n_orig = static_getitem(value=$0.25, index=0, index_var=$const0.26, fn=<built-in function getitem>)
2021-05-28 23:59:31,812 on stmt: $0.29 = getattr(value=y, attr=shape)
2021-05-28 23:59:31,812 on stmt: $const0.30 = const(int, 0)
2021-05-28 23:59:31,812 on stmt: n_out = static_getitem(value=$0.29, index=0, index_var=$const0.30, fn=<built-in function getitem>)
2021-05-28 23:59:31,812 on stmt: $0.33 = getattr(value=y, attr=shape)
2021-05-28 23:59:31,812 on stmt: $const0.34 = const(int, 1)
2021-05-28 23:59:31,812 on stmt: n_channels = static_getitem(value=$0.33, index=1, index_var=$const0.34, fn=<built-in function getitem>)
2021-05-28 23:59:31,812 on stmt: jump 100
2021-05-28 23:59:31,812 ==== SSA block rewrite pass on 100
2021-05-28 23:59:31,812 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F60>
2021-05-28 23:59:31,812 on stmt: jump 104
2021-05-28 23:59:31,812 ==== SSA block rewrite pass on 104
2021-05-28 23:59:31,812 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F60>
2021-05-28 23:59:31,813 on stmt: $104.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,813 on stmt: $104.3 = call $104.1(n_out, func=$104.1, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None)
2021-05-28 23:59:31,813 on stmt: $104.4 = getiter(value=$104.3)
2021-05-28 23:59:31,813 on stmt: $phi112.1 = $104.4
2021-05-28 23:59:31,813 on stmt: jump 112
2021-05-28 23:59:31,813 ==== SSA block rewrite pass on 112
2021-05-28 23:59:31,813 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F60>
2021-05-28 23:59:31,813 on stmt: time_register.2 = phi(incoming_values=[Var(time_register, interpn.py:13), Var(time_register.1, interpn.py:67)], incoming_blocks=[104, 466])
2021-05-28 23:59:31,813 on stmt: $112.2 = iternext(value=$phi112.1)
2021-05-28 23:59:31,813 on stmt: $112.3 = pair_first(value=$112.2)
2021-05-28 23:59:31,813 on stmt: $112.4 = pair_second(value=$112.2)
2021-05-28 23:59:31,813 on stmt: $phi116.1 = $112.3
2021-05-28 23:59:31,813 on stmt: $phi476.1 = $112.3
2021-05-28 23:59:31,813 on stmt: $phi476.2 = $phi112.1
2021-05-28 23:59:31,813 on stmt: branch $112.4, 116, 476
2021-05-28 23:59:31,813 ==== SSA block rewrite pass on 116
2021-05-28 23:59:31,813 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F60>
2021-05-28 23:59:31,813 on stmt: t = $phi116.1
2021-05-28 23:59:31,813 on stmt: $116.2 = global(int: <class 'int'>)
2021-05-28 23:59:31,813 on stmt: n.1 = call $116.2(time_register.2, func=$116.2, args=[Var(time_register.2, interpn.py:27)], kws=(), vararg=None)
2021-05-28 23:59:31,813 on stmt: $116.8 = time_register.2 - n
2021-05-28 23:59:31,813 find_def var='n' stmt=$116.8 = time_register.2 - n
2021-05-28 23:59:31,814 replaced with: $116.8 = time_register.2 - n.1
2021-05-28 23:59:31,814 on stmt: frac = scale * $116.8
2021-05-28 23:59:31,814 on stmt: index_frac.1 = frac * num_table
2021-05-28 23:59:31,814 on stmt: $116.13 = global(int: <class 'int'>)
2021-05-28 23:59:31,814 on stmt: offset.1 = call $116.13(index_frac.1, func=$116.13, args=[Var(index_frac.1, interpn.py:35)], kws=(), vararg=None)
2021-05-28 23:59:31,814 on stmt: eta = index_frac.1 - offset.1
2021-05-28 23:59:31,814 on stmt: $116.19 = global(min: <built-in function min>)
2021-05-28 23:59:31,814 on stmt: $const116.21 = const(int, 1)
2021-05-28 23:59:31,814 on stmt: $116.22 = n + $const116.21
2021-05-28 23:59:31,814 find_def var='n' stmt=$116.22 = n + $const116.21
2021-05-28 23:59:31,814 replaced with: $116.22 = n.1 + $const116.21
2021-05-28 23:59:31,814 on stmt: $116.25 = nwin - offset.1
2021-05-28 23:59:31,814 on stmt: $116.27 = $116.25 // index_step
2021-05-28 23:59:31,814 on stmt: i_max = call $116.19($116.22, $116.27, func=$116.19, args=[Var($116.22, interpn.py:42), Var($116.27, interpn.py:42)], kws=(), vararg=None)
2021-05-28 23:59:31,814 on stmt: jump 184
2021-05-28 23:59:31,814 ==== SSA block rewrite pass on 184
2021-05-28 23:59:31,814 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F60>
2021-05-28 23:59:31,814 on stmt: jump 186
2021-05-28 23:59:31,814 ==== SSA block rewrite pass on 186
2021-05-28 23:59:31,814 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F60>
2021-05-28 23:59:31,814 on stmt: $186.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,815 on stmt: $186.3 = call $186.1(i_max, func=$186.1, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None)
2021-05-28 23:59:31,815 on stmt: $186.4 = getiter(value=$186.3)
2021-05-28 23:59:31,815 on stmt: $phi194.1 = $186.4
2021-05-28 23:59:31,815 on stmt: jump 194
2021-05-28 23:59:31,815 ==== SSA block rewrite pass on 194
2021-05-28 23:59:31,815 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F60>
2021-05-28 23:59:31,815 on stmt: $194.2 = iternext(value=$phi194.1)
2021-05-28 23:59:31,815 on stmt: $194.3 = pair_first(value=$194.2)
2021-05-28 23:59:31,815 on stmt: $194.4 = pair_second(value=$194.2)
2021-05-28 23:59:31,815 on stmt: $phi196.1 = $194.3
2021-05-28 23:59:31,815 on stmt: $phi290.1 = $194.3
2021-05-28 23:59:31,815 on stmt: $phi290.2 = $phi194.1
2021-05-28 23:59:31,815 on stmt: branch $194.4, 196, 290
2021-05-28 23:59:31,815 ==== SSA block rewrite pass on 196
2021-05-28 23:59:31,815 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F60>
2021-05-28 23:59:31,815 on stmt: i = $phi196.1
2021-05-28 23:59:31,815 on stmt: $196.6 = i * index_step
2021-05-28 23:59:31,815 on stmt: $196.7 = offset.1 + $196.6
2021-05-28 23:59:31,815 on stmt: $196.8 = getitem(value=interp_win, index=$196.7, fn=<built-in function getitem>)
2021-05-28 23:59:31,815 on stmt: $196.14 = i * index_step
2021-05-28 23:59:31,815 on stmt: $196.15 = offset.1 + $196.14
2021-05-28 23:59:31,816 on stmt: $196.16 = getitem(value=interp_delta, index=$196.15, fn=<built-in function getitem>)
2021-05-28 23:59:31,816 on stmt: $196.17 = eta * $196.16
2021-05-28 23:59:31,816 on stmt: weight = $196.8 + $196.17
2021-05-28 23:59:31,816 on stmt: jump 234
2021-05-28 23:59:31,816 ==== SSA block rewrite pass on 234
2021-05-28 23:59:31,816 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F60>
2021-05-28 23:59:31,816 on stmt: jump 236
2021-05-28 23:59:31,816 ==== SSA block rewrite pass on 236
2021-05-28 23:59:31,816 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F60>
2021-05-28 23:59:31,816 on stmt: $236.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,816 on stmt: $236.3 = call $236.1(n_channels, func=$236.1, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-28 23:59:31,816 on stmt: $236.4 = getiter(value=$236.3)
2021-05-28 23:59:31,816 on stmt: $phi244.1 = $236.4
2021-05-28 23:59:31,816 on stmt: jump 244
2021-05-28 23:59:31,816 ==== SSA block rewrite pass on 244
2021-05-28 23:59:31,816 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F60>
2021-05-28 23:59:31,816 on stmt: $244.2 = iternext(value=$phi244.1)
2021-05-28 23:59:31,816 on stmt: $244.3 = pair_first(value=$244.2)
2021-05-28 23:59:31,816 on stmt: $244.4 = pair_second(value=$244.2)
2021-05-28 23:59:31,816 on stmt: $phi246.1 = $244.3
2021-05-28 23:59:31,816 on stmt: $phi286.1 = $244.3
2021-05-28 23:59:31,816 on stmt: $phi286.2 = $phi244.1
2021-05-28 23:59:31,817 on stmt: branch $244.4, 246, 286
2021-05-28 23:59:31,817 ==== SSA block rewrite pass on 246
2021-05-28 23:59:31,817 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F60>
2021-05-28 23:59:31,817 on stmt: j = $phi246.1
2021-05-28 23:59:31,817 on stmt: $246.5 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-28 23:59:31,817 on stmt: $246.8 = getitem(value=y, index=$246.5, fn=<built-in function getitem>)
2021-05-28 23:59:31,817 on stmt: $246.13 = n - i
2021-05-28 23:59:31,817 find_def var='n' stmt=$246.13 = n - i
2021-05-28 23:59:31,817 find_def_from_top label 246
2021-05-28 23:59:31,817 idom 244 from label 246
2021-05-28 23:59:31,817 find_def_from_bottom label 244
2021-05-28 23:59:31,817 find_def_from_top label 244
2021-05-28 23:59:31,817 idom 236 from label 244
2021-05-28 23:59:31,817 find_def_from_bottom label 236
2021-05-28 23:59:31,817 find_def_from_top label 236
2021-05-28 23:59:31,817 idom 234 from label 236
2021-05-28 23:59:31,817 find_def_from_bottom label 234
2021-05-28 23:59:31,817 find_def_from_top label 234
2021-05-28 23:59:31,817 idom 196 from label 234
2021-05-28 23:59:31,817 find_def_from_bottom label 196
2021-05-28 23:59:31,817 find_def_from_top label 196
2021-05-28 23:59:31,817 idom 194 from label 196
2021-05-28 23:59:31,817 find_def_from_bottom label 194
2021-05-28 23:59:31,818 find_def_from_top label 194
2021-05-28 23:59:31,818 idom 186 from label 194
2021-05-28 23:59:31,818 find_def_from_bottom label 186
2021-05-28 23:59:31,818 find_def_from_top label 186
2021-05-28 23:59:31,818 idom 184 from label 186
2021-05-28 23:59:31,818 find_def_from_bottom label 184
2021-05-28 23:59:31,818 find_def_from_top label 184
2021-05-28 23:59:31,818 idom 116 from label 184
2021-05-28 23:59:31,818 find_def_from_bottom label 116
2021-05-28 23:59:31,818 replaced with: $246.13 = n.1 - i
2021-05-28 23:59:31,818 on stmt: $246.15 = build_tuple(items=[Var($246.13, interpn.py:47), Var(j, interpn.py:46)])
2021-05-28 23:59:31,818 on stmt: $246.16 = getitem(value=x, index=$246.15, fn=<built-in function getitem>)
2021-05-28 23:59:31,818 on stmt: $246.17 = weight * $246.16
2021-05-28 23:59:31,818 on stmt: $246.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$246.8, rhs=$246.17, static_lhs=Undefined, static_rhs=Undefined)
2021-05-28 23:59:31,818 on stmt: y[$246.5] = $246.18
2021-05-28 23:59:31,818 on stmt: jump 244
2021-05-28 23:59:31,818 ==== SSA block rewrite pass on 286
2021-05-28 23:59:31,818 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F60>
2021-05-28 23:59:31,818 on stmt: jump 288
2021-05-28 23:59:31,818 ==== SSA block rewrite pass on 288
2021-05-28 23:59:31,818 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F60>
2021-05-28 23:59:31,818 on stmt: jump 194
2021-05-28 23:59:31,819 ==== SSA block rewrite pass on 290
2021-05-28 23:59:31,819 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F60>
2021-05-28 23:59:31,819 on stmt: jump 292
2021-05-28 23:59:31,819 ==== SSA block rewrite pass on 292
2021-05-28 23:59:31,819 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F60>
2021-05-28 23:59:31,819 on stmt: $292.3 = scale - frac
2021-05-28 23:59:31,819 on stmt: frac = $292.3
2021-05-28 23:59:31,819 on stmt: index_frac.2 = frac * num_table
2021-05-28 23:59:31,819 on stmt: $292.7 = global(int: <class 'int'>)
2021-05-28 23:59:31,819 on stmt: offset.2 = call $292.7(index_frac.2, func=$292.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None)
2021-05-28 23:59:31,819 on stmt: eta = index_frac.2 - offset.2
2021-05-28 23:59:31,819 on stmt: $292.13 = global(min: <built-in function min>)
2021-05-28 23:59:31,819 on stmt: $292.16 = n_orig - n
2021-05-28 23:59:31,819 find_def var='n' stmt=$292.16 = n_orig - n
2021-05-28 23:59:31,819 find_def_from_top label 292
2021-05-28 23:59:31,819 idom 290 from label 292
2021-05-28 23:59:31,819 find_def_from_bottom label 290
2021-05-28 23:59:31,819 find_def_from_top label 290
2021-05-28 23:59:31,819 idom 194 from label 290
2021-05-28 23:59:31,819 find_def_from_bottom label 194
2021-05-28 23:59:31,819 find_def_from_top label 194
2021-05-28 23:59:31,819 idom 186 from label 194
2021-05-28 23:59:31,819 find_def_from_bottom label 186
2021-05-28 23:59:31,820 find_def_from_top label 186
2021-05-28 23:59:31,820 idom 184 from label 186
2021-05-28 23:59:31,820 find_def_from_bottom label 184
2021-05-28 23:59:31,820 find_def_from_top label 184
2021-05-28 23:59:31,820 idom 116 from label 184
2021-05-28 23:59:31,820 find_def_from_bottom label 116
2021-05-28 23:59:31,820 replaced with: $292.16 = n_orig - n.1
2021-05-28 23:59:31,820 on stmt: $const292.17 = const(int, 1)
2021-05-28 23:59:31,820 on stmt: $292.18 = $292.16 - $const292.17
2021-05-28 23:59:31,820 on stmt: $292.21 = nwin - offset.2
2021-05-28 23:59:31,820 on stmt: $292.23 = $292.21 // index_step
2021-05-28 23:59:31,820 on stmt: k_max = call $292.13($292.18, $292.23, func=$292.13, args=[Var($292.18, interpn.py:60), Var($292.23, interpn.py:60)], kws=(), vararg=None)
2021-05-28 23:59:31,820 on stmt: jump 350
2021-05-28 23:59:31,820 ==== SSA block rewrite pass on 350
2021-05-28 23:59:31,820 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F60>
2021-05-28 23:59:31,820 on stmt: jump 352
2021-05-28 23:59:31,820 ==== SSA block rewrite pass on 352
2021-05-28 23:59:31,820 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F60>
2021-05-28 23:59:31,820 on stmt: $352.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,820 on stmt: $352.3 = call $352.1(k_max, func=$352.1, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None)
2021-05-28 23:59:31,820 on stmt: $352.4 = getiter(value=$352.3)
2021-05-28 23:59:31,820 on stmt: $phi360.1 = $352.4
2021-05-28 23:59:31,821 on stmt: jump 360
2021-05-28 23:59:31,821 ==== SSA block rewrite pass on 360
2021-05-28 23:59:31,821 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F60>
2021-05-28 23:59:31,821 on stmt: $360.2 = iternext(value=$phi360.1)
2021-05-28 23:59:31,821 on stmt: $360.3 = pair_first(value=$360.2)
2021-05-28 23:59:31,821 on stmt: $360.4 = pair_second(value=$360.2)
2021-05-28 23:59:31,821 on stmt: $phi362.1 = $360.3
2021-05-28 23:59:31,821 on stmt: $phi464.1 = $360.3
2021-05-28 23:59:31,821 on stmt: $phi464.2 = $phi360.1
2021-05-28 23:59:31,821 on stmt: branch $360.4, 362, 464
2021-05-28 23:59:31,821 ==== SSA block rewrite pass on 362
2021-05-28 23:59:31,821 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F60>
2021-05-28 23:59:31,821 on stmt: k = $phi362.1
2021-05-28 23:59:31,821 on stmt: $362.6 = k * index_step
2021-05-28 23:59:31,821 on stmt: $362.7 = offset.2 + $362.6
2021-05-28 23:59:31,821 on stmt: $362.8 = getitem(value=interp_win, index=$362.7, fn=<built-in function getitem>)
2021-05-28 23:59:31,821 on stmt: $362.14 = k * index_step
2021-05-28 23:59:31,821 on stmt: $362.15 = offset.2 + $362.14
2021-05-28 23:59:31,821 on stmt: $362.16 = getitem(value=interp_delta, index=$362.15, fn=<built-in function getitem>)
2021-05-28 23:59:31,821 on stmt: $362.17 = eta * $362.16
2021-05-28 23:59:31,821 on stmt: weight = $362.8 + $362.17
2021-05-28 23:59:31,821 on stmt: jump 400
2021-05-28 23:59:31,822 ==== SSA block rewrite pass on 400
2021-05-28 23:59:31,822 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F60>
2021-05-28 23:59:31,822 on stmt: jump 402
2021-05-28 23:59:31,822 ==== SSA block rewrite pass on 402
2021-05-28 23:59:31,822 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F60>
2021-05-28 23:59:31,822 on stmt: $402.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,822 on stmt: $402.3 = call $402.1(n_channels, func=$402.1, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-28 23:59:31,822 on stmt: $402.4 = getiter(value=$402.3)
2021-05-28 23:59:31,822 on stmt: $phi410.1 = $402.4
2021-05-28 23:59:31,822 on stmt: jump 410
2021-05-28 23:59:31,822 ==== SSA block rewrite pass on 410
2021-05-28 23:59:31,822 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F60>
2021-05-28 23:59:31,822 on stmt: $410.2 = iternext(value=$phi410.1)
2021-05-28 23:59:31,822 on stmt: $410.3 = pair_first(value=$410.2)
2021-05-28 23:59:31,822 on stmt: $410.4 = pair_second(value=$410.2)
2021-05-28 23:59:31,822 on stmt: $phi412.1 = $410.3
2021-05-28 23:59:31,822 on stmt: $phi458.1 = $410.3
2021-05-28 23:59:31,822 on stmt: $phi458.2 = $phi410.1
2021-05-28 23:59:31,822 on stmt: branch $410.4, 412, 458
2021-05-28 23:59:31,822 ==== SSA block rewrite pass on 412
2021-05-28 23:59:31,822 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F60>
2021-05-28 23:59:31,822 on stmt: j = $phi412.1
2021-05-28 23:59:31,822 on stmt: $412.5 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-28 23:59:31,823 on stmt: $412.8 = getitem(value=y, index=$412.5, fn=<built-in function getitem>)
2021-05-28 23:59:31,823 on stmt: $412.13 = n + k
2021-05-28 23:59:31,823 find_def var='n' stmt=$412.13 = n + k
2021-05-28 23:59:31,823 find_def_from_top label 412
2021-05-28 23:59:31,823 idom 410 from label 412
2021-05-28 23:59:31,823 find_def_from_bottom label 410
2021-05-28 23:59:31,823 find_def_from_top label 410
2021-05-28 23:59:31,823 idom 402 from label 410
2021-05-28 23:59:31,823 find_def_from_bottom label 402
2021-05-28 23:59:31,823 find_def_from_top label 402
2021-05-28 23:59:31,823 idom 400 from label 402
2021-05-28 23:59:31,823 find_def_from_bottom label 400
2021-05-28 23:59:31,823 find_def_from_top label 400
2021-05-28 23:59:31,823 idom 362 from label 400
2021-05-28 23:59:31,823 find_def_from_bottom label 362
2021-05-28 23:59:31,823 find_def_from_top label 362
2021-05-28 23:59:31,823 idom 360 from label 362
2021-05-28 23:59:31,823 find_def_from_bottom label 360
2021-05-28 23:59:31,823 find_def_from_top label 360
2021-05-28 23:59:31,823 idom 352 from label 360
2021-05-28 23:59:31,823 find_def_from_bottom label 352
2021-05-28 23:59:31,823 find_def_from_top label 352
2021-05-28 23:59:31,824 idom 350 from label 352
2021-05-28 23:59:31,824 find_def_from_bottom label 350
2021-05-28 23:59:31,824 find_def_from_top label 350
2021-05-28 23:59:31,824 idom 292 from label 350
2021-05-28 23:59:31,824 find_def_from_bottom label 292
2021-05-28 23:59:31,824 find_def_from_top label 292
2021-05-28 23:59:31,824 idom 290 from label 292
2021-05-28 23:59:31,824 find_def_from_bottom label 290
2021-05-28 23:59:31,824 find_def_from_top label 290
2021-05-28 23:59:31,824 idom 194 from label 290
2021-05-28 23:59:31,824 find_def_from_bottom label 194
2021-05-28 23:59:31,824 find_def_from_top label 194
2021-05-28 23:59:31,824 idom 186 from label 194
2021-05-28 23:59:31,824 find_def_from_bottom label 186
2021-05-28 23:59:31,824 find_def_from_top label 186
2021-05-28 23:59:31,824 idom 184 from label 186
2021-05-28 23:59:31,824 find_def_from_bottom label 184
2021-05-28 23:59:31,824 find_def_from_top label 184
2021-05-28 23:59:31,824 idom 116 from label 184
2021-05-28 23:59:31,824 find_def_from_bottom label 116
2021-05-28 23:59:31,824 replaced with: $412.13 = n.1 + k
2021-05-28 23:59:31,824 on stmt: $const412.14 = const(int, 1)
2021-05-28 23:59:31,824 on stmt: $412.15 = $412.13 + $const412.14
2021-05-28 23:59:31,824 on stmt: $412.17 = build_tuple(items=[Var($412.15, interpn.py:64), Var(j, interpn.py:46)])
2021-05-28 23:59:31,824 on stmt: $412.18 = getitem(value=x, index=$412.17, fn=<built-in function getitem>)
2021-05-28 23:59:31,824 on stmt: $412.19 = weight * $412.18
2021-05-28 23:59:31,824 on stmt: $412.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$412.8, rhs=$412.19, static_lhs=Undefined, static_rhs=Undefined)
2021-05-28 23:59:31,825 on stmt: y[$412.5] = $412.20
2021-05-28 23:59:31,825 on stmt: jump 410
2021-05-28 23:59:31,825 ==== SSA block rewrite pass on 458
2021-05-28 23:59:31,825 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F60>
2021-05-28 23:59:31,825 on stmt: jump 460
2021-05-28 23:59:31,825 ==== SSA block rewrite pass on 460
2021-05-28 23:59:31,825 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F60>
2021-05-28 23:59:31,825 on stmt: jump 360
2021-05-28 23:59:31,825 ==== SSA block rewrite pass on 464
2021-05-28 23:59:31,825 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F60>
2021-05-28 23:59:31,825 on stmt: jump 466
2021-05-28 23:59:31,825 ==== SSA block rewrite pass on 466
2021-05-28 23:59:31,825 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F60>
2021-05-28 23:59:31,825 on stmt: $466.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register.2, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
2021-05-28 23:59:31,825 on stmt: time_register.1 = $466.3
2021-05-28 23:59:31,825 on stmt: jump 112
2021-05-28 23:59:31,825 ==== SSA block rewrite pass on 476
2021-05-28 23:59:31,825 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F60>
2021-05-28 23:59:31,825 on stmt: jump 478
2021-05-28 23:59:31,825 ==== SSA block rewrite pass on 478
2021-05-28 23:59:31,825 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8F60>
2021-05-28 23:59:31,825 on stmt: $const478.1 = const(NoneType, None)
2021-05-28 23:59:31,825 on stmt: $478.2 = cast(value=$const478.1)
2021-05-28 23:59:31,825 on stmt: return $478.2
2021-05-28 23:59:31,826 Fix SSA violator on var weight
2021-05-28 23:59:31,826 ==== SSA block rewrite pass on 0
2021-05-28 23:59:31,826 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6438>
2021-05-28 23:59:31,826 on stmt: x = arg(0, name=x)
2021-05-28 23:59:31,826 on stmt: y = arg(1, name=y)
2021-05-28 23:59:31,826 on stmt: sample_ratio = arg(2, name=sample_ratio)
2021-05-28 23:59:31,826 on stmt: interp_win = arg(3, name=interp_win)
2021-05-28 23:59:31,826 on stmt: interp_delta = arg(4, name=interp_delta)
2021-05-28 23:59:31,826 on stmt: num_table = arg(5, name=num_table)
2021-05-28 23:59:31,826 on stmt: $0.1 = global(min: <built-in function min>)
2021-05-28 23:59:31,826 on stmt: $const0.2 = const(float, 1.0)
2021-05-28 23:59:31,826 on stmt: scale = call $0.1($const0.2, sample_ratio, func=$0.1, args=[Var($const0.2, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None)
2021-05-28 23:59:31,826 on stmt: $const0.5 = const(float, 1.0)
2021-05-28 23:59:31,826 on stmt: time_increment = $const0.5 / sample_ratio
2021-05-28 23:59:31,826 on stmt: $0.8 = global(int: <class 'int'>)
2021-05-28 23:59:31,826 on stmt: $0.11 = scale * num_table
2021-05-28 23:59:31,826 on stmt: index_step = call $0.8($0.11, func=$0.8, args=[Var($0.11, interpn.py:12)], kws=(), vararg=None)
2021-05-28 23:59:31,826 on stmt: time_register = const(float, 0.0)
2021-05-28 23:59:31,826 on stmt: n = const(int, 0)
2021-05-28 23:59:31,826 on stmt: frac = const(float, 0.0)
2021-05-28 23:59:31,826 on stmt: index_frac = const(float, 0.0)
2021-05-28 23:59:31,827 on stmt: offset = const(int, 0)
2021-05-28 23:59:31,827 on stmt: eta = const(float, 0.0)
2021-05-28 23:59:31,827 on stmt: weight = const(float, 0.0)
2021-05-28 23:59:31,827 first assign: weight
2021-05-28 23:59:31,827 replaced with: weight = const(float, 0.0)
2021-05-28 23:59:31,827 on stmt: $0.21 = getattr(value=interp_win, attr=shape)
2021-05-28 23:59:31,827 on stmt: $const0.22 = const(int, 0)
2021-05-28 23:59:31,827 on stmt: nwin = static_getitem(value=$0.21, index=0, index_var=$const0.22, fn=<built-in function getitem>)
2021-05-28 23:59:31,827 on stmt: $0.25 = getattr(value=x, attr=shape)
2021-05-28 23:59:31,827 on stmt: $const0.26 = const(int, 0)
2021-05-28 23:59:31,827 on stmt: n_orig = static_getitem(value=$0.25, index=0, index_var=$const0.26, fn=<built-in function getitem>)
2021-05-28 23:59:31,827 on stmt: $0.29 = getattr(value=y, attr=shape)
2021-05-28 23:59:31,827 on stmt: $const0.30 = const(int, 0)
2021-05-28 23:59:31,827 on stmt: n_out = static_getitem(value=$0.29, index=0, index_var=$const0.30, fn=<built-in function getitem>)
2021-05-28 23:59:31,827 on stmt: $0.33 = getattr(value=y, attr=shape)
2021-05-28 23:59:31,827 on stmt: $const0.34 = const(int, 1)
2021-05-28 23:59:31,827 on stmt: n_channels = static_getitem(value=$0.33, index=1, index_var=$const0.34, fn=<built-in function getitem>)
2021-05-28 23:59:31,827 on stmt: jump 100
2021-05-28 23:59:31,827 ==== SSA block rewrite pass on 100
2021-05-28 23:59:31,827 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6438>
2021-05-28 23:59:31,827 on stmt: jump 104
2021-05-28 23:59:31,827 ==== SSA block rewrite pass on 104
2021-05-28 23:59:31,827 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6438>
2021-05-28 23:59:31,827 on stmt: $104.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,827 on stmt: $104.3 = call $104.1(n_out, func=$104.1, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None)
2021-05-28 23:59:31,828 on stmt: $104.4 = getiter(value=$104.3)
2021-05-28 23:59:31,828 on stmt: $phi112.1 = $104.4
2021-05-28 23:59:31,828 on stmt: jump 112
2021-05-28 23:59:31,828 ==== SSA block rewrite pass on 112
2021-05-28 23:59:31,828 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6438>
2021-05-28 23:59:31,828 on stmt: time_register.2 = phi(incoming_values=[Var(time_register, interpn.py:13), Var(time_register.1, interpn.py:67)], incoming_blocks=[104, 466])
2021-05-28 23:59:31,828 on stmt: $112.2 = iternext(value=$phi112.1)
2021-05-28 23:59:31,828 on stmt: $112.3 = pair_first(value=$112.2)
2021-05-28 23:59:31,828 on stmt: $112.4 = pair_second(value=$112.2)
2021-05-28 23:59:31,828 on stmt: $phi116.1 = $112.3
2021-05-28 23:59:31,828 on stmt: $phi476.1 = $112.3
2021-05-28 23:59:31,828 on stmt: $phi476.2 = $phi112.1
2021-05-28 23:59:31,828 on stmt: branch $112.4, 116, 476
2021-05-28 23:59:31,828 ==== SSA block rewrite pass on 116
2021-05-28 23:59:31,828 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6438>
2021-05-28 23:59:31,828 on stmt: t = $phi116.1
2021-05-28 23:59:31,828 on stmt: $116.2 = global(int: <class 'int'>)
2021-05-28 23:59:31,828 on stmt: n.1 = call $116.2(time_register.2, func=$116.2, args=[Var(time_register.2, interpn.py:27)], kws=(), vararg=None)
2021-05-28 23:59:31,828 on stmt: $116.8 = time_register.2 - n.1
2021-05-28 23:59:31,828 on stmt: frac = scale * $116.8
2021-05-28 23:59:31,828 on stmt: index_frac.1 = frac * num_table
2021-05-28 23:59:31,828 on stmt: $116.13 = global(int: <class 'int'>)
2021-05-28 23:59:31,829 on stmt: offset.1 = call $116.13(index_frac.1, func=$116.13, args=[Var(index_frac.1, interpn.py:35)], kws=(), vararg=None)
2021-05-28 23:59:31,829 on stmt: eta = index_frac.1 - offset.1
2021-05-28 23:59:31,829 on stmt: $116.19 = global(min: <built-in function min>)
2021-05-28 23:59:31,829 on stmt: $const116.21 = const(int, 1)
2021-05-28 23:59:31,829 on stmt: $116.22 = n.1 + $const116.21
2021-05-28 23:59:31,829 on stmt: $116.25 = nwin - offset.1
2021-05-28 23:59:31,829 on stmt: $116.27 = $116.25 // index_step
2021-05-28 23:59:31,829 on stmt: i_max = call $116.19($116.22, $116.27, func=$116.19, args=[Var($116.22, interpn.py:42), Var($116.27, interpn.py:42)], kws=(), vararg=None)
2021-05-28 23:59:31,829 on stmt: jump 184
2021-05-28 23:59:31,829 ==== SSA block rewrite pass on 184
2021-05-28 23:59:31,829 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6438>
2021-05-28 23:59:31,829 on stmt: jump 186
2021-05-28 23:59:31,829 ==== SSA block rewrite pass on 186
2021-05-28 23:59:31,829 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6438>
2021-05-28 23:59:31,829 on stmt: $186.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,829 on stmt: $186.3 = call $186.1(i_max, func=$186.1, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None)
2021-05-28 23:59:31,829 on stmt: $186.4 = getiter(value=$186.3)
2021-05-28 23:59:31,829 on stmt: $phi194.1 = $186.4
2021-05-28 23:59:31,829 on stmt: jump 194
2021-05-28 23:59:31,829 ==== SSA block rewrite pass on 194
2021-05-28 23:59:31,830 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6438>
2021-05-28 23:59:31,830 on stmt: $194.2 = iternext(value=$phi194.1)
2021-05-28 23:59:31,830 on stmt: $194.3 = pair_first(value=$194.2)
2021-05-28 23:59:31,830 on stmt: $194.4 = pair_second(value=$194.2)
2021-05-28 23:59:31,830 on stmt: $phi196.1 = $194.3
2021-05-28 23:59:31,830 on stmt: $phi290.1 = $194.3
2021-05-28 23:59:31,830 on stmt: $phi290.2 = $phi194.1
2021-05-28 23:59:31,830 on stmt: branch $194.4, 196, 290
2021-05-28 23:59:31,830 ==== SSA block rewrite pass on 196
2021-05-28 23:59:31,830 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6438>
2021-05-28 23:59:31,830 on stmt: i = $phi196.1
2021-05-28 23:59:31,830 on stmt: $196.6 = i * index_step
2021-05-28 23:59:31,830 on stmt: $196.7 = offset.1 + $196.6
2021-05-28 23:59:31,830 on stmt: $196.8 = getitem(value=interp_win, index=$196.7, fn=<built-in function getitem>)
2021-05-28 23:59:31,830 on stmt: $196.14 = i * index_step
2021-05-28 23:59:31,830 on stmt: $196.15 = offset.1 + $196.14
2021-05-28 23:59:31,830 on stmt: $196.16 = getitem(value=interp_delta, index=$196.15, fn=<built-in function getitem>)
2021-05-28 23:59:31,830 on stmt: $196.17 = eta * $196.16
2021-05-28 23:59:31,830 on stmt: weight = $196.8 + $196.17
2021-05-28 23:59:31,830 replaced with: weight.1 = $196.8 + $196.17
2021-05-28 23:59:31,830 on stmt: jump 234
2021-05-28 23:59:31,830 ==== SSA block rewrite pass on 234
2021-05-28 23:59:31,830 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6438>
2021-05-28 23:59:31,830 on stmt: jump 236
2021-05-28 23:59:31,831 ==== SSA block rewrite pass on 236
2021-05-28 23:59:31,831 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6438>
2021-05-28 23:59:31,831 on stmt: $236.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,831 on stmt: $236.3 = call $236.1(n_channels, func=$236.1, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-28 23:59:31,831 on stmt: $236.4 = getiter(value=$236.3)
2021-05-28 23:59:31,831 on stmt: $phi244.1 = $236.4
2021-05-28 23:59:31,831 on stmt: jump 244
2021-05-28 23:59:31,831 ==== SSA block rewrite pass on 244
2021-05-28 23:59:31,831 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6438>
2021-05-28 23:59:31,831 on stmt: $244.2 = iternext(value=$phi244.1)
2021-05-28 23:59:31,831 on stmt: $244.3 = pair_first(value=$244.2)
2021-05-28 23:59:31,831 on stmt: $244.4 = pair_second(value=$244.2)
2021-05-28 23:59:31,831 on stmt: $phi246.1 = $244.3
2021-05-28 23:59:31,831 on stmt: $phi286.1 = $244.3
2021-05-28 23:59:31,831 on stmt: $phi286.2 = $phi244.1
2021-05-28 23:59:31,831 on stmt: branch $244.4, 246, 286
2021-05-28 23:59:31,831 ==== SSA block rewrite pass on 246
2021-05-28 23:59:31,831 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6438>
2021-05-28 23:59:31,831 on stmt: j = $phi246.1
2021-05-28 23:59:31,831 on stmt: $246.5 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-28 23:59:31,831 on stmt: $246.8 = getitem(value=y, index=$246.5, fn=<built-in function getitem>)
2021-05-28 23:59:31,832 on stmt: $246.13 = n.1 - i
2021-05-28 23:59:31,832 on stmt: $246.15 = build_tuple(items=[Var($246.13, interpn.py:47), Var(j, interpn.py:46)])
2021-05-28 23:59:31,832 on stmt: $246.16 = getitem(value=x, index=$246.15, fn=<built-in function getitem>)
2021-05-28 23:59:31,832 on stmt: $246.17 = weight * $246.16
2021-05-28 23:59:31,832 on stmt: $246.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$246.8, rhs=$246.17, static_lhs=Undefined, static_rhs=Undefined)
2021-05-28 23:59:31,832 on stmt: y[$246.5] = $246.18
2021-05-28 23:59:31,832 on stmt: jump 244
2021-05-28 23:59:31,832 ==== SSA block rewrite pass on 286
2021-05-28 23:59:31,832 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6438>
2021-05-28 23:59:31,832 on stmt: jump 288
2021-05-28 23:59:31,832 ==== SSA block rewrite pass on 288
2021-05-28 23:59:31,832 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6438>
2021-05-28 23:59:31,832 on stmt: jump 194
2021-05-28 23:59:31,832 ==== SSA block rewrite pass on 290
2021-05-28 23:59:31,832 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6438>
2021-05-28 23:59:31,832 on stmt: jump 292
2021-05-28 23:59:31,832 ==== SSA block rewrite pass on 292
2021-05-28 23:59:31,832 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6438>
2021-05-28 23:59:31,832 on stmt: $292.3 = scale - frac
2021-05-28 23:59:31,832 on stmt: frac = $292.3
2021-05-28 23:59:31,832 on stmt: index_frac.2 = frac * num_table
2021-05-28 23:59:31,832 on stmt: $292.7 = global(int: <class 'int'>)
2021-05-28 23:59:31,832 on stmt: offset.2 = call $292.7(index_frac.2, func=$292.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None)
2021-05-28 23:59:31,833 on stmt: eta = index_frac.2 - offset.2
2021-05-28 23:59:31,833 on stmt: $292.13 = global(min: <built-in function min>)
2021-05-28 23:59:31,833 on stmt: $292.16 = n_orig - n.1
2021-05-28 23:59:31,833 on stmt: $const292.17 = const(int, 1)
2021-05-28 23:59:31,833 on stmt: $292.18 = $292.16 - $const292.17
2021-05-28 23:59:31,833 on stmt: $292.21 = nwin - offset.2
2021-05-28 23:59:31,833 on stmt: $292.23 = $292.21 // index_step
2021-05-28 23:59:31,833 on stmt: k_max = call $292.13($292.18, $292.23, func=$292.13, args=[Var($292.18, interpn.py:60), Var($292.23, interpn.py:60)], kws=(), vararg=None)
2021-05-28 23:59:31,833 on stmt: jump 350
2021-05-28 23:59:31,833 ==== SSA block rewrite pass on 350
2021-05-28 23:59:31,833 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6438>
2021-05-28 23:59:31,833 on stmt: jump 352
2021-05-28 23:59:31,833 ==== SSA block rewrite pass on 352
2021-05-28 23:59:31,833 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6438>
2021-05-28 23:59:31,833 on stmt: $352.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,833 on stmt: $352.3 = call $352.1(k_max, func=$352.1, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None)
2021-05-28 23:59:31,833 on stmt: $352.4 = getiter(value=$352.3)
2021-05-28 23:59:31,833 on stmt: $phi360.1 = $352.4
2021-05-28 23:59:31,833 on stmt: jump 360
2021-05-28 23:59:31,833 ==== SSA block rewrite pass on 360
2021-05-28 23:59:31,833 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6438>
2021-05-28 23:59:31,834 on stmt: $360.2 = iternext(value=$phi360.1)
2021-05-28 23:59:31,834 on stmt: $360.3 = pair_first(value=$360.2)
2021-05-28 23:59:31,834 on stmt: $360.4 = pair_second(value=$360.2)
2021-05-28 23:59:31,834 on stmt: $phi362.1 = $360.3
2021-05-28 23:59:31,834 on stmt: $phi464.1 = $360.3
2021-05-28 23:59:31,834 on stmt: $phi464.2 = $phi360.1
2021-05-28 23:59:31,834 on stmt: branch $360.4, 362, 464
2021-05-28 23:59:31,834 ==== SSA block rewrite pass on 362
2021-05-28 23:59:31,834 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6438>
2021-05-28 23:59:31,834 on stmt: k = $phi362.1
2021-05-28 23:59:31,834 on stmt: $362.6 = k * index_step
2021-05-28 23:59:31,834 on stmt: $362.7 = offset.2 + $362.6
2021-05-28 23:59:31,834 on stmt: $362.8 = getitem(value=interp_win, index=$362.7, fn=<built-in function getitem>)
2021-05-28 23:59:31,834 on stmt: $362.14 = k * index_step
2021-05-28 23:59:31,834 on stmt: $362.15 = offset.2 + $362.14
2021-05-28 23:59:31,834 on stmt: $362.16 = getitem(value=interp_delta, index=$362.15, fn=<built-in function getitem>)
2021-05-28 23:59:31,834 on stmt: $362.17 = eta * $362.16
2021-05-28 23:59:31,834 on stmt: weight = $362.8 + $362.17
2021-05-28 23:59:31,834 replaced with: weight.2 = $362.8 + $362.17
2021-05-28 23:59:31,834 on stmt: jump 400
2021-05-28 23:59:31,834 ==== SSA block rewrite pass on 400
2021-05-28 23:59:31,834 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6438>
2021-05-28 23:59:31,834 on stmt: jump 402
2021-05-28 23:59:31,834 ==== SSA block rewrite pass on 402
2021-05-28 23:59:31,834 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6438>
2021-05-28 23:59:31,835 on stmt: $402.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,835 on stmt: $402.3 = call $402.1(n_channels, func=$402.1, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-28 23:59:31,835 on stmt: $402.4 = getiter(value=$402.3)
2021-05-28 23:59:31,835 on stmt: $phi410.1 = $402.4
2021-05-28 23:59:31,835 on stmt: jump 410
2021-05-28 23:59:31,835 ==== SSA block rewrite pass on 410
2021-05-28 23:59:31,835 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6438>
2021-05-28 23:59:31,835 on stmt: $410.2 = iternext(value=$phi410.1)
2021-05-28 23:59:31,835 on stmt: $410.3 = pair_first(value=$410.2)
2021-05-28 23:59:31,835 on stmt: $410.4 = pair_second(value=$410.2)
2021-05-28 23:59:31,835 on stmt: $phi412.1 = $410.3
2021-05-28 23:59:31,835 on stmt: $phi458.1 = $410.3
2021-05-28 23:59:31,835 on stmt: $phi458.2 = $phi410.1
2021-05-28 23:59:31,835 on stmt: branch $410.4, 412, 458
2021-05-28 23:59:31,835 ==== SSA block rewrite pass on 412
2021-05-28 23:59:31,835 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6438>
2021-05-28 23:59:31,835 on stmt: j = $phi412.1
2021-05-28 23:59:31,835 on stmt: $412.5 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-28 23:59:31,835 on stmt: $412.8 = getitem(value=y, index=$412.5, fn=<built-in function getitem>)
2021-05-28 23:59:31,835 on stmt: $412.13 = n.1 + k
2021-05-28 23:59:31,836 on stmt: $const412.14 = const(int, 1)
2021-05-28 23:59:31,836 on stmt: $412.15 = $412.13 + $const412.14
2021-05-28 23:59:31,836 on stmt: $412.17 = build_tuple(items=[Var($412.15, interpn.py:64), Var(j, interpn.py:46)])
2021-05-28 23:59:31,836 on stmt: $412.18 = getitem(value=x, index=$412.17, fn=<built-in function getitem>)
2021-05-28 23:59:31,836 on stmt: $412.19 = weight * $412.18
2021-05-28 23:59:31,836 on stmt: $412.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$412.8, rhs=$412.19, static_lhs=Undefined, static_rhs=Undefined)
2021-05-28 23:59:31,836 on stmt: y[$412.5] = $412.20
2021-05-28 23:59:31,836 on stmt: jump 410
2021-05-28 23:59:31,836 ==== SSA block rewrite pass on 458
2021-05-28 23:59:31,836 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6438>
2021-05-28 23:59:31,836 on stmt: jump 460
2021-05-28 23:59:31,836 ==== SSA block rewrite pass on 460
2021-05-28 23:59:31,836 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6438>
2021-05-28 23:59:31,836 on stmt: jump 360
2021-05-28 23:59:31,836 ==== SSA block rewrite pass on 464
2021-05-28 23:59:31,836 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6438>
2021-05-28 23:59:31,836 on stmt: jump 466
2021-05-28 23:59:31,836 ==== SSA block rewrite pass on 466
2021-05-28 23:59:31,836 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6438>
2021-05-28 23:59:31,836 on stmt: $466.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register.2, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
2021-05-28 23:59:31,836 on stmt: time_register.1 = $466.3
2021-05-28 23:59:31,837 on stmt: jump 112
2021-05-28 23:59:31,837 ==== SSA block rewrite pass on 476
2021-05-28 23:59:31,837 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6438>
2021-05-28 23:59:31,837 on stmt: jump 478
2021-05-28 23:59:31,837 ==== SSA block rewrite pass on 478
2021-05-28 23:59:31,837 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88B6438>
2021-05-28 23:59:31,837 on stmt: $const478.1 = const(NoneType, None)
2021-05-28 23:59:31,837 on stmt: $478.2 = cast(value=$const478.1)
2021-05-28 23:59:31,837 on stmt: return $478.2
2021-05-28 23:59:31,837 Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x00000168E88B6C88>],
             196: [<numba.core.ir.Assign object at 0x00000168E8845748>],
             362: [<numba.core.ir.Assign object at 0x00000168E8903908>]})
2021-05-28 23:59:31,838 ==== SSA block rewrite pass on 0
2021-05-28 23:59:31,838 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8FD0>
2021-05-28 23:59:31,838 on stmt: x = arg(0, name=x)
2021-05-28 23:59:31,838 on stmt: y = arg(1, name=y)
2021-05-28 23:59:31,838 on stmt: sample_ratio = arg(2, name=sample_ratio)
2021-05-28 23:59:31,838 on stmt: interp_win = arg(3, name=interp_win)
2021-05-28 23:59:31,838 on stmt: interp_delta = arg(4, name=interp_delta)
2021-05-28 23:59:31,838 on stmt: num_table = arg(5, name=num_table)
2021-05-28 23:59:31,838 on stmt: $0.1 = global(min: <built-in function min>)
2021-05-28 23:59:31,838 on stmt: $const0.2 = const(float, 1.0)
2021-05-28 23:59:31,838 on stmt: scale = call $0.1($const0.2, sample_ratio, func=$0.1, args=[Var($const0.2, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None)
2021-05-28 23:59:31,838 on stmt: $const0.5 = const(float, 1.0)
2021-05-28 23:59:31,838 on stmt: time_increment = $const0.5 / sample_ratio
2021-05-28 23:59:31,838 on stmt: $0.8 = global(int: <class 'int'>)
2021-05-28 23:59:31,838 on stmt: $0.11 = scale * num_table
2021-05-28 23:59:31,838 on stmt: index_step = call $0.8($0.11, func=$0.8, args=[Var($0.11, interpn.py:12)], kws=(), vararg=None)
2021-05-28 23:59:31,838 on stmt: time_register = const(float, 0.0)
2021-05-28 23:59:31,838 on stmt: n = const(int, 0)
2021-05-28 23:59:31,838 on stmt: frac = const(float, 0.0)
2021-05-28 23:59:31,838 on stmt: index_frac = const(float, 0.0)
2021-05-28 23:59:31,838 on stmt: offset = const(int, 0)
2021-05-28 23:59:31,839 on stmt: eta = const(float, 0.0)
2021-05-28 23:59:31,839 on stmt: weight = const(float, 0.0)
2021-05-28 23:59:31,839 on stmt: $0.21 = getattr(value=interp_win, attr=shape)
2021-05-28 23:59:31,839 on stmt: $const0.22 = const(int, 0)
2021-05-28 23:59:31,839 on stmt: nwin = static_getitem(value=$0.21, index=0, index_var=$const0.22, fn=<built-in function getitem>)
2021-05-28 23:59:31,839 on stmt: $0.25 = getattr(value=x, attr=shape)
2021-05-28 23:59:31,839 on stmt: $const0.26 = const(int, 0)
2021-05-28 23:59:31,839 on stmt: n_orig = static_getitem(value=$0.25, index=0, index_var=$const0.26, fn=<built-in function getitem>)
2021-05-28 23:59:31,839 on stmt: $0.29 = getattr(value=y, attr=shape)
2021-05-28 23:59:31,839 on stmt: $const0.30 = const(int, 0)
2021-05-28 23:59:31,839 on stmt: n_out = static_getitem(value=$0.29, index=0, index_var=$const0.30, fn=<built-in function getitem>)
2021-05-28 23:59:31,839 on stmt: $0.33 = getattr(value=y, attr=shape)
2021-05-28 23:59:31,839 on stmt: $const0.34 = const(int, 1)
2021-05-28 23:59:31,839 on stmt: n_channels = static_getitem(value=$0.33, index=1, index_var=$const0.34, fn=<built-in function getitem>)
2021-05-28 23:59:31,839 on stmt: jump 100
2021-05-28 23:59:31,839 ==== SSA block rewrite pass on 100
2021-05-28 23:59:31,839 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8FD0>
2021-05-28 23:59:31,839 on stmt: jump 104
2021-05-28 23:59:31,839 ==== SSA block rewrite pass on 104
2021-05-28 23:59:31,839 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8FD0>
2021-05-28 23:59:31,839 on stmt: $104.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,839 on stmt: $104.3 = call $104.1(n_out, func=$104.1, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None)
2021-05-28 23:59:31,839 on stmt: $104.4 = getiter(value=$104.3)
2021-05-28 23:59:31,840 on stmt: $phi112.1 = $104.4
2021-05-28 23:59:31,840 on stmt: jump 112
2021-05-28 23:59:31,840 ==== SSA block rewrite pass on 112
2021-05-28 23:59:31,840 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8FD0>
2021-05-28 23:59:31,840 on stmt: time_register.2 = phi(incoming_values=[Var(time_register, interpn.py:13), Var(time_register.1, interpn.py:67)], incoming_blocks=[104, 466])
2021-05-28 23:59:31,840 on stmt: $112.2 = iternext(value=$phi112.1)
2021-05-28 23:59:31,840 on stmt: $112.3 = pair_first(value=$112.2)
2021-05-28 23:59:31,840 on stmt: $112.4 = pair_second(value=$112.2)
2021-05-28 23:59:31,840 on stmt: $phi116.1 = $112.3
2021-05-28 23:59:31,840 on stmt: $phi476.1 = $112.3
2021-05-28 23:59:31,840 on stmt: $phi476.2 = $phi112.1
2021-05-28 23:59:31,840 on stmt: branch $112.4, 116, 476
2021-05-28 23:59:31,840 ==== SSA block rewrite pass on 116
2021-05-28 23:59:31,840 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8FD0>
2021-05-28 23:59:31,840 on stmt: t = $phi116.1
2021-05-28 23:59:31,840 on stmt: $116.2 = global(int: <class 'int'>)
2021-05-28 23:59:31,840 on stmt: n.1 = call $116.2(time_register.2, func=$116.2, args=[Var(time_register.2, interpn.py:27)], kws=(), vararg=None)
2021-05-28 23:59:31,840 on stmt: $116.8 = time_register.2 - n.1
2021-05-28 23:59:31,840 on stmt: frac = scale * $116.8
2021-05-28 23:59:31,840 on stmt: index_frac.1 = frac * num_table
2021-05-28 23:59:31,840 on stmt: $116.13 = global(int: <class 'int'>)
2021-05-28 23:59:31,840 on stmt: offset.1 = call $116.13(index_frac.1, func=$116.13, args=[Var(index_frac.1, interpn.py:35)], kws=(), vararg=None)
2021-05-28 23:59:31,841 on stmt: eta = index_frac.1 - offset.1
2021-05-28 23:59:31,841 on stmt: $116.19 = global(min: <built-in function min>)
2021-05-28 23:59:31,841 on stmt: $const116.21 = const(int, 1)
2021-05-28 23:59:31,841 on stmt: $116.22 = n.1 + $const116.21
2021-05-28 23:59:31,841 on stmt: $116.25 = nwin - offset.1
2021-05-28 23:59:31,841 on stmt: $116.27 = $116.25 // index_step
2021-05-28 23:59:31,841 on stmt: i_max = call $116.19($116.22, $116.27, func=$116.19, args=[Var($116.22, interpn.py:42), Var($116.27, interpn.py:42)], kws=(), vararg=None)
2021-05-28 23:59:31,841 on stmt: jump 184
2021-05-28 23:59:31,841 ==== SSA block rewrite pass on 184
2021-05-28 23:59:31,841 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8FD0>
2021-05-28 23:59:31,841 on stmt: jump 186
2021-05-28 23:59:31,841 ==== SSA block rewrite pass on 186
2021-05-28 23:59:31,841 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8FD0>
2021-05-28 23:59:31,841 on stmt: $186.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,841 on stmt: $186.3 = call $186.1(i_max, func=$186.1, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None)
2021-05-28 23:59:31,841 on stmt: $186.4 = getiter(value=$186.3)
2021-05-28 23:59:31,841 on stmt: $phi194.1 = $186.4
2021-05-28 23:59:31,841 on stmt: jump 194
2021-05-28 23:59:31,841 ==== SSA block rewrite pass on 194
2021-05-28 23:59:31,842 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8FD0>
2021-05-28 23:59:31,842 on stmt: $194.2 = iternext(value=$phi194.1)
2021-05-28 23:59:31,842 on stmt: $194.3 = pair_first(value=$194.2)
2021-05-28 23:59:31,842 on stmt: $194.4 = pair_second(value=$194.2)
2021-05-28 23:59:31,842 on stmt: $phi196.1 = $194.3
2021-05-28 23:59:31,842 on stmt: $phi290.1 = $194.3
2021-05-28 23:59:31,842 on stmt: $phi290.2 = $phi194.1
2021-05-28 23:59:31,842 on stmt: branch $194.4, 196, 290
2021-05-28 23:59:31,842 ==== SSA block rewrite pass on 196
2021-05-28 23:59:31,842 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8FD0>
2021-05-28 23:59:31,842 on stmt: i = $phi196.1
2021-05-28 23:59:31,842 on stmt: $196.6 = i * index_step
2021-05-28 23:59:31,842 on stmt: $196.7 = offset.1 + $196.6
2021-05-28 23:59:31,842 on stmt: $196.8 = getitem(value=interp_win, index=$196.7, fn=<built-in function getitem>)
2021-05-28 23:59:31,842 on stmt: $196.14 = i * index_step
2021-05-28 23:59:31,842 on stmt: $196.15 = offset.1 + $196.14
2021-05-28 23:59:31,842 on stmt: $196.16 = getitem(value=interp_delta, index=$196.15, fn=<built-in function getitem>)
2021-05-28 23:59:31,842 on stmt: $196.17 = eta * $196.16
2021-05-28 23:59:31,842 on stmt: weight.1 = $196.8 + $196.17
2021-05-28 23:59:31,842 on stmt: jump 234
2021-05-28 23:59:31,842 ==== SSA block rewrite pass on 234
2021-05-28 23:59:31,842 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8FD0>
2021-05-28 23:59:31,842 on stmt: jump 236
2021-05-28 23:59:31,842 ==== SSA block rewrite pass on 236
2021-05-28 23:59:31,843 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8FD0>
2021-05-28 23:59:31,843 on stmt: $236.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,843 on stmt: $236.3 = call $236.1(n_channels, func=$236.1, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-28 23:59:31,843 on stmt: $236.4 = getiter(value=$236.3)
2021-05-28 23:59:31,843 on stmt: $phi244.1 = $236.4
2021-05-28 23:59:31,843 on stmt: jump 244
2021-05-28 23:59:31,843 ==== SSA block rewrite pass on 244
2021-05-28 23:59:31,843 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8FD0>
2021-05-28 23:59:31,843 on stmt: $244.2 = iternext(value=$phi244.1)
2021-05-28 23:59:31,843 on stmt: $244.3 = pair_first(value=$244.2)
2021-05-28 23:59:31,843 on stmt: $244.4 = pair_second(value=$244.2)
2021-05-28 23:59:31,843 on stmt: $phi246.1 = $244.3
2021-05-28 23:59:31,843 on stmt: $phi286.1 = $244.3
2021-05-28 23:59:31,843 on stmt: $phi286.2 = $phi244.1
2021-05-28 23:59:31,843 on stmt: branch $244.4, 246, 286
2021-05-28 23:59:31,843 ==== SSA block rewrite pass on 246
2021-05-28 23:59:31,843 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8FD0>
2021-05-28 23:59:31,843 on stmt: j = $phi246.1
2021-05-28 23:59:31,843 on stmt: $246.5 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-28 23:59:31,843 on stmt: $246.8 = getitem(value=y, index=$246.5, fn=<built-in function getitem>)
2021-05-28 23:59:31,843 on stmt: $246.13 = n.1 - i
2021-05-28 23:59:31,843 on stmt: $246.15 = build_tuple(items=[Var($246.13, interpn.py:47), Var(j, interpn.py:46)])
2021-05-28 23:59:31,843 on stmt: $246.16 = getitem(value=x, index=$246.15, fn=<built-in function getitem>)
2021-05-28 23:59:31,844 on stmt: $246.17 = weight * $246.16
2021-05-28 23:59:31,844 find_def var='weight' stmt=$246.17 = weight * $246.16
2021-05-28 23:59:31,844 find_def_from_top label 246
2021-05-28 23:59:31,844 idom 244 from label 246
2021-05-28 23:59:31,844 find_def_from_bottom label 244
2021-05-28 23:59:31,844 find_def_from_top label 244
2021-05-28 23:59:31,844 idom 236 from label 244
2021-05-28 23:59:31,844 find_def_from_bottom label 236
2021-05-28 23:59:31,844 find_def_from_top label 236
2021-05-28 23:59:31,844 idom 234 from label 236
2021-05-28 23:59:31,844 find_def_from_bottom label 234
2021-05-28 23:59:31,844 find_def_from_top label 234
2021-05-28 23:59:31,844 idom 196 from label 234
2021-05-28 23:59:31,844 find_def_from_bottom label 196
2021-05-28 23:59:31,844 replaced with: $246.17 = weight.1 * $246.16
2021-05-28 23:59:31,844 on stmt: $246.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$246.8, rhs=$246.17, static_lhs=Undefined, static_rhs=Undefined)
2021-05-28 23:59:31,844 on stmt: y[$246.5] = $246.18
2021-05-28 23:59:31,844 on stmt: jump 244
2021-05-28 23:59:31,844 ==== SSA block rewrite pass on 286
2021-05-28 23:59:31,844 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8FD0>
2021-05-28 23:59:31,844 on stmt: jump 288
2021-05-28 23:59:31,844 ==== SSA block rewrite pass on 288
2021-05-28 23:59:31,844 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8FD0>
2021-05-28 23:59:31,844 on stmt: jump 194
2021-05-28 23:59:31,845 ==== SSA block rewrite pass on 290
2021-05-28 23:59:31,845 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8FD0>
2021-05-28 23:59:31,845 on stmt: jump 292
2021-05-28 23:59:31,845 ==== SSA block rewrite pass on 292
2021-05-28 23:59:31,845 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8FD0>
2021-05-28 23:59:31,845 on stmt: $292.3 = scale - frac
2021-05-28 23:59:31,845 on stmt: frac = $292.3
2021-05-28 23:59:31,845 on stmt: index_frac.2 = frac * num_table
2021-05-28 23:59:31,845 on stmt: $292.7 = global(int: <class 'int'>)
2021-05-28 23:59:31,845 on stmt: offset.2 = call $292.7(index_frac.2, func=$292.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None)
2021-05-28 23:59:31,845 on stmt: eta = index_frac.2 - offset.2
2021-05-28 23:59:31,845 on stmt: $292.13 = global(min: <built-in function min>)
2021-05-28 23:59:31,845 on stmt: $292.16 = n_orig - n.1
2021-05-28 23:59:31,845 on stmt: $const292.17 = const(int, 1)
2021-05-28 23:59:31,845 on stmt: $292.18 = $292.16 - $const292.17
2021-05-28 23:59:31,845 on stmt: $292.21 = nwin - offset.2
2021-05-28 23:59:31,845 on stmt: $292.23 = $292.21 // index_step
2021-05-28 23:59:31,845 on stmt: k_max = call $292.13($292.18, $292.23, func=$292.13, args=[Var($292.18, interpn.py:60), Var($292.23, interpn.py:60)], kws=(), vararg=None)
2021-05-28 23:59:31,845 on stmt: jump 350
2021-05-28 23:59:31,846 ==== SSA block rewrite pass on 350
2021-05-28 23:59:31,846 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8FD0>
2021-05-28 23:59:31,846 on stmt: jump 352
2021-05-28 23:59:31,846 ==== SSA block rewrite pass on 352
2021-05-28 23:59:31,846 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8FD0>
2021-05-28 23:59:31,846 on stmt: $352.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,846 on stmt: $352.3 = call $352.1(k_max, func=$352.1, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None)
2021-05-28 23:59:31,846 on stmt: $352.4 = getiter(value=$352.3)
2021-05-28 23:59:31,846 on stmt: $phi360.1 = $352.4
2021-05-28 23:59:31,846 on stmt: jump 360
2021-05-28 23:59:31,846 ==== SSA block rewrite pass on 360
2021-05-28 23:59:31,846 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8FD0>
2021-05-28 23:59:31,846 on stmt: $360.2 = iternext(value=$phi360.1)
2021-05-28 23:59:31,846 on stmt: $360.3 = pair_first(value=$360.2)
2021-05-28 23:59:31,846 on stmt: $360.4 = pair_second(value=$360.2)
2021-05-28 23:59:31,846 on stmt: $phi362.1 = $360.3
2021-05-28 23:59:31,846 on stmt: $phi464.1 = $360.3
2021-05-28 23:59:31,846 on stmt: $phi464.2 = $phi360.1
2021-05-28 23:59:31,846 on stmt: branch $360.4, 362, 464
2021-05-28 23:59:31,847 ==== SSA block rewrite pass on 362
2021-05-28 23:59:31,847 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8FD0>
2021-05-28 23:59:31,847 on stmt: k = $phi362.1
2021-05-28 23:59:31,847 on stmt: $362.6 = k * index_step
2021-05-28 23:59:31,847 on stmt: $362.7 = offset.2 + $362.6
2021-05-28 23:59:31,847 on stmt: $362.8 = getitem(value=interp_win, index=$362.7, fn=<built-in function getitem>)
2021-05-28 23:59:31,847 on stmt: $362.14 = k * index_step
2021-05-28 23:59:31,847 on stmt: $362.15 = offset.2 + $362.14
2021-05-28 23:59:31,847 on stmt: $362.16 = getitem(value=interp_delta, index=$362.15, fn=<built-in function getitem>)
2021-05-28 23:59:31,847 on stmt: $362.17 = eta * $362.16
2021-05-28 23:59:31,847 on stmt: weight.2 = $362.8 + $362.17
2021-05-28 23:59:31,847 on stmt: jump 400
2021-05-28 23:59:31,847 ==== SSA block rewrite pass on 400
2021-05-28 23:59:31,847 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8FD0>
2021-05-28 23:59:31,847 on stmt: jump 402
2021-05-28 23:59:31,847 ==== SSA block rewrite pass on 402
2021-05-28 23:59:31,847 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8FD0>
2021-05-28 23:59:31,847 on stmt: $402.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,847 on stmt: $402.3 = call $402.1(n_channels, func=$402.1, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-28 23:59:31,847 on stmt: $402.4 = getiter(value=$402.3)
2021-05-28 23:59:31,847 on stmt: $phi410.1 = $402.4
2021-05-28 23:59:31,847 on stmt: jump 410
2021-05-28 23:59:31,848 ==== SSA block rewrite pass on 410
2021-05-28 23:59:31,848 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8FD0>
2021-05-28 23:59:31,848 on stmt: $410.2 = iternext(value=$phi410.1)
2021-05-28 23:59:31,848 on stmt: $410.3 = pair_first(value=$410.2)
2021-05-28 23:59:31,848 on stmt: $410.4 = pair_second(value=$410.2)
2021-05-28 23:59:31,848 on stmt: $phi412.1 = $410.3
2021-05-28 23:59:31,848 on stmt: $phi458.1 = $410.3
2021-05-28 23:59:31,848 on stmt: $phi458.2 = $phi410.1
2021-05-28 23:59:31,848 on stmt: branch $410.4, 412, 458
2021-05-28 23:59:31,848 ==== SSA block rewrite pass on 412
2021-05-28 23:59:31,848 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8FD0>
2021-05-28 23:59:31,848 on stmt: j = $phi412.1
2021-05-28 23:59:31,848 on stmt: $412.5 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-28 23:59:31,848 on stmt: $412.8 = getitem(value=y, index=$412.5, fn=<built-in function getitem>)
2021-05-28 23:59:31,848 on stmt: $412.13 = n.1 + k
2021-05-28 23:59:31,848 on stmt: $const412.14 = const(int, 1)
2021-05-28 23:59:31,848 on stmt: $412.15 = $412.13 + $const412.14
2021-05-28 23:59:31,849 on stmt: $412.17 = build_tuple(items=[Var($412.15, interpn.py:64), Var(j, interpn.py:46)])
2021-05-28 23:59:31,849 on stmt: $412.18 = getitem(value=x, index=$412.17, fn=<built-in function getitem>)
2021-05-28 23:59:31,849 on stmt: $412.19 = weight * $412.18
2021-05-28 23:59:31,849 find_def var='weight' stmt=$412.19 = weight * $412.18
2021-05-28 23:59:31,849 find_def_from_top label 412
2021-05-28 23:59:31,849 idom 410 from label 412
2021-05-28 23:59:31,849 find_def_from_bottom label 410
2021-05-28 23:59:31,849 find_def_from_top label 410
2021-05-28 23:59:31,849 idom 402 from label 410
2021-05-28 23:59:31,849 find_def_from_bottom label 402
2021-05-28 23:59:31,849 find_def_from_top label 402
2021-05-28 23:59:31,849 idom 400 from label 402
2021-05-28 23:59:31,849 find_def_from_bottom label 400
2021-05-28 23:59:31,849 find_def_from_top label 400
2021-05-28 23:59:31,849 idom 362 from label 400
2021-05-28 23:59:31,849 find_def_from_bottom label 362
2021-05-28 23:59:31,849 replaced with: $412.19 = weight.2 * $412.18
2021-05-28 23:59:31,849 on stmt: $412.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$412.8, rhs=$412.19, static_lhs=Undefined, static_rhs=Undefined)
2021-05-28 23:59:31,849 on stmt: y[$412.5] = $412.20
2021-05-28 23:59:31,849 on stmt: jump 410
2021-05-28 23:59:31,849 ==== SSA block rewrite pass on 458
2021-05-28 23:59:31,849 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8FD0>
2021-05-28 23:59:31,849 on stmt: jump 460
2021-05-28 23:59:31,849 ==== SSA block rewrite pass on 460
2021-05-28 23:59:31,850 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8FD0>
2021-05-28 23:59:31,850 on stmt: jump 360
2021-05-28 23:59:31,850 ==== SSA block rewrite pass on 464
2021-05-28 23:59:31,850 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8FD0>
2021-05-28 23:59:31,850 on stmt: jump 466
2021-05-28 23:59:31,850 ==== SSA block rewrite pass on 466
2021-05-28 23:59:31,850 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8FD0>
2021-05-28 23:59:31,850 on stmt: $466.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register.2, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
2021-05-28 23:59:31,850 on stmt: time_register.1 = $466.3
2021-05-28 23:59:31,850 on stmt: jump 112
2021-05-28 23:59:31,850 ==== SSA block rewrite pass on 476
2021-05-28 23:59:31,850 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8FD0>
2021-05-28 23:59:31,850 on stmt: jump 478
2021-05-28 23:59:31,850 ==== SSA block rewrite pass on 478
2021-05-28 23:59:31,850 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8FD0>
2021-05-28 23:59:31,850 on stmt: $const478.1 = const(NoneType, None)
2021-05-28 23:59:31,850 on stmt: $478.2 = cast(value=$const478.1)
2021-05-28 23:59:31,850 on stmt: return $478.2
2021-05-28 23:59:31,850 Fix SSA violator on var eta
2021-05-28 23:59:31,850 ==== SSA block rewrite pass on 0
2021-05-28 23:59:31,850 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8903F60>
2021-05-28 23:59:31,850 on stmt: x = arg(0, name=x)
2021-05-28 23:59:31,850 on stmt: y = arg(1, name=y)
2021-05-28 23:59:31,850 on stmt: sample_ratio = arg(2, name=sample_ratio)
2021-05-28 23:59:31,851 on stmt: interp_win = arg(3, name=interp_win)
2021-05-28 23:59:31,851 on stmt: interp_delta = arg(4, name=interp_delta)
2021-05-28 23:59:31,851 on stmt: num_table = arg(5, name=num_table)
2021-05-28 23:59:31,851 on stmt: $0.1 = global(min: <built-in function min>)
2021-05-28 23:59:31,851 on stmt: $const0.2 = const(float, 1.0)
2021-05-28 23:59:31,851 on stmt: scale = call $0.1($const0.2, sample_ratio, func=$0.1, args=[Var($const0.2, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None)
2021-05-28 23:59:31,851 on stmt: $const0.5 = const(float, 1.0)
2021-05-28 23:59:31,851 on stmt: time_increment = $const0.5 / sample_ratio
2021-05-28 23:59:31,851 on stmt: $0.8 = global(int: <class 'int'>)
2021-05-28 23:59:31,851 on stmt: $0.11 = scale * num_table
2021-05-28 23:59:31,851 on stmt: index_step = call $0.8($0.11, func=$0.8, args=[Var($0.11, interpn.py:12)], kws=(), vararg=None)
2021-05-28 23:59:31,851 on stmt: time_register = const(float, 0.0)
2021-05-28 23:59:31,851 on stmt: n = const(int, 0)
2021-05-28 23:59:31,851 on stmt: frac = const(float, 0.0)
2021-05-28 23:59:31,851 on stmt: index_frac = const(float, 0.0)
2021-05-28 23:59:31,851 on stmt: offset = const(int, 0)
2021-05-28 23:59:31,851 on stmt: eta = const(float, 0.0)
2021-05-28 23:59:31,851 first assign: eta
2021-05-28 23:59:31,851 replaced with: eta = const(float, 0.0)
2021-05-28 23:59:31,851 on stmt: weight = const(float, 0.0)
2021-05-28 23:59:31,851 on stmt: $0.21 = getattr(value=interp_win, attr=shape)
2021-05-28 23:59:31,851 on stmt: $const0.22 = const(int, 0)
2021-05-28 23:59:31,851 on stmt: nwin = static_getitem(value=$0.21, index=0, index_var=$const0.22, fn=<built-in function getitem>)
2021-05-28 23:59:31,852 on stmt: $0.25 = getattr(value=x, attr=shape)
2021-05-28 23:59:31,852 on stmt: $const0.26 = const(int, 0)
2021-05-28 23:59:31,852 on stmt: n_orig = static_getitem(value=$0.25, index=0, index_var=$const0.26, fn=<built-in function getitem>)
2021-05-28 23:59:31,852 on stmt: $0.29 = getattr(value=y, attr=shape)
2021-05-28 23:59:31,852 on stmt: $const0.30 = const(int, 0)
2021-05-28 23:59:31,852 on stmt: n_out = static_getitem(value=$0.29, index=0, index_var=$const0.30, fn=<built-in function getitem>)
2021-05-28 23:59:31,852 on stmt: $0.33 = getattr(value=y, attr=shape)
2021-05-28 23:59:31,852 on stmt: $const0.34 = const(int, 1)
2021-05-28 23:59:31,852 on stmt: n_channels = static_getitem(value=$0.33, index=1, index_var=$const0.34, fn=<built-in function getitem>)
2021-05-28 23:59:31,852 on stmt: jump 100
2021-05-28 23:59:31,852 ==== SSA block rewrite pass on 100
2021-05-28 23:59:31,852 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8903F60>
2021-05-28 23:59:31,852 on stmt: jump 104
2021-05-28 23:59:31,852 ==== SSA block rewrite pass on 104
2021-05-28 23:59:31,852 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8903F60>
2021-05-28 23:59:31,852 on stmt: $104.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,852 on stmt: $104.3 = call $104.1(n_out, func=$104.1, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None)
2021-05-28 23:59:31,852 on stmt: $104.4 = getiter(value=$104.3)
2021-05-28 23:59:31,852 on stmt: $phi112.1 = $104.4
2021-05-28 23:59:31,852 on stmt: jump 112
2021-05-28 23:59:31,852 ==== SSA block rewrite pass on 112
2021-05-28 23:59:31,852 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8903F60>
2021-05-28 23:59:31,853 on stmt: time_register.2 = phi(incoming_values=[Var(time_register, interpn.py:13), Var(time_register.1, interpn.py:67)], incoming_blocks=[104, 466])
2021-05-28 23:59:31,853 on stmt: $112.2 = iternext(value=$phi112.1)
2021-05-28 23:59:31,853 on stmt: $112.3 = pair_first(value=$112.2)
2021-05-28 23:59:31,853 on stmt: $112.4 = pair_second(value=$112.2)
2021-05-28 23:59:31,853 on stmt: $phi116.1 = $112.3
2021-05-28 23:59:31,853 on stmt: $phi476.1 = $112.3
2021-05-28 23:59:31,853 on stmt: $phi476.2 = $phi112.1
2021-05-28 23:59:31,853 on stmt: branch $112.4, 116, 476
2021-05-28 23:59:31,853 ==== SSA block rewrite pass on 116
2021-05-28 23:59:31,853 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8903F60>
2021-05-28 23:59:31,853 on stmt: t = $phi116.1
2021-05-28 23:59:31,853 on stmt: $116.2 = global(int: <class 'int'>)
2021-05-28 23:59:31,853 on stmt: n.1 = call $116.2(time_register.2, func=$116.2, args=[Var(time_register.2, interpn.py:27)], kws=(), vararg=None)
2021-05-28 23:59:31,853 on stmt: $116.8 = time_register.2 - n.1
2021-05-28 23:59:31,853 on stmt: frac = scale * $116.8
2021-05-28 23:59:31,853 on stmt: index_frac.1 = frac * num_table
2021-05-28 23:59:31,853 on stmt: $116.13 = global(int: <class 'int'>)
2021-05-28 23:59:31,853 on stmt: offset.1 = call $116.13(index_frac.1, func=$116.13, args=[Var(index_frac.1, interpn.py:35)], kws=(), vararg=None)
2021-05-28 23:59:31,853 on stmt: eta = index_frac.1 - offset.1
2021-05-28 23:59:31,853 replaced with: eta.1 = index_frac.1 - offset.1
2021-05-28 23:59:31,853 on stmt: $116.19 = global(min: <built-in function min>)
2021-05-28 23:59:31,854 on stmt: $const116.21 = const(int, 1)
2021-05-28 23:59:31,854 on stmt: $116.22 = n.1 + $const116.21
2021-05-28 23:59:31,854 on stmt: $116.25 = nwin - offset.1
2021-05-28 23:59:31,854 on stmt: $116.27 = $116.25 // index_step
2021-05-28 23:59:31,854 on stmt: i_max = call $116.19($116.22, $116.27, func=$116.19, args=[Var($116.22, interpn.py:42), Var($116.27, interpn.py:42)], kws=(), vararg=None)
2021-05-28 23:59:31,854 on stmt: jump 184
2021-05-28 23:59:31,854 ==== SSA block rewrite pass on 184
2021-05-28 23:59:31,854 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8903F60>
2021-05-28 23:59:31,854 on stmt: jump 186
2021-05-28 23:59:31,854 ==== SSA block rewrite pass on 186
2021-05-28 23:59:31,854 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8903F60>
2021-05-28 23:59:31,854 on stmt: $186.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,854 on stmt: $186.3 = call $186.1(i_max, func=$186.1, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None)
2021-05-28 23:59:31,854 on stmt: $186.4 = getiter(value=$186.3)
2021-05-28 23:59:31,854 on stmt: $phi194.1 = $186.4
2021-05-28 23:59:31,854 on stmt: jump 194
2021-05-28 23:59:31,854 ==== SSA block rewrite pass on 194
2021-05-28 23:59:31,854 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8903F60>
2021-05-28 23:59:31,854 on stmt: $194.2 = iternext(value=$phi194.1)
2021-05-28 23:59:31,854 on stmt: $194.3 = pair_first(value=$194.2)
2021-05-28 23:59:31,854 on stmt: $194.4 = pair_second(value=$194.2)
2021-05-28 23:59:31,854 on stmt: $phi196.1 = $194.3
2021-05-28 23:59:31,854 on stmt: $phi290.1 = $194.3
2021-05-28 23:59:31,854 on stmt: $phi290.2 = $phi194.1
2021-05-28 23:59:31,854 on stmt: branch $194.4, 196, 290
2021-05-28 23:59:31,855 ==== SSA block rewrite pass on 196
2021-05-28 23:59:31,855 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8903F60>
2021-05-28 23:59:31,855 on stmt: i = $phi196.1
2021-05-28 23:59:31,855 on stmt: $196.6 = i * index_step
2021-05-28 23:59:31,855 on stmt: $196.7 = offset.1 + $196.6
2021-05-28 23:59:31,855 on stmt: $196.8 = getitem(value=interp_win, index=$196.7, fn=<built-in function getitem>)
2021-05-28 23:59:31,855 on stmt: $196.14 = i * index_step
2021-05-28 23:59:31,855 on stmt: $196.15 = offset.1 + $196.14
2021-05-28 23:59:31,855 on stmt: $196.16 = getitem(value=interp_delta, index=$196.15, fn=<built-in function getitem>)
2021-05-28 23:59:31,855 on stmt: $196.17 = eta * $196.16
2021-05-28 23:59:31,855 on stmt: weight.1 = $196.8 + $196.17
2021-05-28 23:59:31,855 on stmt: jump 234
2021-05-28 23:59:31,855 ==== SSA block rewrite pass on 234
2021-05-28 23:59:31,855 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8903F60>
2021-05-28 23:59:31,855 on stmt: jump 236
2021-05-28 23:59:31,855 ==== SSA block rewrite pass on 236
2021-05-28 23:59:31,855 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8903F60>
2021-05-28 23:59:31,855 on stmt: $236.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,855 on stmt: $236.3 = call $236.1(n_channels, func=$236.1, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-28 23:59:31,855 on stmt: $236.4 = getiter(value=$236.3)
2021-05-28 23:59:31,855 on stmt: $phi244.1 = $236.4
2021-05-28 23:59:31,855 on stmt: jump 244
2021-05-28 23:59:31,855 ==== SSA block rewrite pass on 244
2021-05-28 23:59:31,855 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8903F60>
2021-05-28 23:59:31,855 on stmt: $244.2 = iternext(value=$phi244.1)
2021-05-28 23:59:31,856 on stmt: $244.3 = pair_first(value=$244.2)
2021-05-28 23:59:31,856 on stmt: $244.4 = pair_second(value=$244.2)
2021-05-28 23:59:31,856 on stmt: $phi246.1 = $244.3
2021-05-28 23:59:31,856 on stmt: $phi286.1 = $244.3
2021-05-28 23:59:31,856 on stmt: $phi286.2 = $phi244.1
2021-05-28 23:59:31,856 on stmt: branch $244.4, 246, 286
2021-05-28 23:59:31,856 ==== SSA block rewrite pass on 246
2021-05-28 23:59:31,856 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8903F60>
2021-05-28 23:59:31,856 on stmt: j = $phi246.1
2021-05-28 23:59:31,856 on stmt: $246.5 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-28 23:59:31,856 on stmt: $246.8 = getitem(value=y, index=$246.5, fn=<built-in function getitem>)
2021-05-28 23:59:31,856 on stmt: $246.13 = n.1 - i
2021-05-28 23:59:31,856 on stmt: $246.15 = build_tuple(items=[Var($246.13, interpn.py:47), Var(j, interpn.py:46)])
2021-05-28 23:59:31,856 on stmt: $246.16 = getitem(value=x, index=$246.15, fn=<built-in function getitem>)
2021-05-28 23:59:31,856 on stmt: $246.17 = weight.1 * $246.16
2021-05-28 23:59:31,856 on stmt: $246.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$246.8, rhs=$246.17, static_lhs=Undefined, static_rhs=Undefined)
2021-05-28 23:59:31,856 on stmt: y[$246.5] = $246.18
2021-05-28 23:59:31,856 on stmt: jump 244
2021-05-28 23:59:31,856 ==== SSA block rewrite pass on 286
2021-05-28 23:59:31,856 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8903F60>
2021-05-28 23:59:31,856 on stmt: jump 288
2021-05-28 23:59:31,856 ==== SSA block rewrite pass on 288
2021-05-28 23:59:31,856 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8903F60>
2021-05-28 23:59:31,857 on stmt: jump 194
2021-05-28 23:59:31,857 ==== SSA block rewrite pass on 290
2021-05-28 23:59:31,857 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8903F60>
2021-05-28 23:59:31,857 on stmt: jump 292
2021-05-28 23:59:31,857 ==== SSA block rewrite pass on 292
2021-05-28 23:59:31,857 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8903F60>
2021-05-28 23:59:31,857 on stmt: $292.3 = scale - frac
2021-05-28 23:59:31,857 on stmt: frac = $292.3
2021-05-28 23:59:31,857 on stmt: index_frac.2 = frac * num_table
2021-05-28 23:59:31,857 on stmt: $292.7 = global(int: <class 'int'>)
2021-05-28 23:59:31,857 on stmt: offset.2 = call $292.7(index_frac.2, func=$292.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None)
2021-05-28 23:59:31,857 on stmt: eta = index_frac.2 - offset.2
2021-05-28 23:59:31,857 replaced with: eta.2 = index_frac.2 - offset.2
2021-05-28 23:59:31,857 on stmt: $292.13 = global(min: <built-in function min>)
2021-05-28 23:59:31,857 on stmt: $292.16 = n_orig - n.1
2021-05-28 23:59:31,857 on stmt: $const292.17 = const(int, 1)
2021-05-28 23:59:31,857 on stmt: $292.18 = $292.16 - $const292.17
2021-05-28 23:59:31,857 on stmt: $292.21 = nwin - offset.2
2021-05-28 23:59:31,857 on stmt: $292.23 = $292.21 // index_step
2021-05-28 23:59:31,857 on stmt: k_max = call $292.13($292.18, $292.23, func=$292.13, args=[Var($292.18, interpn.py:60), Var($292.23, interpn.py:60)], kws=(), vararg=None)
2021-05-28 23:59:31,857 on stmt: jump 350
2021-05-28 23:59:31,858 ==== SSA block rewrite pass on 350
2021-05-28 23:59:31,858 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8903F60>
2021-05-28 23:59:31,858 on stmt: jump 352
2021-05-28 23:59:31,858 ==== SSA block rewrite pass on 352
2021-05-28 23:59:31,858 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8903F60>
2021-05-28 23:59:31,858 on stmt: $352.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,858 on stmt: $352.3 = call $352.1(k_max, func=$352.1, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None)
2021-05-28 23:59:31,858 on stmt: $352.4 = getiter(value=$352.3)
2021-05-28 23:59:31,858 on stmt: $phi360.1 = $352.4
2021-05-28 23:59:31,858 on stmt: jump 360
2021-05-28 23:59:31,858 ==== SSA block rewrite pass on 360
2021-05-28 23:59:31,858 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8903F60>
2021-05-28 23:59:31,858 on stmt: $360.2 = iternext(value=$phi360.1)
2021-05-28 23:59:31,858 on stmt: $360.3 = pair_first(value=$360.2)
2021-05-28 23:59:31,858 on stmt: $360.4 = pair_second(value=$360.2)
2021-05-28 23:59:31,858 on stmt: $phi362.1 = $360.3
2021-05-28 23:59:31,858 on stmt: $phi464.1 = $360.3
2021-05-28 23:59:31,858 on stmt: $phi464.2 = $phi360.1
2021-05-28 23:59:31,858 on stmt: branch $360.4, 362, 464
2021-05-28 23:59:31,858 ==== SSA block rewrite pass on 362
2021-05-28 23:59:31,858 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8903F60>
2021-05-28 23:59:31,858 on stmt: k = $phi362.1
2021-05-28 23:59:31,858 on stmt: $362.6 = k * index_step
2021-05-28 23:59:31,859 on stmt: $362.7 = offset.2 + $362.6
2021-05-28 23:59:31,859 on stmt: $362.8 = getitem(value=interp_win, index=$362.7, fn=<built-in function getitem>)
2021-05-28 23:59:31,859 on stmt: $362.14 = k * index_step
2021-05-28 23:59:31,859 on stmt: $362.15 = offset.2 + $362.14
2021-05-28 23:59:31,859 on stmt: $362.16 = getitem(value=interp_delta, index=$362.15, fn=<built-in function getitem>)
2021-05-28 23:59:31,859 on stmt: $362.17 = eta * $362.16
2021-05-28 23:59:31,859 on stmt: weight.2 = $362.8 + $362.17
2021-05-28 23:59:31,859 on stmt: jump 400
2021-05-28 23:59:31,859 ==== SSA block rewrite pass on 400
2021-05-28 23:59:31,859 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8903F60>
2021-05-28 23:59:31,859 on stmt: jump 402
2021-05-28 23:59:31,859 ==== SSA block rewrite pass on 402
2021-05-28 23:59:31,859 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8903F60>
2021-05-28 23:59:31,859 on stmt: $402.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,859 on stmt: $402.3 = call $402.1(n_channels, func=$402.1, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-28 23:59:31,859 on stmt: $402.4 = getiter(value=$402.3)
2021-05-28 23:59:31,859 on stmt: $phi410.1 = $402.4
2021-05-28 23:59:31,859 on stmt: jump 410
2021-05-28 23:59:31,859 ==== SSA block rewrite pass on 410
2021-05-28 23:59:31,859 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8903F60>
2021-05-28 23:59:31,859 on stmt: $410.2 = iternext(value=$phi410.1)
2021-05-28 23:59:31,859 on stmt: $410.3 = pair_first(value=$410.2)
2021-05-28 23:59:31,860 on stmt: $410.4 = pair_second(value=$410.2)
2021-05-28 23:59:31,860 on stmt: $phi412.1 = $410.3
2021-05-28 23:59:31,860 on stmt: $phi458.1 = $410.3
2021-05-28 23:59:31,860 on stmt: $phi458.2 = $phi410.1
2021-05-28 23:59:31,860 on stmt: branch $410.4, 412, 458
2021-05-28 23:59:31,860 ==== SSA block rewrite pass on 412
2021-05-28 23:59:31,860 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8903F60>
2021-05-28 23:59:31,860 on stmt: j = $phi412.1
2021-05-28 23:59:31,860 on stmt: $412.5 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-28 23:59:31,860 on stmt: $412.8 = getitem(value=y, index=$412.5, fn=<built-in function getitem>)
2021-05-28 23:59:31,860 on stmt: $412.13 = n.1 + k
2021-05-28 23:59:31,860 on stmt: $const412.14 = const(int, 1)
2021-05-28 23:59:31,860 on stmt: $412.15 = $412.13 + $const412.14
2021-05-28 23:59:31,860 on stmt: $412.17 = build_tuple(items=[Var($412.15, interpn.py:64), Var(j, interpn.py:46)])
2021-05-28 23:59:31,860 on stmt: $412.18 = getitem(value=x, index=$412.17, fn=<built-in function getitem>)
2021-05-28 23:59:31,860 on stmt: $412.19 = weight.2 * $412.18
2021-05-28 23:59:31,860 on stmt: $412.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$412.8, rhs=$412.19, static_lhs=Undefined, static_rhs=Undefined)
2021-05-28 23:59:31,860 on stmt: y[$412.5] = $412.20
2021-05-28 23:59:31,860 on stmt: jump 410
2021-05-28 23:59:31,860 ==== SSA block rewrite pass on 458
2021-05-28 23:59:31,860 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8903F60>
2021-05-28 23:59:31,860 on stmt: jump 460
2021-05-28 23:59:31,860 ==== SSA block rewrite pass on 460
2021-05-28 23:59:31,860 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8903F60>
2021-05-28 23:59:31,860 on stmt: jump 360
2021-05-28 23:59:31,860 ==== SSA block rewrite pass on 464
2021-05-28 23:59:31,861 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8903F60>
2021-05-28 23:59:31,861 on stmt: jump 466
2021-05-28 23:59:31,861 ==== SSA block rewrite pass on 466
2021-05-28 23:59:31,861 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8903F60>
2021-05-28 23:59:31,861 on stmt: $466.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register.2, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
2021-05-28 23:59:31,861 on stmt: time_register.1 = $466.3
2021-05-28 23:59:31,861 on stmt: jump 112
2021-05-28 23:59:31,861 ==== SSA block rewrite pass on 476
2021-05-28 23:59:31,861 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8903F60>
2021-05-28 23:59:31,861 on stmt: jump 478
2021-05-28 23:59:31,861 ==== SSA block rewrite pass on 478
2021-05-28 23:59:31,861 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8903F60>
2021-05-28 23:59:31,861 on stmt: $const478.1 = const(NoneType, None)
2021-05-28 23:59:31,861 on stmt: $478.2 = cast(value=$const478.1)
2021-05-28 23:59:31,861 on stmt: return $478.2
2021-05-28 23:59:31,861 Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x00000168E8903EF0>],
             116: [<numba.core.ir.Assign object at 0x00000168E8873A58>],
             292: [<numba.core.ir.Assign object at 0x00000168E88C80F0>]})
2021-05-28 23:59:31,862 ==== SSA block rewrite pass on 0
2021-05-28 23:59:31,862 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8DD8>
2021-05-28 23:59:31,862 on stmt: x = arg(0, name=x)
2021-05-28 23:59:31,862 on stmt: y = arg(1, name=y)
2021-05-28 23:59:31,862 on stmt: sample_ratio = arg(2, name=sample_ratio)
2021-05-28 23:59:31,862 on stmt: interp_win = arg(3, name=interp_win)
2021-05-28 23:59:31,862 on stmt: interp_delta = arg(4, name=interp_delta)
2021-05-28 23:59:31,862 on stmt: num_table = arg(5, name=num_table)
2021-05-28 23:59:31,862 on stmt: $0.1 = global(min: <built-in function min>)
2021-05-28 23:59:31,862 on stmt: $const0.2 = const(float, 1.0)
2021-05-28 23:59:31,862 on stmt: scale = call $0.1($const0.2, sample_ratio, func=$0.1, args=[Var($const0.2, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None)
2021-05-28 23:59:31,862 on stmt: $const0.5 = const(float, 1.0)
2021-05-28 23:59:31,862 on stmt: time_increment = $const0.5 / sample_ratio
2021-05-28 23:59:31,863 on stmt: $0.8 = global(int: <class 'int'>)
2021-05-28 23:59:31,863 on stmt: $0.11 = scale * num_table
2021-05-28 23:59:31,863 on stmt: index_step = call $0.8($0.11, func=$0.8, args=[Var($0.11, interpn.py:12)], kws=(), vararg=None)
2021-05-28 23:59:31,863 on stmt: time_register = const(float, 0.0)
2021-05-28 23:59:31,863 on stmt: n = const(int, 0)
2021-05-28 23:59:31,863 on stmt: frac = const(float, 0.0)
2021-05-28 23:59:31,863 on stmt: index_frac = const(float, 0.0)
2021-05-28 23:59:31,863 on stmt: offset = const(int, 0)
2021-05-28 23:59:31,863 on stmt: eta = const(float, 0.0)
2021-05-28 23:59:31,863 on stmt: weight = const(float, 0.0)
2021-05-28 23:59:31,863 on stmt: $0.21 = getattr(value=interp_win, attr=shape)
2021-05-28 23:59:31,863 on stmt: $const0.22 = const(int, 0)
2021-05-28 23:59:31,863 on stmt: nwin = static_getitem(value=$0.21, index=0, index_var=$const0.22, fn=<built-in function getitem>)
2021-05-28 23:59:31,863 on stmt: $0.25 = getattr(value=x, attr=shape)
2021-05-28 23:59:31,863 on stmt: $const0.26 = const(int, 0)
2021-05-28 23:59:31,863 on stmt: n_orig = static_getitem(value=$0.25, index=0, index_var=$const0.26, fn=<built-in function getitem>)
2021-05-28 23:59:31,864 on stmt: $0.29 = getattr(value=y, attr=shape)
2021-05-28 23:59:31,864 on stmt: $const0.30 = const(int, 0)
2021-05-28 23:59:31,864 on stmt: n_out = static_getitem(value=$0.29, index=0, index_var=$const0.30, fn=<built-in function getitem>)
2021-05-28 23:59:31,864 on stmt: $0.33 = getattr(value=y, attr=shape)
2021-05-28 23:59:31,864 on stmt: $const0.34 = const(int, 1)
2021-05-28 23:59:31,864 on stmt: n_channels = static_getitem(value=$0.33, index=1, index_var=$const0.34, fn=<built-in function getitem>)
2021-05-28 23:59:31,864 on stmt: jump 100
2021-05-28 23:59:31,864 ==== SSA block rewrite pass on 100
2021-05-28 23:59:31,864 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8DD8>
2021-05-28 23:59:31,864 on stmt: jump 104
2021-05-28 23:59:31,864 ==== SSA block rewrite pass on 104
2021-05-28 23:59:31,864 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8DD8>
2021-05-28 23:59:31,864 on stmt: $104.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,864 on stmt: $104.3 = call $104.1(n_out, func=$104.1, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None)
2021-05-28 23:59:31,864 on stmt: $104.4 = getiter(value=$104.3)
2021-05-28 23:59:31,864 on stmt: $phi112.1 = $104.4
2021-05-28 23:59:31,864 on stmt: jump 112
2021-05-28 23:59:31,864 ==== SSA block rewrite pass on 112
2021-05-28 23:59:31,864 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8DD8>
2021-05-28 23:59:31,864 on stmt: time_register.2 = phi(incoming_values=[Var(time_register, interpn.py:13), Var(time_register.1, interpn.py:67)], incoming_blocks=[104, 466])
2021-05-28 23:59:31,864 on stmt: $112.2 = iternext(value=$phi112.1)
2021-05-28 23:59:31,864 on stmt: $112.3 = pair_first(value=$112.2)
2021-05-28 23:59:31,865 on stmt: $112.4 = pair_second(value=$112.2)
2021-05-28 23:59:31,865 on stmt: $phi116.1 = $112.3
2021-05-28 23:59:31,865 on stmt: $phi476.1 = $112.3
2021-05-28 23:59:31,865 on stmt: $phi476.2 = $phi112.1
2021-05-28 23:59:31,865 on stmt: branch $112.4, 116, 476
2021-05-28 23:59:31,865 ==== SSA block rewrite pass on 116
2021-05-28 23:59:31,865 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8DD8>
2021-05-28 23:59:31,865 on stmt: t = $phi116.1
2021-05-28 23:59:31,865 on stmt: $116.2 = global(int: <class 'int'>)
2021-05-28 23:59:31,865 on stmt: n.1 = call $116.2(time_register.2, func=$116.2, args=[Var(time_register.2, interpn.py:27)], kws=(), vararg=None)
2021-05-28 23:59:31,865 on stmt: $116.8 = time_register.2 - n.1
2021-05-28 23:59:31,865 on stmt: frac = scale * $116.8
2021-05-28 23:59:31,865 on stmt: index_frac.1 = frac * num_table
2021-05-28 23:59:31,865 on stmt: $116.13 = global(int: <class 'int'>)
2021-05-28 23:59:31,865 on stmt: offset.1 = call $116.13(index_frac.1, func=$116.13, args=[Var(index_frac.1, interpn.py:35)], kws=(), vararg=None)
2021-05-28 23:59:31,865 on stmt: eta.1 = index_frac.1 - offset.1
2021-05-28 23:59:31,865 on stmt: $116.19 = global(min: <built-in function min>)
2021-05-28 23:59:31,865 on stmt: $const116.21 = const(int, 1)
2021-05-28 23:59:31,865 on stmt: $116.22 = n.1 + $const116.21
2021-05-28 23:59:31,865 on stmt: $116.25 = nwin - offset.1
2021-05-28 23:59:31,865 on stmt: $116.27 = $116.25 // index_step
2021-05-28 23:59:31,865 on stmt: i_max = call $116.19($116.22, $116.27, func=$116.19, args=[Var($116.22, interpn.py:42), Var($116.27, interpn.py:42)], kws=(), vararg=None)
2021-05-28 23:59:31,866 on stmt: jump 184
2021-05-28 23:59:31,866 ==== SSA block rewrite pass on 184
2021-05-28 23:59:31,866 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8DD8>
2021-05-28 23:59:31,866 on stmt: jump 186
2021-05-28 23:59:31,866 ==== SSA block rewrite pass on 186
2021-05-28 23:59:31,866 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8DD8>
2021-05-28 23:59:31,866 on stmt: $186.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,866 on stmt: $186.3 = call $186.1(i_max, func=$186.1, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None)
2021-05-28 23:59:31,866 on stmt: $186.4 = getiter(value=$186.3)
2021-05-28 23:59:31,866 on stmt: $phi194.1 = $186.4
2021-05-28 23:59:31,866 on stmt: jump 194
2021-05-28 23:59:31,866 ==== SSA block rewrite pass on 194
2021-05-28 23:59:31,866 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8DD8>
2021-05-28 23:59:31,866 on stmt: $194.2 = iternext(value=$phi194.1)
2021-05-28 23:59:31,866 on stmt: $194.3 = pair_first(value=$194.2)
2021-05-28 23:59:31,866 on stmt: $194.4 = pair_second(value=$194.2)
2021-05-28 23:59:31,866 on stmt: $phi196.1 = $194.3
2021-05-28 23:59:31,866 on stmt: $phi290.1 = $194.3
2021-05-28 23:59:31,866 on stmt: $phi290.2 = $phi194.1
2021-05-28 23:59:31,866 on stmt: branch $194.4, 196, 290
2021-05-28 23:59:31,867 ==== SSA block rewrite pass on 196
2021-05-28 23:59:31,867 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8DD8>
2021-05-28 23:59:31,867 on stmt: i = $phi196.1
2021-05-28 23:59:31,867 on stmt: $196.6 = i * index_step
2021-05-28 23:59:31,867 on stmt: $196.7 = offset.1 + $196.6
2021-05-28 23:59:31,867 on stmt: $196.8 = getitem(value=interp_win, index=$196.7, fn=<built-in function getitem>)
2021-05-28 23:59:31,867 on stmt: $196.14 = i * index_step
2021-05-28 23:59:31,867 on stmt: $196.15 = offset.1 + $196.14
2021-05-28 23:59:31,867 on stmt: $196.16 = getitem(value=interp_delta, index=$196.15, fn=<built-in function getitem>)
2021-05-28 23:59:31,867 on stmt: $196.17 = eta * $196.16
2021-05-28 23:59:31,867 find_def var='eta' stmt=$196.17 = eta * $196.16
2021-05-28 23:59:31,867 find_def_from_top label 196
2021-05-28 23:59:31,867 idom 194 from label 196
2021-05-28 23:59:31,867 find_def_from_bottom label 194
2021-05-28 23:59:31,867 find_def_from_top label 194
2021-05-28 23:59:31,867 idom 186 from label 194
2021-05-28 23:59:31,867 find_def_from_bottom label 186
2021-05-28 23:59:31,867 find_def_from_top label 186
2021-05-28 23:59:31,867 idom 184 from label 186
2021-05-28 23:59:31,867 find_def_from_bottom label 184
2021-05-28 23:59:31,867 find_def_from_top label 184
2021-05-28 23:59:31,867 idom 116 from label 184
2021-05-28 23:59:31,868 find_def_from_bottom label 116
2021-05-28 23:59:31,868 replaced with: $196.17 = eta.1 * $196.16
2021-05-28 23:59:31,868 on stmt: weight.1 = $196.8 + $196.17
2021-05-28 23:59:31,868 on stmt: jump 234
2021-05-28 23:59:31,868 ==== SSA block rewrite pass on 234
2021-05-28 23:59:31,868 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8DD8>
2021-05-28 23:59:31,868 on stmt: jump 236
2021-05-28 23:59:31,868 ==== SSA block rewrite pass on 236
2021-05-28 23:59:31,868 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8DD8>
2021-05-28 23:59:31,868 on stmt: $236.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,868 on stmt: $236.3 = call $236.1(n_channels, func=$236.1, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-28 23:59:31,868 on stmt: $236.4 = getiter(value=$236.3)
2021-05-28 23:59:31,868 on stmt: $phi244.1 = $236.4
2021-05-28 23:59:31,868 on stmt: jump 244
2021-05-28 23:59:31,868 ==== SSA block rewrite pass on 244
2021-05-28 23:59:31,868 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8DD8>
2021-05-28 23:59:31,868 on stmt: $244.2 = iternext(value=$phi244.1)
2021-05-28 23:59:31,868 on stmt: $244.3 = pair_first(value=$244.2)
2021-05-28 23:59:31,868 on stmt: $244.4 = pair_second(value=$244.2)
2021-05-28 23:59:31,868 on stmt: $phi246.1 = $244.3
2021-05-28 23:59:31,869 on stmt: $phi286.1 = $244.3
2021-05-28 23:59:31,869 on stmt: $phi286.2 = $phi244.1
2021-05-28 23:59:31,869 on stmt: branch $244.4, 246, 286
2021-05-28 23:59:31,869 ==== SSA block rewrite pass on 246
2021-05-28 23:59:31,869 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8DD8>
2021-05-28 23:59:31,869 on stmt: j = $phi246.1
2021-05-28 23:59:31,869 on stmt: $246.5 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-28 23:59:31,869 on stmt: $246.8 = getitem(value=y, index=$246.5, fn=<built-in function getitem>)
2021-05-28 23:59:31,869 on stmt: $246.13 = n.1 - i
2021-05-28 23:59:31,869 on stmt: $246.15 = build_tuple(items=[Var($246.13, interpn.py:47), Var(j, interpn.py:46)])
2021-05-28 23:59:31,869 on stmt: $246.16 = getitem(value=x, index=$246.15, fn=<built-in function getitem>)
2021-05-28 23:59:31,869 on stmt: $246.17 = weight.1 * $246.16
2021-05-28 23:59:31,869 on stmt: $246.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$246.8, rhs=$246.17, static_lhs=Undefined, static_rhs=Undefined)
2021-05-28 23:59:31,869 on stmt: y[$246.5] = $246.18
2021-05-28 23:59:31,869 on stmt: jump 244
2021-05-28 23:59:31,869 ==== SSA block rewrite pass on 286
2021-05-28 23:59:31,869 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8DD8>
2021-05-28 23:59:31,869 on stmt: jump 288
2021-05-28 23:59:31,869 ==== SSA block rewrite pass on 288
2021-05-28 23:59:31,869 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8DD8>
2021-05-28 23:59:31,869 on stmt: jump 194
2021-05-28 23:59:31,870 ==== SSA block rewrite pass on 290
2021-05-28 23:59:31,870 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8DD8>
2021-05-28 23:59:31,870 on stmt: jump 292
2021-05-28 23:59:31,870 ==== SSA block rewrite pass on 292
2021-05-28 23:59:31,870 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8DD8>
2021-05-28 23:59:31,870 on stmt: $292.3 = scale - frac
2021-05-28 23:59:31,870 on stmt: frac = $292.3
2021-05-28 23:59:31,870 on stmt: index_frac.2 = frac * num_table
2021-05-28 23:59:31,870 on stmt: $292.7 = global(int: <class 'int'>)
2021-05-28 23:59:31,870 on stmt: offset.2 = call $292.7(index_frac.2, func=$292.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None)
2021-05-28 23:59:31,870 on stmt: eta.2 = index_frac.2 - offset.2
2021-05-28 23:59:31,870 on stmt: $292.13 = global(min: <built-in function min>)
2021-05-28 23:59:31,870 on stmt: $292.16 = n_orig - n.1
2021-05-28 23:59:31,870 on stmt: $const292.17 = const(int, 1)
2021-05-28 23:59:31,870 on stmt: $292.18 = $292.16 - $const292.17
2021-05-28 23:59:31,870 on stmt: $292.21 = nwin - offset.2
2021-05-28 23:59:31,870 on stmt: $292.23 = $292.21 // index_step
2021-05-28 23:59:31,870 on stmt: k_max = call $292.13($292.18, $292.23, func=$292.13, args=[Var($292.18, interpn.py:60), Var($292.23, interpn.py:60)], kws=(), vararg=None)
2021-05-28 23:59:31,870 on stmt: jump 350
2021-05-28 23:59:31,870 ==== SSA block rewrite pass on 350
2021-05-28 23:59:31,870 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8DD8>
2021-05-28 23:59:31,870 on stmt: jump 352
2021-05-28 23:59:31,871 ==== SSA block rewrite pass on 352
2021-05-28 23:59:31,871 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8DD8>
2021-05-28 23:59:31,871 on stmt: $352.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,871 on stmt: $352.3 = call $352.1(k_max, func=$352.1, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None)
2021-05-28 23:59:31,871 on stmt: $352.4 = getiter(value=$352.3)
2021-05-28 23:59:31,871 on stmt: $phi360.1 = $352.4
2021-05-28 23:59:31,871 on stmt: jump 360
2021-05-28 23:59:31,871 ==== SSA block rewrite pass on 360
2021-05-28 23:59:31,871 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8DD8>
2021-05-28 23:59:31,871 on stmt: $360.2 = iternext(value=$phi360.1)
2021-05-28 23:59:31,871 on stmt: $360.3 = pair_first(value=$360.2)
2021-05-28 23:59:31,871 on stmt: $360.4 = pair_second(value=$360.2)
2021-05-28 23:59:31,871 on stmt: $phi362.1 = $360.3
2021-05-28 23:59:31,871 on stmt: $phi464.1 = $360.3
2021-05-28 23:59:31,871 on stmt: $phi464.2 = $phi360.1
2021-05-28 23:59:31,871 on stmt: branch $360.4, 362, 464
2021-05-28 23:59:31,871 ==== SSA block rewrite pass on 362
2021-05-28 23:59:31,871 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8DD8>
2021-05-28 23:59:31,871 on stmt: k = $phi362.1
2021-05-28 23:59:31,871 on stmt: $362.6 = k * index_step
2021-05-28 23:59:31,871 on stmt: $362.7 = offset.2 + $362.6
2021-05-28 23:59:31,871 on stmt: $362.8 = getitem(value=interp_win, index=$362.7, fn=<built-in function getitem>)
2021-05-28 23:59:31,871 on stmt: $362.14 = k * index_step
2021-05-28 23:59:31,872 on stmt: $362.15 = offset.2 + $362.14
2021-05-28 23:59:31,872 on stmt: $362.16 = getitem(value=interp_delta, index=$362.15, fn=<built-in function getitem>)
2021-05-28 23:59:31,872 on stmt: $362.17 = eta * $362.16
2021-05-28 23:59:31,872 find_def var='eta' stmt=$362.17 = eta * $362.16
2021-05-28 23:59:31,872 find_def_from_top label 362
2021-05-28 23:59:31,872 idom 360 from label 362
2021-05-28 23:59:31,872 find_def_from_bottom label 360
2021-05-28 23:59:31,872 find_def_from_top label 360
2021-05-28 23:59:31,872 idom 352 from label 360
2021-05-28 23:59:31,872 find_def_from_bottom label 352
2021-05-28 23:59:31,872 find_def_from_top label 352
2021-05-28 23:59:31,872 idom 350 from label 352
2021-05-28 23:59:31,872 find_def_from_bottom label 350
2021-05-28 23:59:31,872 find_def_from_top label 350
2021-05-28 23:59:31,872 idom 292 from label 350
2021-05-28 23:59:31,872 find_def_from_bottom label 292
2021-05-28 23:59:31,872 replaced with: $362.17 = eta.2 * $362.16
2021-05-28 23:59:31,872 on stmt: weight.2 = $362.8 + $362.17
2021-05-28 23:59:31,872 on stmt: jump 400
2021-05-28 23:59:31,872 ==== SSA block rewrite pass on 400
2021-05-28 23:59:31,872 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8DD8>
2021-05-28 23:59:31,872 on stmt: jump 402
2021-05-28 23:59:31,872 ==== SSA block rewrite pass on 402
2021-05-28 23:59:31,872 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8DD8>
2021-05-28 23:59:31,873 on stmt: $402.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,873 on stmt: $402.3 = call $402.1(n_channels, func=$402.1, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-28 23:59:31,873 on stmt: $402.4 = getiter(value=$402.3)
2021-05-28 23:59:31,873 on stmt: $phi410.1 = $402.4
2021-05-28 23:59:31,873 on stmt: jump 410
2021-05-28 23:59:31,873 ==== SSA block rewrite pass on 410
2021-05-28 23:59:31,873 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8DD8>
2021-05-28 23:59:31,873 on stmt: $410.2 = iternext(value=$phi410.1)
2021-05-28 23:59:31,873 on stmt: $410.3 = pair_first(value=$410.2)
2021-05-28 23:59:31,873 on stmt: $410.4 = pair_second(value=$410.2)
2021-05-28 23:59:31,873 on stmt: $phi412.1 = $410.3
2021-05-28 23:59:31,873 on stmt: $phi458.1 = $410.3
2021-05-28 23:59:31,873 on stmt: $phi458.2 = $phi410.1
2021-05-28 23:59:31,873 on stmt: branch $410.4, 412, 458
2021-05-28 23:59:31,873 ==== SSA block rewrite pass on 412
2021-05-28 23:59:31,873 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8DD8>
2021-05-28 23:59:31,873 on stmt: j = $phi412.1
2021-05-28 23:59:31,873 on stmt: $412.5 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-28 23:59:31,873 on stmt: $412.8 = getitem(value=y, index=$412.5, fn=<built-in function getitem>)
2021-05-28 23:59:31,873 on stmt: $412.13 = n.1 + k
2021-05-28 23:59:31,873 on stmt: $const412.14 = const(int, 1)
2021-05-28 23:59:31,873 on stmt: $412.15 = $412.13 + $const412.14
2021-05-28 23:59:31,874 on stmt: $412.17 = build_tuple(items=[Var($412.15, interpn.py:64), Var(j, interpn.py:46)])
2021-05-28 23:59:31,874 on stmt: $412.18 = getitem(value=x, index=$412.17, fn=<built-in function getitem>)
2021-05-28 23:59:31,874 on stmt: $412.19 = weight.2 * $412.18
2021-05-28 23:59:31,874 on stmt: $412.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$412.8, rhs=$412.19, static_lhs=Undefined, static_rhs=Undefined)
2021-05-28 23:59:31,874 on stmt: y[$412.5] = $412.20
2021-05-28 23:59:31,874 on stmt: jump 410
2021-05-28 23:59:31,874 ==== SSA block rewrite pass on 458
2021-05-28 23:59:31,874 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8DD8>
2021-05-28 23:59:31,874 on stmt: jump 460
2021-05-28 23:59:31,874 ==== SSA block rewrite pass on 460
2021-05-28 23:59:31,874 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8DD8>
2021-05-28 23:59:31,874 on stmt: jump 360
2021-05-28 23:59:31,874 ==== SSA block rewrite pass on 464
2021-05-28 23:59:31,874 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8DD8>
2021-05-28 23:59:31,874 on stmt: jump 466
2021-05-28 23:59:31,874 ==== SSA block rewrite pass on 466
2021-05-28 23:59:31,874 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8DD8>
2021-05-28 23:59:31,874 on stmt: $466.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register.2, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
2021-05-28 23:59:31,874 on stmt: time_register.1 = $466.3
2021-05-28 23:59:31,874 on stmt: jump 112
2021-05-28 23:59:31,874 ==== SSA block rewrite pass on 476
2021-05-28 23:59:31,874 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8DD8>
2021-05-28 23:59:31,874 on stmt: jump 478
2021-05-28 23:59:31,874 ==== SSA block rewrite pass on 478
2021-05-28 23:59:31,875 Running <numba.core.ssa._FixSSAVars object at 0x00000168E88C8DD8>
2021-05-28 23:59:31,875 on stmt: $const478.1 = const(NoneType, None)
2021-05-28 23:59:31,875 on stmt: $478.2 = cast(value=$const478.1)
2021-05-28 23:59:31,875 on stmt: return $478.2
2021-05-28 23:59:31,875 Fix SSA violator on var j
2021-05-28 23:59:31,875 ==== SSA block rewrite pass on 0
2021-05-28 23:59:31,875 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8873550>
2021-05-28 23:59:31,875 on stmt: x = arg(0, name=x)
2021-05-28 23:59:31,875 on stmt: y = arg(1, name=y)
2021-05-28 23:59:31,875 on stmt: sample_ratio = arg(2, name=sample_ratio)
2021-05-28 23:59:31,875 on stmt: interp_win = arg(3, name=interp_win)
2021-05-28 23:59:31,875 on stmt: interp_delta = arg(4, name=interp_delta)
2021-05-28 23:59:31,875 on stmt: num_table = arg(5, name=num_table)
2021-05-28 23:59:31,875 on stmt: $0.1 = global(min: <built-in function min>)
2021-05-28 23:59:31,875 on stmt: $const0.2 = const(float, 1.0)
2021-05-28 23:59:31,875 on stmt: scale = call $0.1($const0.2, sample_ratio, func=$0.1, args=[Var($const0.2, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None)
2021-05-28 23:59:31,875 on stmt: $const0.5 = const(float, 1.0)
2021-05-28 23:59:31,875 on stmt: time_increment = $const0.5 / sample_ratio
2021-05-28 23:59:31,875 on stmt: $0.8 = global(int: <class 'int'>)
2021-05-28 23:59:31,875 on stmt: $0.11 = scale * num_table
2021-05-28 23:59:31,875 on stmt: index_step = call $0.8($0.11, func=$0.8, args=[Var($0.11, interpn.py:12)], kws=(), vararg=None)
2021-05-28 23:59:31,875 on stmt: time_register = const(float, 0.0)
2021-05-28 23:59:31,875 on stmt: n = const(int, 0)
2021-05-28 23:59:31,876 on stmt: frac = const(float, 0.0)
2021-05-28 23:59:31,876 on stmt: index_frac = const(float, 0.0)
2021-05-28 23:59:31,876 on stmt: offset = const(int, 0)
2021-05-28 23:59:31,876 on stmt: eta = const(float, 0.0)
2021-05-28 23:59:31,876 on stmt: weight = const(float, 0.0)
2021-05-28 23:59:31,876 on stmt: $0.21 = getattr(value=interp_win, attr=shape)
2021-05-28 23:59:31,876 on stmt: $const0.22 = const(int, 0)
2021-05-28 23:59:31,876 on stmt: nwin = static_getitem(value=$0.21, index=0, index_var=$const0.22, fn=<built-in function getitem>)
2021-05-28 23:59:31,876 on stmt: $0.25 = getattr(value=x, attr=shape)
2021-05-28 23:59:31,876 on stmt: $const0.26 = const(int, 0)
2021-05-28 23:59:31,876 on stmt: n_orig = static_getitem(value=$0.25, index=0, index_var=$const0.26, fn=<built-in function getitem>)
2021-05-28 23:59:31,876 on stmt: $0.29 = getattr(value=y, attr=shape)
2021-05-28 23:59:31,876 on stmt: $const0.30 = const(int, 0)
2021-05-28 23:59:31,876 on stmt: n_out = static_getitem(value=$0.29, index=0, index_var=$const0.30, fn=<built-in function getitem>)
2021-05-28 23:59:31,876 on stmt: $0.33 = getattr(value=y, attr=shape)
2021-05-28 23:59:31,876 on stmt: $const0.34 = const(int, 1)
2021-05-28 23:59:31,876 on stmt: n_channels = static_getitem(value=$0.33, index=1, index_var=$const0.34, fn=<built-in function getitem>)
2021-05-28 23:59:31,876 on stmt: jump 100
2021-05-28 23:59:31,876 ==== SSA block rewrite pass on 100
2021-05-28 23:59:31,876 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8873550>
2021-05-28 23:59:31,876 on stmt: jump 104
2021-05-28 23:59:31,876 ==== SSA block rewrite pass on 104
2021-05-28 23:59:31,876 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8873550>
2021-05-28 23:59:31,876 on stmt: $104.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,877 on stmt: $104.3 = call $104.1(n_out, func=$104.1, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None)
2021-05-28 23:59:31,877 on stmt: $104.4 = getiter(value=$104.3)
2021-05-28 23:59:31,877 on stmt: $phi112.1 = $104.4
2021-05-28 23:59:31,877 on stmt: jump 112
2021-05-28 23:59:31,877 ==== SSA block rewrite pass on 112
2021-05-28 23:59:31,877 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8873550>
2021-05-28 23:59:31,877 on stmt: time_register.2 = phi(incoming_values=[Var(time_register, interpn.py:13), Var(time_register.1, interpn.py:67)], incoming_blocks=[104, 466])
2021-05-28 23:59:31,877 on stmt: $112.2 = iternext(value=$phi112.1)
2021-05-28 23:59:31,877 on stmt: $112.3 = pair_first(value=$112.2)
2021-05-28 23:59:31,877 on stmt: $112.4 = pair_second(value=$112.2)
2021-05-28 23:59:31,877 on stmt: $phi116.1 = $112.3
2021-05-28 23:59:31,877 on stmt: $phi476.1 = $112.3
2021-05-28 23:59:31,877 on stmt: $phi476.2 = $phi112.1
2021-05-28 23:59:31,877 on stmt: branch $112.4, 116, 476
2021-05-28 23:59:31,877 ==== SSA block rewrite pass on 116
2021-05-28 23:59:31,877 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8873550>
2021-05-28 23:59:31,877 on stmt: t = $phi116.1
2021-05-28 23:59:31,877 on stmt: $116.2 = global(int: <class 'int'>)
2021-05-28 23:59:31,877 on stmt: n.1 = call $116.2(time_register.2, func=$116.2, args=[Var(time_register.2, interpn.py:27)], kws=(), vararg=None)
2021-05-28 23:59:31,877 on stmt: $116.8 = time_register.2 - n.1
2021-05-28 23:59:31,877 on stmt: frac = scale * $116.8
2021-05-28 23:59:31,878 on stmt: index_frac.1 = frac * num_table
2021-05-28 23:59:31,878 on stmt: $116.13 = global(int: <class 'int'>)
2021-05-28 23:59:31,878 on stmt: offset.1 = call $116.13(index_frac.1, func=$116.13, args=[Var(index_frac.1, interpn.py:35)], kws=(), vararg=None)
2021-05-28 23:59:31,878 on stmt: eta.1 = index_frac.1 - offset.1
2021-05-28 23:59:31,878 on stmt: $116.19 = global(min: <built-in function min>)
2021-05-28 23:59:31,878 on stmt: $const116.21 = const(int, 1)
2021-05-28 23:59:31,878 on stmt: $116.22 = n.1 + $const116.21
2021-05-28 23:59:31,878 on stmt: $116.25 = nwin - offset.1
2021-05-28 23:59:31,878 on stmt: $116.27 = $116.25 // index_step
2021-05-28 23:59:31,878 on stmt: i_max = call $116.19($116.22, $116.27, func=$116.19, args=[Var($116.22, interpn.py:42), Var($116.27, interpn.py:42)], kws=(), vararg=None)
2021-05-28 23:59:31,878 on stmt: jump 184
2021-05-28 23:59:31,878 ==== SSA block rewrite pass on 184
2021-05-28 23:59:31,878 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8873550>
2021-05-28 23:59:31,878 on stmt: jump 186
2021-05-28 23:59:31,878 ==== SSA block rewrite pass on 186
2021-05-28 23:59:31,878 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8873550>
2021-05-28 23:59:31,878 on stmt: $186.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,878 on stmt: $186.3 = call $186.1(i_max, func=$186.1, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None)
2021-05-28 23:59:31,878 on stmt: $186.4 = getiter(value=$186.3)
2021-05-28 23:59:31,878 on stmt: $phi194.1 = $186.4
2021-05-28 23:59:31,878 on stmt: jump 194
2021-05-28 23:59:31,878 ==== SSA block rewrite pass on 194
2021-05-28 23:59:31,878 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8873550>
2021-05-28 23:59:31,878 on stmt: $194.2 = iternext(value=$phi194.1)
2021-05-28 23:59:31,879 on stmt: $194.3 = pair_first(value=$194.2)
2021-05-28 23:59:31,879 on stmt: $194.4 = pair_second(value=$194.2)
2021-05-28 23:59:31,879 on stmt: $phi196.1 = $194.3
2021-05-28 23:59:31,879 on stmt: $phi290.1 = $194.3
2021-05-28 23:59:31,879 on stmt: $phi290.2 = $phi194.1
2021-05-28 23:59:31,879 on stmt: branch $194.4, 196, 290
2021-05-28 23:59:31,879 ==== SSA block rewrite pass on 196
2021-05-28 23:59:31,879 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8873550>
2021-05-28 23:59:31,879 on stmt: i = $phi196.1
2021-05-28 23:59:31,879 on stmt: $196.6 = i * index_step
2021-05-28 23:59:31,879 on stmt: $196.7 = offset.1 + $196.6
2021-05-28 23:59:31,879 on stmt: $196.8 = getitem(value=interp_win, index=$196.7, fn=<built-in function getitem>)
2021-05-28 23:59:31,879 on stmt: $196.14 = i * index_step
2021-05-28 23:59:31,879 on stmt: $196.15 = offset.1 + $196.14
2021-05-28 23:59:31,879 on stmt: $196.16 = getitem(value=interp_delta, index=$196.15, fn=<built-in function getitem>)
2021-05-28 23:59:31,879 on stmt: $196.17 = eta.1 * $196.16
2021-05-28 23:59:31,880 on stmt: weight.1 = $196.8 + $196.17
2021-05-28 23:59:31,880 on stmt: jump 234
2021-05-28 23:59:31,880 ==== SSA block rewrite pass on 234
2021-05-28 23:59:31,880 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8873550>
2021-05-28 23:59:31,880 on stmt: jump 236
2021-05-28 23:59:31,880 ==== SSA block rewrite pass on 236
2021-05-28 23:59:31,880 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8873550>
2021-05-28 23:59:31,880 on stmt: $236.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,880 on stmt: $236.3 = call $236.1(n_channels, func=$236.1, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-28 23:59:31,880 on stmt: $236.4 = getiter(value=$236.3)
2021-05-28 23:59:31,880 on stmt: $phi244.1 = $236.4
2021-05-28 23:59:31,880 on stmt: jump 244
2021-05-28 23:59:31,880 ==== SSA block rewrite pass on 244
2021-05-28 23:59:31,880 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8873550>
2021-05-28 23:59:31,880 on stmt: $244.2 = iternext(value=$phi244.1)
2021-05-28 23:59:31,880 on stmt: $244.3 = pair_first(value=$244.2)
2021-05-28 23:59:31,880 on stmt: $244.4 = pair_second(value=$244.2)
2021-05-28 23:59:31,880 on stmt: $phi246.1 = $244.3
2021-05-28 23:59:31,880 on stmt: $phi286.1 = $244.3
2021-05-28 23:59:31,880 on stmt: $phi286.2 = $phi244.1
2021-05-28 23:59:31,880 on stmt: branch $244.4, 246, 286
2021-05-28 23:59:31,880 ==== SSA block rewrite pass on 246
2021-05-28 23:59:31,880 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8873550>
2021-05-28 23:59:31,880 on stmt: j = $phi246.1
2021-05-28 23:59:31,880 first assign: j
2021-05-28 23:59:31,881 replaced with: j = $phi246.1
2021-05-28 23:59:31,881 on stmt: $246.5 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-28 23:59:31,881 on stmt: $246.8 = getitem(value=y, index=$246.5, fn=<built-in function getitem>)
2021-05-28 23:59:31,881 on stmt: $246.13 = n.1 - i
2021-05-28 23:59:31,881 on stmt: $246.15 = build_tuple(items=[Var($246.13, interpn.py:47), Var(j, interpn.py:46)])
2021-05-28 23:59:31,881 on stmt: $246.16 = getitem(value=x, index=$246.15, fn=<built-in function getitem>)
2021-05-28 23:59:31,881 on stmt: $246.17 = weight.1 * $246.16
2021-05-28 23:59:31,881 on stmt: $246.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$246.8, rhs=$246.17, static_lhs=Undefined, static_rhs=Undefined)
2021-05-28 23:59:31,881 on stmt: y[$246.5] = $246.18
2021-05-28 23:59:31,881 on stmt: jump 244
2021-05-28 23:59:31,881 ==== SSA block rewrite pass on 286
2021-05-28 23:59:31,881 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8873550>
2021-05-28 23:59:31,881 on stmt: jump 288
2021-05-28 23:59:31,881 ==== SSA block rewrite pass on 288
2021-05-28 23:59:31,881 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8873550>
2021-05-28 23:59:31,881 on stmt: jump 194
2021-05-28 23:59:31,881 ==== SSA block rewrite pass on 290
2021-05-28 23:59:31,881 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8873550>
2021-05-28 23:59:31,881 on stmt: jump 292
2021-05-28 23:59:31,881 ==== SSA block rewrite pass on 292
2021-05-28 23:59:31,881 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8873550>
2021-05-28 23:59:31,881 on stmt: $292.3 = scale - frac
2021-05-28 23:59:31,881 on stmt: frac = $292.3
2021-05-28 23:59:31,881 on stmt: index_frac.2 = frac * num_table
2021-05-28 23:59:31,882 on stmt: $292.7 = global(int: <class 'int'>)
2021-05-28 23:59:31,882 on stmt: offset.2 = call $292.7(index_frac.2, func=$292.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None)
2021-05-28 23:59:31,882 on stmt: eta.2 = index_frac.2 - offset.2
2021-05-28 23:59:31,882 on stmt: $292.13 = global(min: <built-in function min>)
2021-05-28 23:59:31,882 on stmt: $292.16 = n_orig - n.1
2021-05-28 23:59:31,882 on stmt: $const292.17 = const(int, 1)
2021-05-28 23:59:31,882 on stmt: $292.18 = $292.16 - $const292.17
2021-05-28 23:59:31,882 on stmt: $292.21 = nwin - offset.2
2021-05-28 23:59:31,882 on stmt: $292.23 = $292.21 // index_step
2021-05-28 23:59:31,882 on stmt: k_max = call $292.13($292.18, $292.23, func=$292.13, args=[Var($292.18, interpn.py:60), Var($292.23, interpn.py:60)], kws=(), vararg=None)
2021-05-28 23:59:31,882 on stmt: jump 350
2021-05-28 23:59:31,882 ==== SSA block rewrite pass on 350
2021-05-28 23:59:31,882 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8873550>
2021-05-28 23:59:31,882 on stmt: jump 352
2021-05-28 23:59:31,882 ==== SSA block rewrite pass on 352
2021-05-28 23:59:31,882 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8873550>
2021-05-28 23:59:31,882 on stmt: $352.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,882 on stmt: $352.3 = call $352.1(k_max, func=$352.1, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None)
2021-05-28 23:59:31,882 on stmt: $352.4 = getiter(value=$352.3)
2021-05-28 23:59:31,882 on stmt: $phi360.1 = $352.4
2021-05-28 23:59:31,882 on stmt: jump 360
2021-05-28 23:59:31,882 ==== SSA block rewrite pass on 360
2021-05-28 23:59:31,882 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8873550>
2021-05-28 23:59:31,883 on stmt: $360.2 = iternext(value=$phi360.1)
2021-05-28 23:59:31,883 on stmt: $360.3 = pair_first(value=$360.2)
2021-05-28 23:59:31,883 on stmt: $360.4 = pair_second(value=$360.2)
2021-05-28 23:59:31,883 on stmt: $phi362.1 = $360.3
2021-05-28 23:59:31,883 on stmt: $phi464.1 = $360.3
2021-05-28 23:59:31,883 on stmt: $phi464.2 = $phi360.1
2021-05-28 23:59:31,883 on stmt: branch $360.4, 362, 464
2021-05-28 23:59:31,883 ==== SSA block rewrite pass on 362
2021-05-28 23:59:31,883 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8873550>
2021-05-28 23:59:31,883 on stmt: k = $phi362.1
2021-05-28 23:59:31,883 on stmt: $362.6 = k * index_step
2021-05-28 23:59:31,883 on stmt: $362.7 = offset.2 + $362.6
2021-05-28 23:59:31,883 on stmt: $362.8 = getitem(value=interp_win, index=$362.7, fn=<built-in function getitem>)
2021-05-28 23:59:31,883 on stmt: $362.14 = k * index_step
2021-05-28 23:59:31,883 on stmt: $362.15 = offset.2 + $362.14
2021-05-28 23:59:31,883 on stmt: $362.16 = getitem(value=interp_delta, index=$362.15, fn=<built-in function getitem>)
2021-05-28 23:59:31,883 on stmt: $362.17 = eta.2 * $362.16
2021-05-28 23:59:31,883 on stmt: weight.2 = $362.8 + $362.17
2021-05-28 23:59:31,883 on stmt: jump 400
2021-05-28 23:59:31,883 ==== SSA block rewrite pass on 400
2021-05-28 23:59:31,883 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8873550>
2021-05-28 23:59:31,883 on stmt: jump 402
2021-05-28 23:59:31,883 ==== SSA block rewrite pass on 402
2021-05-28 23:59:31,883 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8873550>
2021-05-28 23:59:31,884 on stmt: $402.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,884 on stmt: $402.3 = call $402.1(n_channels, func=$402.1, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-28 23:59:31,884 on stmt: $402.4 = getiter(value=$402.3)
2021-05-28 23:59:31,884 on stmt: $phi410.1 = $402.4
2021-05-28 23:59:31,884 on stmt: jump 410
2021-05-28 23:59:31,884 ==== SSA block rewrite pass on 410
2021-05-28 23:59:31,884 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8873550>
2021-05-28 23:59:31,884 on stmt: $410.2 = iternext(value=$phi410.1)
2021-05-28 23:59:31,884 on stmt: $410.3 = pair_first(value=$410.2)
2021-05-28 23:59:31,884 on stmt: $410.4 = pair_second(value=$410.2)
2021-05-28 23:59:31,884 on stmt: $phi412.1 = $410.3
2021-05-28 23:59:31,884 on stmt: $phi458.1 = $410.3
2021-05-28 23:59:31,884 on stmt: $phi458.2 = $phi410.1
2021-05-28 23:59:31,884 on stmt: branch $410.4, 412, 458
2021-05-28 23:59:31,884 ==== SSA block rewrite pass on 412
2021-05-28 23:59:31,884 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8873550>
2021-05-28 23:59:31,884 on stmt: j = $phi412.1
2021-05-28 23:59:31,884 replaced with: j.1 = $phi412.1
2021-05-28 23:59:31,884 on stmt: $412.5 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-28 23:59:31,884 on stmt: $412.8 = getitem(value=y, index=$412.5, fn=<built-in function getitem>)
2021-05-28 23:59:31,884 on stmt: $412.13 = n.1 + k
2021-05-28 23:59:31,884 on stmt: $const412.14 = const(int, 1)
2021-05-28 23:59:31,885 on stmt: $412.15 = $412.13 + $const412.14
2021-05-28 23:59:31,885 on stmt: $412.17 = build_tuple(items=[Var($412.15, interpn.py:64), Var(j, interpn.py:46)])
2021-05-28 23:59:31,885 on stmt: $412.18 = getitem(value=x, index=$412.17, fn=<built-in function getitem>)
2021-05-28 23:59:31,885 on stmt: $412.19 = weight.2 * $412.18
2021-05-28 23:59:31,885 on stmt: $412.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$412.8, rhs=$412.19, static_lhs=Undefined, static_rhs=Undefined)
2021-05-28 23:59:31,885 on stmt: y[$412.5] = $412.20
2021-05-28 23:59:31,885 on stmt: jump 410
2021-05-28 23:59:31,885 ==== SSA block rewrite pass on 458
2021-05-28 23:59:31,885 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8873550>
2021-05-28 23:59:31,885 on stmt: jump 460
2021-05-28 23:59:31,885 ==== SSA block rewrite pass on 460
2021-05-28 23:59:31,885 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8873550>
2021-05-28 23:59:31,885 on stmt: jump 360
2021-05-28 23:59:31,885 ==== SSA block rewrite pass on 464
2021-05-28 23:59:31,885 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8873550>
2021-05-28 23:59:31,885 on stmt: jump 466
2021-05-28 23:59:31,885 ==== SSA block rewrite pass on 466
2021-05-28 23:59:31,885 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8873550>
2021-05-28 23:59:31,885 on stmt: $466.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register.2, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
2021-05-28 23:59:31,885 on stmt: time_register.1 = $466.3
2021-05-28 23:59:31,885 on stmt: jump 112
2021-05-28 23:59:31,885 ==== SSA block rewrite pass on 476
2021-05-28 23:59:31,885 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8873550>
2021-05-28 23:59:31,885 on stmt: jump 478
2021-05-28 23:59:31,885 ==== SSA block rewrite pass on 478
2021-05-28 23:59:31,886 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E8873550>
2021-05-28 23:59:31,886 on stmt: $const478.1 = const(NoneType, None)
2021-05-28 23:59:31,886 on stmt: $478.2 = cast(value=$const478.1)
2021-05-28 23:59:31,886 on stmt: return $478.2
2021-05-28 23:59:31,886 Replaced assignments: defaultdict(<class 'list'>,
            {246: [<numba.core.ir.Assign object at 0x00000168E88B6C18>],
             412: [<numba.core.ir.Assign object at 0x00000168E8907240>]})
2021-05-28 23:59:31,886 ==== SSA block rewrite pass on 0
2021-05-28 23:59:31,886 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903DD8>
2021-05-28 23:59:31,886 on stmt: x = arg(0, name=x)
2021-05-28 23:59:31,886 on stmt: y = arg(1, name=y)
2021-05-28 23:59:31,886 on stmt: sample_ratio = arg(2, name=sample_ratio)
2021-05-28 23:59:31,886 on stmt: interp_win = arg(3, name=interp_win)
2021-05-28 23:59:31,886 on stmt: interp_delta = arg(4, name=interp_delta)
2021-05-28 23:59:31,887 on stmt: num_table = arg(5, name=num_table)
2021-05-28 23:59:31,887 on stmt: $0.1 = global(min: <built-in function min>)
2021-05-28 23:59:31,887 on stmt: $const0.2 = const(float, 1.0)
2021-05-28 23:59:31,887 on stmt: scale = call $0.1($const0.2, sample_ratio, func=$0.1, args=[Var($const0.2, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None)
2021-05-28 23:59:31,887 on stmt: $const0.5 = const(float, 1.0)
2021-05-28 23:59:31,887 on stmt: time_increment = $const0.5 / sample_ratio
2021-05-28 23:59:31,887 on stmt: $0.8 = global(int: <class 'int'>)
2021-05-28 23:59:31,887 on stmt: $0.11 = scale * num_table
2021-05-28 23:59:31,887 on stmt: index_step = call $0.8($0.11, func=$0.8, args=[Var($0.11, interpn.py:12)], kws=(), vararg=None)
2021-05-28 23:59:31,887 on stmt: time_register = const(float, 0.0)
2021-05-28 23:59:31,887 on stmt: n = const(int, 0)
2021-05-28 23:59:31,887 on stmt: frac = const(float, 0.0)
2021-05-28 23:59:31,887 on stmt: index_frac = const(float, 0.0)
2021-05-28 23:59:31,887 on stmt: offset = const(int, 0)
2021-05-28 23:59:31,887 on stmt: eta = const(float, 0.0)
2021-05-28 23:59:31,887 on stmt: weight = const(float, 0.0)
2021-05-28 23:59:31,887 on stmt: $0.21 = getattr(value=interp_win, attr=shape)
2021-05-28 23:59:31,887 on stmt: $const0.22 = const(int, 0)
2021-05-28 23:59:31,887 on stmt: nwin = static_getitem(value=$0.21, index=0, index_var=$const0.22, fn=<built-in function getitem>)
2021-05-28 23:59:31,887 on stmt: $0.25 = getattr(value=x, attr=shape)
2021-05-28 23:59:31,887 on stmt: $const0.26 = const(int, 0)
2021-05-28 23:59:31,888 on stmt: n_orig = static_getitem(value=$0.25, index=0, index_var=$const0.26, fn=<built-in function getitem>)
2021-05-28 23:59:31,888 on stmt: $0.29 = getattr(value=y, attr=shape)
2021-05-28 23:59:31,888 on stmt: $const0.30 = const(int, 0)
2021-05-28 23:59:31,888 on stmt: n_out = static_getitem(value=$0.29, index=0, index_var=$const0.30, fn=<built-in function getitem>)
2021-05-28 23:59:31,888 on stmt: $0.33 = getattr(value=y, attr=shape)
2021-05-28 23:59:31,888 on stmt: $const0.34 = const(int, 1)
2021-05-28 23:59:31,888 on stmt: n_channels = static_getitem(value=$0.33, index=1, index_var=$const0.34, fn=<built-in function getitem>)
2021-05-28 23:59:31,888 on stmt: jump 100
2021-05-28 23:59:31,888 ==== SSA block rewrite pass on 100
2021-05-28 23:59:31,888 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903DD8>
2021-05-28 23:59:31,888 on stmt: jump 104
2021-05-28 23:59:31,888 ==== SSA block rewrite pass on 104
2021-05-28 23:59:31,888 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903DD8>
2021-05-28 23:59:31,888 on stmt: $104.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,888 on stmt: $104.3 = call $104.1(n_out, func=$104.1, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None)
2021-05-28 23:59:31,888 on stmt: $104.4 = getiter(value=$104.3)
2021-05-28 23:59:31,888 on stmt: $phi112.1 = $104.4
2021-05-28 23:59:31,888 on stmt: jump 112
2021-05-28 23:59:31,888 ==== SSA block rewrite pass on 112
2021-05-28 23:59:31,888 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903DD8>
2021-05-28 23:59:31,888 on stmt: time_register.2 = phi(incoming_values=[Var(time_register, interpn.py:13), Var(time_register.1, interpn.py:67)], incoming_blocks=[104, 466])
2021-05-28 23:59:31,888 on stmt: $112.2 = iternext(value=$phi112.1)
2021-05-28 23:59:31,889 on stmt: $112.3 = pair_first(value=$112.2)
2021-05-28 23:59:31,889 on stmt: $112.4 = pair_second(value=$112.2)
2021-05-28 23:59:31,889 on stmt: $phi116.1 = $112.3
2021-05-28 23:59:31,889 on stmt: $phi476.1 = $112.3
2021-05-28 23:59:31,889 on stmt: $phi476.2 = $phi112.1
2021-05-28 23:59:31,889 on stmt: branch $112.4, 116, 476
2021-05-28 23:59:31,889 ==== SSA block rewrite pass on 116
2021-05-28 23:59:31,889 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903DD8>
2021-05-28 23:59:31,889 on stmt: t = $phi116.1
2021-05-28 23:59:31,889 on stmt: $116.2 = global(int: <class 'int'>)
2021-05-28 23:59:31,889 on stmt: n.1 = call $116.2(time_register.2, func=$116.2, args=[Var(time_register.2, interpn.py:27)], kws=(), vararg=None)
2021-05-28 23:59:31,889 on stmt: $116.8 = time_register.2 - n.1
2021-05-28 23:59:31,889 on stmt: frac = scale * $116.8
2021-05-28 23:59:31,889 on stmt: index_frac.1 = frac * num_table
2021-05-28 23:59:31,889 on stmt: $116.13 = global(int: <class 'int'>)
2021-05-28 23:59:31,889 on stmt: offset.1 = call $116.13(index_frac.1, func=$116.13, args=[Var(index_frac.1, interpn.py:35)], kws=(), vararg=None)
2021-05-28 23:59:31,889 on stmt: eta.1 = index_frac.1 - offset.1
2021-05-28 23:59:31,889 on stmt: $116.19 = global(min: <built-in function min>)
2021-05-28 23:59:31,889 on stmt: $const116.21 = const(int, 1)
2021-05-28 23:59:31,889 on stmt: $116.22 = n.1 + $const116.21
2021-05-28 23:59:31,889 on stmt: $116.25 = nwin - offset.1
2021-05-28 23:59:31,890 on stmt: $116.27 = $116.25 // index_step
2021-05-28 23:59:31,890 on stmt: i_max = call $116.19($116.22, $116.27, func=$116.19, args=[Var($116.22, interpn.py:42), Var($116.27, interpn.py:42)], kws=(), vararg=None)
2021-05-28 23:59:31,890 on stmt: jump 184
2021-05-28 23:59:31,890 ==== SSA block rewrite pass on 184
2021-05-28 23:59:31,890 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903DD8>
2021-05-28 23:59:31,890 on stmt: jump 186
2021-05-28 23:59:31,890 ==== SSA block rewrite pass on 186
2021-05-28 23:59:31,890 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903DD8>
2021-05-28 23:59:31,890 on stmt: $186.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,890 on stmt: $186.3 = call $186.1(i_max, func=$186.1, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None)
2021-05-28 23:59:31,890 on stmt: $186.4 = getiter(value=$186.3)
2021-05-28 23:59:31,890 on stmt: $phi194.1 = $186.4
2021-05-28 23:59:31,890 on stmt: jump 194
2021-05-28 23:59:31,890 ==== SSA block rewrite pass on 194
2021-05-28 23:59:31,890 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903DD8>
2021-05-28 23:59:31,890 on stmt: $194.2 = iternext(value=$phi194.1)
2021-05-28 23:59:31,890 on stmt: $194.3 = pair_first(value=$194.2)
2021-05-28 23:59:31,890 on stmt: $194.4 = pair_second(value=$194.2)
2021-05-28 23:59:31,890 on stmt: $phi196.1 = $194.3
2021-05-28 23:59:31,890 on stmt: $phi290.1 = $194.3
2021-05-28 23:59:31,890 on stmt: $phi290.2 = $phi194.1
2021-05-28 23:59:31,890 on stmt: branch $194.4, 196, 290
2021-05-28 23:59:31,891 ==== SSA block rewrite pass on 196
2021-05-28 23:59:31,891 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903DD8>
2021-05-28 23:59:31,891 on stmt: i = $phi196.1
2021-05-28 23:59:31,891 on stmt: $196.6 = i * index_step
2021-05-28 23:59:31,891 on stmt: $196.7 = offset.1 + $196.6
2021-05-28 23:59:31,891 on stmt: $196.8 = getitem(value=interp_win, index=$196.7, fn=<built-in function getitem>)
2021-05-28 23:59:31,891 on stmt: $196.14 = i * index_step
2021-05-28 23:59:31,891 on stmt: $196.15 = offset.1 + $196.14
2021-05-28 23:59:31,891 on stmt: $196.16 = getitem(value=interp_delta, index=$196.15, fn=<built-in function getitem>)
2021-05-28 23:59:31,891 on stmt: $196.17 = eta.1 * $196.16
2021-05-28 23:59:31,891 on stmt: weight.1 = $196.8 + $196.17
2021-05-28 23:59:31,891 on stmt: jump 234
2021-05-28 23:59:31,891 ==== SSA block rewrite pass on 234
2021-05-28 23:59:31,891 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903DD8>
2021-05-28 23:59:31,891 on stmt: jump 236
2021-05-28 23:59:31,891 ==== SSA block rewrite pass on 236
2021-05-28 23:59:31,891 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903DD8>
2021-05-28 23:59:31,891 on stmt: $236.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,891 on stmt: $236.3 = call $236.1(n_channels, func=$236.1, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-28 23:59:31,891 on stmt: $236.4 = getiter(value=$236.3)
2021-05-28 23:59:31,891 on stmt: $phi244.1 = $236.4
2021-05-28 23:59:31,891 on stmt: jump 244
2021-05-28 23:59:31,892 ==== SSA block rewrite pass on 244
2021-05-28 23:59:31,892 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903DD8>
2021-05-28 23:59:31,892 on stmt: $244.2 = iternext(value=$phi244.1)
2021-05-28 23:59:31,892 on stmt: $244.3 = pair_first(value=$244.2)
2021-05-28 23:59:31,892 on stmt: $244.4 = pair_second(value=$244.2)
2021-05-28 23:59:31,892 on stmt: $phi246.1 = $244.3
2021-05-28 23:59:31,892 on stmt: $phi286.1 = $244.3
2021-05-28 23:59:31,892 on stmt: $phi286.2 = $phi244.1
2021-05-28 23:59:31,892 on stmt: branch $244.4, 246, 286
2021-05-28 23:59:31,892 ==== SSA block rewrite pass on 246
2021-05-28 23:59:31,892 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903DD8>
2021-05-28 23:59:31,892 on stmt: j = $phi246.1
2021-05-28 23:59:31,892 on stmt: $246.5 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-28 23:59:31,892 find_def var='j' stmt=$246.5 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-28 23:59:31,892 on stmt: $246.8 = getitem(value=y, index=$246.5, fn=<built-in function getitem>)
2021-05-28 23:59:31,892 on stmt: $246.13 = n.1 - i
2021-05-28 23:59:31,892 on stmt: $246.15 = build_tuple(items=[Var($246.13, interpn.py:47), Var(j, interpn.py:46)])
2021-05-28 23:59:31,892 find_def var='j' stmt=$246.15 = build_tuple(items=[Var($246.13, interpn.py:47), Var(j, interpn.py:46)])
2021-05-28 23:59:31,892 on stmt: $246.16 = getitem(value=x, index=$246.15, fn=<built-in function getitem>)
2021-05-28 23:59:31,892 on stmt: $246.17 = weight.1 * $246.16
2021-05-28 23:59:31,892 on stmt: $246.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$246.8, rhs=$246.17, static_lhs=Undefined, static_rhs=Undefined)
2021-05-28 23:59:31,892 on stmt: y[$246.5] = $246.18
2021-05-28 23:59:31,893 on stmt: jump 244
2021-05-28 23:59:31,893 ==== SSA block rewrite pass on 286
2021-05-28 23:59:31,893 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903DD8>
2021-05-28 23:59:31,893 on stmt: jump 288
2021-05-28 23:59:31,893 ==== SSA block rewrite pass on 288
2021-05-28 23:59:31,893 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903DD8>
2021-05-28 23:59:31,893 on stmt: jump 194
2021-05-28 23:59:31,893 ==== SSA block rewrite pass on 290
2021-05-28 23:59:31,893 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903DD8>
2021-05-28 23:59:31,893 on stmt: jump 292
2021-05-28 23:59:31,893 ==== SSA block rewrite pass on 292
2021-05-28 23:59:31,893 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903DD8>
2021-05-28 23:59:31,893 on stmt: $292.3 = scale - frac
2021-05-28 23:59:31,893 on stmt: frac = $292.3
2021-05-28 23:59:31,893 on stmt: index_frac.2 = frac * num_table
2021-05-28 23:59:31,893 on stmt: $292.7 = global(int: <class 'int'>)
2021-05-28 23:59:31,893 on stmt: offset.2 = call $292.7(index_frac.2, func=$292.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None)
2021-05-28 23:59:31,893 on stmt: eta.2 = index_frac.2 - offset.2
2021-05-28 23:59:31,893 on stmt: $292.13 = global(min: <built-in function min>)
2021-05-28 23:59:31,893 on stmt: $292.16 = n_orig - n.1
2021-05-28 23:59:31,893 on stmt: $const292.17 = const(int, 1)
2021-05-28 23:59:31,893 on stmt: $292.18 = $292.16 - $const292.17
2021-05-28 23:59:31,893 on stmt: $292.21 = nwin - offset.2
2021-05-28 23:59:31,894 on stmt: $292.23 = $292.21 // index_step
2021-05-28 23:59:31,894 on stmt: k_max = call $292.13($292.18, $292.23, func=$292.13, args=[Var($292.18, interpn.py:60), Var($292.23, interpn.py:60)], kws=(), vararg=None)
2021-05-28 23:59:31,894 on stmt: jump 350
2021-05-28 23:59:31,894 ==== SSA block rewrite pass on 350
2021-05-28 23:59:31,894 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903DD8>
2021-05-28 23:59:31,894 on stmt: jump 352
2021-05-28 23:59:31,894 ==== SSA block rewrite pass on 352
2021-05-28 23:59:31,894 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903DD8>
2021-05-28 23:59:31,894 on stmt: $352.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,894 on stmt: $352.3 = call $352.1(k_max, func=$352.1, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None)
2021-05-28 23:59:31,894 on stmt: $352.4 = getiter(value=$352.3)
2021-05-28 23:59:31,894 on stmt: $phi360.1 = $352.4
2021-05-28 23:59:31,894 on stmt: jump 360
2021-05-28 23:59:31,895 ==== SSA block rewrite pass on 360
2021-05-28 23:59:31,895 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903DD8>
2021-05-28 23:59:31,895 on stmt: $360.2 = iternext(value=$phi360.1)
2021-05-28 23:59:31,895 on stmt: $360.3 = pair_first(value=$360.2)
2021-05-28 23:59:31,895 on stmt: $360.4 = pair_second(value=$360.2)
2021-05-28 23:59:31,895 on stmt: $phi362.1 = $360.3
2021-05-28 23:59:31,895 on stmt: $phi464.1 = $360.3
2021-05-28 23:59:31,895 on stmt: $phi464.2 = $phi360.1
2021-05-28 23:59:31,895 on stmt: branch $360.4, 362, 464
2021-05-28 23:59:31,895 ==== SSA block rewrite pass on 362
2021-05-28 23:59:31,895 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903DD8>
2021-05-28 23:59:31,895 on stmt: k = $phi362.1
2021-05-28 23:59:31,895 on stmt: $362.6 = k * index_step
2021-05-28 23:59:31,895 on stmt: $362.7 = offset.2 + $362.6
2021-05-28 23:59:31,895 on stmt: $362.8 = getitem(value=interp_win, index=$362.7, fn=<built-in function getitem>)
2021-05-28 23:59:31,895 on stmt: $362.14 = k * index_step
2021-05-28 23:59:31,895 on stmt: $362.15 = offset.2 + $362.14
2021-05-28 23:59:31,895 on stmt: $362.16 = getitem(value=interp_delta, index=$362.15, fn=<built-in function getitem>)
2021-05-28 23:59:31,895 on stmt: $362.17 = eta.2 * $362.16
2021-05-28 23:59:31,895 on stmt: weight.2 = $362.8 + $362.17
2021-05-28 23:59:31,896 on stmt: jump 400
2021-05-28 23:59:31,896 ==== SSA block rewrite pass on 400
2021-05-28 23:59:31,896 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903DD8>
2021-05-28 23:59:31,896 on stmt: jump 402
2021-05-28 23:59:31,896 ==== SSA block rewrite pass on 402
2021-05-28 23:59:31,896 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903DD8>
2021-05-28 23:59:31,896 on stmt: $402.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,896 on stmt: $402.3 = call $402.1(n_channels, func=$402.1, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-28 23:59:31,896 on stmt: $402.4 = getiter(value=$402.3)
2021-05-28 23:59:31,896 on stmt: $phi410.1 = $402.4
2021-05-28 23:59:31,896 on stmt: jump 410
2021-05-28 23:59:31,896 ==== SSA block rewrite pass on 410
2021-05-28 23:59:31,896 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903DD8>
2021-05-28 23:59:31,896 on stmt: $410.2 = iternext(value=$phi410.1)
2021-05-28 23:59:31,896 on stmt: $410.3 = pair_first(value=$410.2)
2021-05-28 23:59:31,896 on stmt: $410.4 = pair_second(value=$410.2)
2021-05-28 23:59:31,896 on stmt: $phi412.1 = $410.3
2021-05-28 23:59:31,896 on stmt: $phi458.1 = $410.3
2021-05-28 23:59:31,896 on stmt: $phi458.2 = $phi410.1
2021-05-28 23:59:31,896 on stmt: branch $410.4, 412, 458
2021-05-28 23:59:31,897 ==== SSA block rewrite pass on 412
2021-05-28 23:59:31,897 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903DD8>
2021-05-28 23:59:31,897 on stmt: j.1 = $phi412.1
2021-05-28 23:59:31,897 on stmt: $412.5 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-28 23:59:31,897 find_def var='j' stmt=$412.5 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-28 23:59:31,897 replaced with: $412.5 = build_tuple(items=[Var(t, interpn.py:27), Var(j.1, interpn.py:63)])
2021-05-28 23:59:31,897 on stmt: $412.8 = getitem(value=y, index=$412.5, fn=<built-in function getitem>)
2021-05-28 23:59:31,897 on stmt: $412.13 = n.1 + k
2021-05-28 23:59:31,897 on stmt: $const412.14 = const(int, 1)
2021-05-28 23:59:31,897 on stmt: $412.15 = $412.13 + $const412.14
2021-05-28 23:59:31,897 on stmt: $412.17 = build_tuple(items=[Var($412.15, interpn.py:64), Var(j, interpn.py:46)])
2021-05-28 23:59:31,897 find_def var='j' stmt=$412.17 = build_tuple(items=[Var($412.15, interpn.py:64), Var(j, interpn.py:46)])
2021-05-28 23:59:31,897 replaced with: $412.17 = build_tuple(items=[Var($412.15, interpn.py:64), Var(j.1, interpn.py:63)])
2021-05-28 23:59:31,897 on stmt: $412.18 = getitem(value=x, index=$412.17, fn=<built-in function getitem>)
2021-05-28 23:59:31,897 on stmt: $412.19 = weight.2 * $412.18
2021-05-28 23:59:31,897 on stmt: $412.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$412.8, rhs=$412.19, static_lhs=Undefined, static_rhs=Undefined)
2021-05-28 23:59:31,897 on stmt: y[$412.5] = $412.20
2021-05-28 23:59:31,897 on stmt: jump 410
2021-05-28 23:59:31,897 ==== SSA block rewrite pass on 458
2021-05-28 23:59:31,897 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903DD8>
2021-05-28 23:59:31,897 on stmt: jump 460
2021-05-28 23:59:31,897 ==== SSA block rewrite pass on 460
2021-05-28 23:59:31,897 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903DD8>
2021-05-28 23:59:31,897 on stmt: jump 360
2021-05-28 23:59:31,897 ==== SSA block rewrite pass on 464
2021-05-28 23:59:31,897 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903DD8>
2021-05-28 23:59:31,897 on stmt: jump 466
2021-05-28 23:59:31,897 ==== SSA block rewrite pass on 466
2021-05-28 23:59:31,897 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903DD8>
2021-05-28 23:59:31,897 on stmt: $466.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register.2, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
2021-05-28 23:59:31,898 on stmt: time_register.1 = $466.3
2021-05-28 23:59:31,898 on stmt: jump 112
2021-05-28 23:59:31,898 ==== SSA block rewrite pass on 476
2021-05-28 23:59:31,898 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903DD8>
2021-05-28 23:59:31,898 on stmt: jump 478
2021-05-28 23:59:31,898 ==== SSA block rewrite pass on 478
2021-05-28 23:59:31,898 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903DD8>
2021-05-28 23:59:31,898 on stmt: $const478.1 = const(NoneType, None)
2021-05-28 23:59:31,898 on stmt: $478.2 = cast(value=$const478.1)
2021-05-28 23:59:31,898 on stmt: return $478.2
2021-05-28 23:59:31,898 Fix SSA violator on var frac
2021-05-28 23:59:31,898 ==== SSA block rewrite pass on 0
2021-05-28 23:59:31,898 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88C8358>
2021-05-28 23:59:31,898 on stmt: x = arg(0, name=x)
2021-05-28 23:59:31,898 on stmt: y = arg(1, name=y)
2021-05-28 23:59:31,898 on stmt: sample_ratio = arg(2, name=sample_ratio)
2021-05-28 23:59:31,898 on stmt: interp_win = arg(3, name=interp_win)
2021-05-28 23:59:31,898 on stmt: interp_delta = arg(4, name=interp_delta)
2021-05-28 23:59:31,898 on stmt: num_table = arg(5, name=num_table)
2021-05-28 23:59:31,898 on stmt: $0.1 = global(min: <built-in function min>)
2021-05-28 23:59:31,898 on stmt: $const0.2 = const(float, 1.0)
2021-05-28 23:59:31,899 on stmt: scale = call $0.1($const0.2, sample_ratio, func=$0.1, args=[Var($const0.2, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None)
2021-05-28 23:59:31,899 on stmt: $const0.5 = const(float, 1.0)
2021-05-28 23:59:31,899 on stmt: time_increment = $const0.5 / sample_ratio
2021-05-28 23:59:31,899 on stmt: $0.8 = global(int: <class 'int'>)
2021-05-28 23:59:31,899 on stmt: $0.11 = scale * num_table
2021-05-28 23:59:31,899 on stmt: index_step = call $0.8($0.11, func=$0.8, args=[Var($0.11, interpn.py:12)], kws=(), vararg=None)
2021-05-28 23:59:31,899 on stmt: time_register = const(float, 0.0)
2021-05-28 23:59:31,899 on stmt: n = const(int, 0)
2021-05-28 23:59:31,899 on stmt: frac = const(float, 0.0)
2021-05-28 23:59:31,899 first assign: frac
2021-05-28 23:59:31,899 replaced with: frac = const(float, 0.0)
2021-05-28 23:59:31,899 on stmt: index_frac = const(float, 0.0)
2021-05-28 23:59:31,899 on stmt: offset = const(int, 0)
2021-05-28 23:59:31,899 on stmt: eta = const(float, 0.0)
2021-05-28 23:59:31,899 on stmt: weight = const(float, 0.0)
2021-05-28 23:59:31,899 on stmt: $0.21 = getattr(value=interp_win, attr=shape)
2021-05-28 23:59:31,899 on stmt: $const0.22 = const(int, 0)
2021-05-28 23:59:31,899 on stmt: nwin = static_getitem(value=$0.21, index=0, index_var=$const0.22, fn=<built-in function getitem>)
2021-05-28 23:59:31,899 on stmt: $0.25 = getattr(value=x, attr=shape)
2021-05-28 23:59:31,899 on stmt: $const0.26 = const(int, 0)
2021-05-28 23:59:31,900 on stmt: n_orig = static_getitem(value=$0.25, index=0, index_var=$const0.26, fn=<built-in function getitem>)
2021-05-28 23:59:31,900 on stmt: $0.29 = getattr(value=y, attr=shape)
2021-05-28 23:59:31,900 on stmt: $const0.30 = const(int, 0)
2021-05-28 23:59:31,900 on stmt: n_out = static_getitem(value=$0.29, index=0, index_var=$const0.30, fn=<built-in function getitem>)
2021-05-28 23:59:31,900 on stmt: $0.33 = getattr(value=y, attr=shape)
2021-05-28 23:59:31,900 on stmt: $const0.34 = const(int, 1)
2021-05-28 23:59:31,900 on stmt: n_channels = static_getitem(value=$0.33, index=1, index_var=$const0.34, fn=<built-in function getitem>)
2021-05-28 23:59:31,900 on stmt: jump 100
2021-05-28 23:59:31,900 ==== SSA block rewrite pass on 100
2021-05-28 23:59:31,900 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88C8358>
2021-05-28 23:59:31,900 on stmt: jump 104
2021-05-28 23:59:31,900 ==== SSA block rewrite pass on 104
2021-05-28 23:59:31,900 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88C8358>
2021-05-28 23:59:31,900 on stmt: $104.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,900 on stmt: $104.3 = call $104.1(n_out, func=$104.1, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None)
2021-05-28 23:59:31,900 on stmt: $104.4 = getiter(value=$104.3)
2021-05-28 23:59:31,900 on stmt: $phi112.1 = $104.4
2021-05-28 23:59:31,900 on stmt: jump 112
2021-05-28 23:59:31,900 ==== SSA block rewrite pass on 112
2021-05-28 23:59:31,900 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88C8358>
2021-05-28 23:59:31,900 on stmt: time_register.2 = phi(incoming_values=[Var(time_register, interpn.py:13), Var(time_register.1, interpn.py:67)], incoming_blocks=[104, 466])
2021-05-28 23:59:31,900 on stmt: $112.2 = iternext(value=$phi112.1)
2021-05-28 23:59:31,900 on stmt: $112.3 = pair_first(value=$112.2)
2021-05-28 23:59:31,900 on stmt: $112.4 = pair_second(value=$112.2)
2021-05-28 23:59:31,901 on stmt: $phi116.1 = $112.3
2021-05-28 23:59:31,901 on stmt: $phi476.1 = $112.3
2021-05-28 23:59:31,901 on stmt: $phi476.2 = $phi112.1
2021-05-28 23:59:31,901 on stmt: branch $112.4, 116, 476
2021-05-28 23:59:31,901 ==== SSA block rewrite pass on 116
2021-05-28 23:59:31,901 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88C8358>
2021-05-28 23:59:31,901 on stmt: t = $phi116.1
2021-05-28 23:59:31,901 on stmt: $116.2 = global(int: <class 'int'>)
2021-05-28 23:59:31,901 on stmt: n.1 = call $116.2(time_register.2, func=$116.2, args=[Var(time_register.2, interpn.py:27)], kws=(), vararg=None)
2021-05-28 23:59:31,901 on stmt: $116.8 = time_register.2 - n.1
2021-05-28 23:59:31,901 on stmt: frac = scale * $116.8
2021-05-28 23:59:31,901 replaced with: frac.1 = scale * $116.8
2021-05-28 23:59:31,901 on stmt: index_frac.1 = frac * num_table
2021-05-28 23:59:31,901 on stmt: $116.13 = global(int: <class 'int'>)
2021-05-28 23:59:31,901 on stmt: offset.1 = call $116.13(index_frac.1, func=$116.13, args=[Var(index_frac.1, interpn.py:35)], kws=(), vararg=None)
2021-05-28 23:59:31,901 on stmt: eta.1 = index_frac.1 - offset.1
2021-05-28 23:59:31,901 on stmt: $116.19 = global(min: <built-in function min>)
2021-05-28 23:59:31,901 on stmt: $const116.21 = const(int, 1)
2021-05-28 23:59:31,901 on stmt: $116.22 = n.1 + $const116.21
2021-05-28 23:59:31,901 on stmt: $116.25 = nwin - offset.1
2021-05-28 23:59:31,901 on stmt: $116.27 = $116.25 // index_step
2021-05-28 23:59:31,901 on stmt: i_max = call $116.19($116.22, $116.27, func=$116.19, args=[Var($116.22, interpn.py:42), Var($116.27, interpn.py:42)], kws=(), vararg=None)
2021-05-28 23:59:31,901 on stmt: jump 184
2021-05-28 23:59:31,902 ==== SSA block rewrite pass on 184
2021-05-28 23:59:31,902 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88C8358>
2021-05-28 23:59:31,902 on stmt: jump 186
2021-05-28 23:59:31,902 ==== SSA block rewrite pass on 186
2021-05-28 23:59:31,902 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88C8358>
2021-05-28 23:59:31,902 on stmt: $186.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,902 on stmt: $186.3 = call $186.1(i_max, func=$186.1, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None)
2021-05-28 23:59:31,902 on stmt: $186.4 = getiter(value=$186.3)
2021-05-28 23:59:31,902 on stmt: $phi194.1 = $186.4
2021-05-28 23:59:31,902 on stmt: jump 194
2021-05-28 23:59:31,902 ==== SSA block rewrite pass on 194
2021-05-28 23:59:31,902 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88C8358>
2021-05-28 23:59:31,902 on stmt: $194.2 = iternext(value=$phi194.1)
2021-05-28 23:59:31,902 on stmt: $194.3 = pair_first(value=$194.2)
2021-05-28 23:59:31,902 on stmt: $194.4 = pair_second(value=$194.2)
2021-05-28 23:59:31,902 on stmt: $phi196.1 = $194.3
2021-05-28 23:59:31,902 on stmt: $phi290.1 = $194.3
2021-05-28 23:59:31,902 on stmt: $phi290.2 = $phi194.1
2021-05-28 23:59:31,902 on stmt: branch $194.4, 196, 290
2021-05-28 23:59:31,902 ==== SSA block rewrite pass on 196
2021-05-28 23:59:31,902 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88C8358>
2021-05-28 23:59:31,902 on stmt: i = $phi196.1
2021-05-28 23:59:31,903 on stmt: $196.6 = i * index_step
2021-05-28 23:59:31,903 on stmt: $196.7 = offset.1 + $196.6
2021-05-28 23:59:31,903 on stmt: $196.8 = getitem(value=interp_win, index=$196.7, fn=<built-in function getitem>)
2021-05-28 23:59:31,903 on stmt: $196.14 = i * index_step
2021-05-28 23:59:31,903 on stmt: $196.15 = offset.1 + $196.14
2021-05-28 23:59:31,903 on stmt: $196.16 = getitem(value=interp_delta, index=$196.15, fn=<built-in function getitem>)
2021-05-28 23:59:31,903 on stmt: $196.17 = eta.1 * $196.16
2021-05-28 23:59:31,903 on stmt: weight.1 = $196.8 + $196.17
2021-05-28 23:59:31,903 on stmt: jump 234
2021-05-28 23:59:31,903 ==== SSA block rewrite pass on 234
2021-05-28 23:59:31,903 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88C8358>
2021-05-28 23:59:31,903 on stmt: jump 236
2021-05-28 23:59:31,903 ==== SSA block rewrite pass on 236
2021-05-28 23:59:31,903 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88C8358>
2021-05-28 23:59:31,903 on stmt: $236.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,903 on stmt: $236.3 = call $236.1(n_channels, func=$236.1, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-28 23:59:31,903 on stmt: $236.4 = getiter(value=$236.3)
2021-05-28 23:59:31,903 on stmt: $phi244.1 = $236.4
2021-05-28 23:59:31,903 on stmt: jump 244
2021-05-28 23:59:31,903 ==== SSA block rewrite pass on 244
2021-05-28 23:59:31,903 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88C8358>
2021-05-28 23:59:31,903 on stmt: $244.2 = iternext(value=$phi244.1)
2021-05-28 23:59:31,903 on stmt: $244.3 = pair_first(value=$244.2)
2021-05-28 23:59:31,903 on stmt: $244.4 = pair_second(value=$244.2)
2021-05-28 23:59:31,904 on stmt: $phi246.1 = $244.3
2021-05-28 23:59:31,904 on stmt: $phi286.1 = $244.3
2021-05-28 23:59:31,904 on stmt: $phi286.2 = $phi244.1
2021-05-28 23:59:31,904 on stmt: branch $244.4, 246, 286
2021-05-28 23:59:31,904 ==== SSA block rewrite pass on 246
2021-05-28 23:59:31,904 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88C8358>
2021-05-28 23:59:31,904 on stmt: j = $phi246.1
2021-05-28 23:59:31,904 on stmt: $246.5 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-28 23:59:31,904 on stmt: $246.8 = getitem(value=y, index=$246.5, fn=<built-in function getitem>)
2021-05-28 23:59:31,904 on stmt: $246.13 = n.1 - i
2021-05-28 23:59:31,904 on stmt: $246.15 = build_tuple(items=[Var($246.13, interpn.py:47), Var(j, interpn.py:46)])
2021-05-28 23:59:31,904 on stmt: $246.16 = getitem(value=x, index=$246.15, fn=<built-in function getitem>)
2021-05-28 23:59:31,904 on stmt: $246.17 = weight.1 * $246.16
2021-05-28 23:59:31,904 on stmt: $246.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$246.8, rhs=$246.17, static_lhs=Undefined, static_rhs=Undefined)
2021-05-28 23:59:31,905 on stmt: y[$246.5] = $246.18
2021-05-28 23:59:31,905 on stmt: jump 244
2021-05-28 23:59:31,905 ==== SSA block rewrite pass on 286
2021-05-28 23:59:31,905 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88C8358>
2021-05-28 23:59:31,905 on stmt: jump 288
2021-05-28 23:59:31,905 ==== SSA block rewrite pass on 288
2021-05-28 23:59:31,905 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88C8358>
2021-05-28 23:59:31,905 on stmt: jump 194
2021-05-28 23:59:31,905 ==== SSA block rewrite pass on 290
2021-05-28 23:59:31,905 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88C8358>
2021-05-28 23:59:31,905 on stmt: jump 292
2021-05-28 23:59:31,905 ==== SSA block rewrite pass on 292
2021-05-28 23:59:31,905 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88C8358>
2021-05-28 23:59:31,905 on stmt: $292.3 = scale - frac
2021-05-28 23:59:31,905 on stmt: frac = $292.3
2021-05-28 23:59:31,905 replaced with: frac.2 = $292.3
2021-05-28 23:59:31,905 on stmt: index_frac.2 = frac * num_table
2021-05-28 23:59:31,905 on stmt: $292.7 = global(int: <class 'int'>)
2021-05-28 23:59:31,906 on stmt: offset.2 = call $292.7(index_frac.2, func=$292.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None)
2021-05-28 23:59:31,906 on stmt: eta.2 = index_frac.2 - offset.2
2021-05-28 23:59:31,906 on stmt: $292.13 = global(min: <built-in function min>)
2021-05-28 23:59:31,906 on stmt: $292.16 = n_orig - n.1
2021-05-28 23:59:31,906 on stmt: $const292.17 = const(int, 1)
2021-05-28 23:59:31,906 on stmt: $292.18 = $292.16 - $const292.17
2021-05-28 23:59:31,906 on stmt: $292.21 = nwin - offset.2
2021-05-28 23:59:31,906 on stmt: $292.23 = $292.21 // index_step
2021-05-28 23:59:31,906 on stmt: k_max = call $292.13($292.18, $292.23, func=$292.13, args=[Var($292.18, interpn.py:60), Var($292.23, interpn.py:60)], kws=(), vararg=None)
2021-05-28 23:59:31,906 on stmt: jump 350
2021-05-28 23:59:31,906 ==== SSA block rewrite pass on 350
2021-05-28 23:59:31,906 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88C8358>
2021-05-28 23:59:31,906 on stmt: jump 352
2021-05-28 23:59:31,906 ==== SSA block rewrite pass on 352
2021-05-28 23:59:31,906 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88C8358>
2021-05-28 23:59:31,906 on stmt: $352.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,906 on stmt: $352.3 = call $352.1(k_max, func=$352.1, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None)
2021-05-28 23:59:31,906 on stmt: $352.4 = getiter(value=$352.3)
2021-05-28 23:59:31,906 on stmt: $phi360.1 = $352.4
2021-05-28 23:59:31,907 on stmt: jump 360
2021-05-28 23:59:31,907 ==== SSA block rewrite pass on 360
2021-05-28 23:59:31,907 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88C8358>
2021-05-28 23:59:31,907 on stmt: $360.2 = iternext(value=$phi360.1)
2021-05-28 23:59:31,907 on stmt: $360.3 = pair_first(value=$360.2)
2021-05-28 23:59:31,907 on stmt: $360.4 = pair_second(value=$360.2)
2021-05-28 23:59:31,907 on stmt: $phi362.1 = $360.3
2021-05-28 23:59:31,907 on stmt: $phi464.1 = $360.3
2021-05-28 23:59:31,907 on stmt: $phi464.2 = $phi360.1
2021-05-28 23:59:31,907 on stmt: branch $360.4, 362, 464
2021-05-28 23:59:31,907 ==== SSA block rewrite pass on 362
2021-05-28 23:59:31,907 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88C8358>
2021-05-28 23:59:31,907 on stmt: k = $phi362.1
2021-05-28 23:59:31,907 on stmt: $362.6 = k * index_step
2021-05-28 23:59:31,907 on stmt: $362.7 = offset.2 + $362.6
2021-05-28 23:59:31,907 on stmt: $362.8 = getitem(value=interp_win, index=$362.7, fn=<built-in function getitem>)
2021-05-28 23:59:31,907 on stmt: $362.14 = k * index_step
2021-05-28 23:59:31,907 on stmt: $362.15 = offset.2 + $362.14
2021-05-28 23:59:31,907 on stmt: $362.16 = getitem(value=interp_delta, index=$362.15, fn=<built-in function getitem>)
2021-05-28 23:59:31,907 on stmt: $362.17 = eta.2 * $362.16
2021-05-28 23:59:31,907 on stmt: weight.2 = $362.8 + $362.17
2021-05-28 23:59:31,907 on stmt: jump 400
2021-05-28 23:59:31,907 ==== SSA block rewrite pass on 400
2021-05-28 23:59:31,907 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88C8358>
2021-05-28 23:59:31,908 on stmt: jump 402
2021-05-28 23:59:31,908 ==== SSA block rewrite pass on 402
2021-05-28 23:59:31,908 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88C8358>
2021-05-28 23:59:31,908 on stmt: $402.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,908 on stmt: $402.3 = call $402.1(n_channels, func=$402.1, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-28 23:59:31,908 on stmt: $402.4 = getiter(value=$402.3)
2021-05-28 23:59:31,908 on stmt: $phi410.1 = $402.4
2021-05-28 23:59:31,908 on stmt: jump 410
2021-05-28 23:59:31,908 ==== SSA block rewrite pass on 410
2021-05-28 23:59:31,908 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88C8358>
2021-05-28 23:59:31,908 on stmt: $410.2 = iternext(value=$phi410.1)
2021-05-28 23:59:31,908 on stmt: $410.3 = pair_first(value=$410.2)
2021-05-28 23:59:31,908 on stmt: $410.4 = pair_second(value=$410.2)
2021-05-28 23:59:31,908 on stmt: $phi412.1 = $410.3
2021-05-28 23:59:31,908 on stmt: $phi458.1 = $410.3
2021-05-28 23:59:31,908 on stmt: $phi458.2 = $phi410.1
2021-05-28 23:59:31,908 on stmt: branch $410.4, 412, 458
2021-05-28 23:59:31,908 ==== SSA block rewrite pass on 412
2021-05-28 23:59:31,908 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88C8358>
2021-05-28 23:59:31,908 on stmt: j.1 = $phi412.1
2021-05-28 23:59:31,908 on stmt: $412.5 = build_tuple(items=[Var(t, interpn.py:27), Var(j.1, interpn.py:63)])
2021-05-28 23:59:31,908 on stmt: $412.8 = getitem(value=y, index=$412.5, fn=<built-in function getitem>)
2021-05-28 23:59:31,909 on stmt: $412.13 = n.1 + k
2021-05-28 23:59:31,909 on stmt: $const412.14 = const(int, 1)
2021-05-28 23:59:31,909 on stmt: $412.15 = $412.13 + $const412.14
2021-05-28 23:59:31,909 on stmt: $412.17 = build_tuple(items=[Var($412.15, interpn.py:64), Var(j.1, interpn.py:63)])
2021-05-28 23:59:31,909 on stmt: $412.18 = getitem(value=x, index=$412.17, fn=<built-in function getitem>)
2021-05-28 23:59:31,909 on stmt: $412.19 = weight.2 * $412.18
2021-05-28 23:59:31,909 on stmt: $412.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$412.8, rhs=$412.19, static_lhs=Undefined, static_rhs=Undefined)
2021-05-28 23:59:31,909 on stmt: y[$412.5] = $412.20
2021-05-28 23:59:31,909 on stmt: jump 410
2021-05-28 23:59:31,909 ==== SSA block rewrite pass on 458
2021-05-28 23:59:31,909 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88C8358>
2021-05-28 23:59:31,909 on stmt: jump 460
2021-05-28 23:59:31,909 ==== SSA block rewrite pass on 460
2021-05-28 23:59:31,909 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88C8358>
2021-05-28 23:59:31,909 on stmt: jump 360
2021-05-28 23:59:31,909 ==== SSA block rewrite pass on 464
2021-05-28 23:59:31,909 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88C8358>
2021-05-28 23:59:31,909 on stmt: jump 466
2021-05-28 23:59:31,909 ==== SSA block rewrite pass on 466
2021-05-28 23:59:31,909 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88C8358>
2021-05-28 23:59:31,910 on stmt: $466.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register.2, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
2021-05-28 23:59:31,910 on stmt: time_register.1 = $466.3
2021-05-28 23:59:31,910 on stmt: jump 112
2021-05-28 23:59:31,910 ==== SSA block rewrite pass on 476
2021-05-28 23:59:31,910 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88C8358>
2021-05-28 23:59:31,910 on stmt: jump 478
2021-05-28 23:59:31,910 ==== SSA block rewrite pass on 478
2021-05-28 23:59:31,910 Running <numba.core.ssa._FreshVarHandler object at 0x00000168E88C8358>
2021-05-28 23:59:31,910 on stmt: $const478.1 = const(NoneType, None)
2021-05-28 23:59:31,910 on stmt: $478.2 = cast(value=$const478.1)
2021-05-28 23:59:31,910 on stmt: return $478.2
2021-05-28 23:59:31,910 Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x00000168E88C8080>],
             116: [<numba.core.ir.Assign object at 0x00000168E88B6438>],
             292: [<numba.core.ir.Assign object at 0x00000168E8903438>]})
2021-05-28 23:59:31,910 ==== SSA block rewrite pass on 0
2021-05-28 23:59:31,911 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903860>
2021-05-28 23:59:31,911 on stmt: x = arg(0, name=x)
2021-05-28 23:59:31,911 on stmt: y = arg(1, name=y)
2021-05-28 23:59:31,911 on stmt: sample_ratio = arg(2, name=sample_ratio)
2021-05-28 23:59:31,911 on stmt: interp_win = arg(3, name=interp_win)
2021-05-28 23:59:31,911 on stmt: interp_delta = arg(4, name=interp_delta)
2021-05-28 23:59:31,911 on stmt: num_table = arg(5, name=num_table)
2021-05-28 23:59:31,911 on stmt: $0.1 = global(min: <built-in function min>)
2021-05-28 23:59:31,911 on stmt: $const0.2 = const(float, 1.0)
2021-05-28 23:59:31,911 on stmt: scale = call $0.1($const0.2, sample_ratio, func=$0.1, args=[Var($const0.2, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None)
2021-05-28 23:59:31,911 on stmt: $const0.5 = const(float, 1.0)
2021-05-28 23:59:31,911 on stmt: time_increment = $const0.5 / sample_ratio
2021-05-28 23:59:31,911 on stmt: $0.8 = global(int: <class 'int'>)
2021-05-28 23:59:31,911 on stmt: $0.11 = scale * num_table
2021-05-28 23:59:31,911 on stmt: index_step = call $0.8($0.11, func=$0.8, args=[Var($0.11, interpn.py:12)], kws=(), vararg=None)
2021-05-28 23:59:31,911 on stmt: time_register = const(float, 0.0)
2021-05-28 23:59:31,911 on stmt: n = const(int, 0)
2021-05-28 23:59:31,911 on stmt: frac = const(float, 0.0)
2021-05-28 23:59:31,911 on stmt: index_frac = const(float, 0.0)
2021-05-28 23:59:31,911 on stmt: offset = const(int, 0)
2021-05-28 23:59:31,911 on stmt: eta = const(float, 0.0)
2021-05-28 23:59:31,912 on stmt: weight = const(float, 0.0)
2021-05-28 23:59:31,912 on stmt: $0.21 = getattr(value=interp_win, attr=shape)
2021-05-28 23:59:31,912 on stmt: $const0.22 = const(int, 0)
2021-05-28 23:59:31,912 on stmt: nwin = static_getitem(value=$0.21, index=0, index_var=$const0.22, fn=<built-in function getitem>)
2021-05-28 23:59:31,912 on stmt: $0.25 = getattr(value=x, attr=shape)
2021-05-28 23:59:31,912 on stmt: $const0.26 = const(int, 0)
2021-05-28 23:59:31,912 on stmt: n_orig = static_getitem(value=$0.25, index=0, index_var=$const0.26, fn=<built-in function getitem>)
2021-05-28 23:59:31,912 on stmt: $0.29 = getattr(value=y, attr=shape)
2021-05-28 23:59:31,912 on stmt: $const0.30 = const(int, 0)
2021-05-28 23:59:31,912 on stmt: n_out = static_getitem(value=$0.29, index=0, index_var=$const0.30, fn=<built-in function getitem>)
2021-05-28 23:59:31,912 on stmt: $0.33 = getattr(value=y, attr=shape)
2021-05-28 23:59:31,912 on stmt: $const0.34 = const(int, 1)
2021-05-28 23:59:31,912 on stmt: n_channels = static_getitem(value=$0.33, index=1, index_var=$const0.34, fn=<built-in function getitem>)
2021-05-28 23:59:31,912 on stmt: jump 100
2021-05-28 23:59:31,912 ==== SSA block rewrite pass on 100
2021-05-28 23:59:31,912 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903860>
2021-05-28 23:59:31,912 on stmt: jump 104
2021-05-28 23:59:31,912 ==== SSA block rewrite pass on 104
2021-05-28 23:59:31,912 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903860>
2021-05-28 23:59:31,912 on stmt: $104.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,912 on stmt: $104.3 = call $104.1(n_out, func=$104.1, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None)
2021-05-28 23:59:31,913 on stmt: $104.4 = getiter(value=$104.3)
2021-05-28 23:59:31,913 on stmt: $phi112.1 = $104.4
2021-05-28 23:59:31,913 on stmt: jump 112
2021-05-28 23:59:31,913 ==== SSA block rewrite pass on 112
2021-05-28 23:59:31,913 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903860>
2021-05-28 23:59:31,913 on stmt: time_register.2 = phi(incoming_values=[Var(time_register, interpn.py:13), Var(time_register.1, interpn.py:67)], incoming_blocks=[104, 466])
2021-05-28 23:59:31,913 on stmt: $112.2 = iternext(value=$phi112.1)
2021-05-28 23:59:31,913 on stmt: $112.3 = pair_first(value=$112.2)
2021-05-28 23:59:31,913 on stmt: $112.4 = pair_second(value=$112.2)
2021-05-28 23:59:31,913 on stmt: $phi116.1 = $112.3
2021-05-28 23:59:31,913 on stmt: $phi476.1 = $112.3
2021-05-28 23:59:31,913 on stmt: $phi476.2 = $phi112.1
2021-05-28 23:59:31,913 on stmt: branch $112.4, 116, 476
2021-05-28 23:59:31,913 ==== SSA block rewrite pass on 116
2021-05-28 23:59:31,913 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903860>
2021-05-28 23:59:31,913 on stmt: t = $phi116.1
2021-05-28 23:59:31,913 on stmt: $116.2 = global(int: <class 'int'>)
2021-05-28 23:59:31,913 on stmt: n.1 = call $116.2(time_register.2, func=$116.2, args=[Var(time_register.2, interpn.py:27)], kws=(), vararg=None)
2021-05-28 23:59:31,913 on stmt: $116.8 = time_register.2 - n.1
2021-05-28 23:59:31,913 on stmt: frac.1 = scale * $116.8
2021-05-28 23:59:31,913 on stmt: index_frac.1 = frac * num_table
2021-05-28 23:59:31,914 find_def var='frac' stmt=index_frac.1 = frac * num_table
2021-05-28 23:59:31,914 replaced with: index_frac.1 = frac.1 * num_table
2021-05-28 23:59:31,914 on stmt: $116.13 = global(int: <class 'int'>)
2021-05-28 23:59:31,914 on stmt: offset.1 = call $116.13(index_frac.1, func=$116.13, args=[Var(index_frac.1, interpn.py:35)], kws=(), vararg=None)
2021-05-28 23:59:31,914 on stmt: eta.1 = index_frac.1 - offset.1
2021-05-28 23:59:31,914 on stmt: $116.19 = global(min: <built-in function min>)
2021-05-28 23:59:31,914 on stmt: $const116.21 = const(int, 1)
2021-05-28 23:59:31,914 on stmt: $116.22 = n.1 + $const116.21
2021-05-28 23:59:31,914 on stmt: $116.25 = nwin - offset.1
2021-05-28 23:59:31,914 on stmt: $116.27 = $116.25 // index_step
2021-05-28 23:59:31,914 on stmt: i_max = call $116.19($116.22, $116.27, func=$116.19, args=[Var($116.22, interpn.py:42), Var($116.27, interpn.py:42)], kws=(), vararg=None)
2021-05-28 23:59:31,914 on stmt: jump 184
2021-05-28 23:59:31,914 ==== SSA block rewrite pass on 184
2021-05-28 23:59:31,914 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903860>
2021-05-28 23:59:31,914 on stmt: jump 186
2021-05-28 23:59:31,914 ==== SSA block rewrite pass on 186
2021-05-28 23:59:31,914 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903860>
2021-05-28 23:59:31,914 on stmt: $186.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,914 on stmt: $186.3 = call $186.1(i_max, func=$186.1, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None)
2021-05-28 23:59:31,915 on stmt: $186.4 = getiter(value=$186.3)
2021-05-28 23:59:31,915 on stmt: $phi194.1 = $186.4
2021-05-28 23:59:31,915 on stmt: jump 194
2021-05-28 23:59:31,915 ==== SSA block rewrite pass on 194
2021-05-28 23:59:31,915 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903860>
2021-05-28 23:59:31,915 on stmt: $194.2 = iternext(value=$phi194.1)
2021-05-28 23:59:31,915 on stmt: $194.3 = pair_first(value=$194.2)
2021-05-28 23:59:31,915 on stmt: $194.4 = pair_second(value=$194.2)
2021-05-28 23:59:31,915 on stmt: $phi196.1 = $194.3
2021-05-28 23:59:31,915 on stmt: $phi290.1 = $194.3
2021-05-28 23:59:31,915 on stmt: $phi290.2 = $phi194.1
2021-05-28 23:59:31,915 on stmt: branch $194.4, 196, 290
2021-05-28 23:59:31,915 ==== SSA block rewrite pass on 196
2021-05-28 23:59:31,915 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903860>
2021-05-28 23:59:31,915 on stmt: i = $phi196.1
2021-05-28 23:59:31,915 on stmt: $196.6 = i * index_step
2021-05-28 23:59:31,915 on stmt: $196.7 = offset.1 + $196.6
2021-05-28 23:59:31,915 on stmt: $196.8 = getitem(value=interp_win, index=$196.7, fn=<built-in function getitem>)
2021-05-28 23:59:31,915 on stmt: $196.14 = i * index_step
2021-05-28 23:59:31,915 on stmt: $196.15 = offset.1 + $196.14
2021-05-28 23:59:31,915 on stmt: $196.16 = getitem(value=interp_delta, index=$196.15, fn=<built-in function getitem>)
2021-05-28 23:59:31,915 on stmt: $196.17 = eta.1 * $196.16
2021-05-28 23:59:31,915 on stmt: weight.1 = $196.8 + $196.17
2021-05-28 23:59:31,916 on stmt: jump 234
2021-05-28 23:59:31,916 ==== SSA block rewrite pass on 234
2021-05-28 23:59:31,916 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903860>
2021-05-28 23:59:31,916 on stmt: jump 236
2021-05-28 23:59:31,916 ==== SSA block rewrite pass on 236
2021-05-28 23:59:31,916 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903860>
2021-05-28 23:59:31,916 on stmt: $236.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,916 on stmt: $236.3 = call $236.1(n_channels, func=$236.1, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-28 23:59:31,916 on stmt: $236.4 = getiter(value=$236.3)
2021-05-28 23:59:31,916 on stmt: $phi244.1 = $236.4
2021-05-28 23:59:31,916 on stmt: jump 244
2021-05-28 23:59:31,916 ==== SSA block rewrite pass on 244
2021-05-28 23:59:31,916 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903860>
2021-05-28 23:59:31,916 on stmt: $244.2 = iternext(value=$phi244.1)
2021-05-28 23:59:31,916 on stmt: $244.3 = pair_first(value=$244.2)
2021-05-28 23:59:31,916 on stmt: $244.4 = pair_second(value=$244.2)
2021-05-28 23:59:31,916 on stmt: $phi246.1 = $244.3
2021-05-28 23:59:31,916 on stmt: $phi286.1 = $244.3
2021-05-28 23:59:31,916 on stmt: $phi286.2 = $phi244.1
2021-05-28 23:59:31,916 on stmt: branch $244.4, 246, 286
2021-05-28 23:59:31,917 ==== SSA block rewrite pass on 246
2021-05-28 23:59:31,917 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903860>
2021-05-28 23:59:31,917 on stmt: j = $phi246.1
2021-05-28 23:59:31,917 on stmt: $246.5 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-28 23:59:31,917 on stmt: $246.8 = getitem(value=y, index=$246.5, fn=<built-in function getitem>)
2021-05-28 23:59:31,917 on stmt: $246.13 = n.1 - i
2021-05-28 23:59:31,917 on stmt: $246.15 = build_tuple(items=[Var($246.13, interpn.py:47), Var(j, interpn.py:46)])
2021-05-28 23:59:31,917 on stmt: $246.16 = getitem(value=x, index=$246.15, fn=<built-in function getitem>)
2021-05-28 23:59:31,917 on stmt: $246.17 = weight.1 * $246.16
2021-05-28 23:59:31,917 on stmt: $246.18 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$246.8, rhs=$246.17, static_lhs=Undefined, static_rhs=Undefined)
2021-05-28 23:59:31,917 on stmt: y[$246.5] = $246.18
2021-05-28 23:59:31,917 on stmt: jump 244
2021-05-28 23:59:31,917 ==== SSA block rewrite pass on 286
2021-05-28 23:59:31,917 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903860>
2021-05-28 23:59:31,917 on stmt: jump 288
2021-05-28 23:59:31,917 ==== SSA block rewrite pass on 288
2021-05-28 23:59:31,917 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903860>
2021-05-28 23:59:31,917 on stmt: jump 194
2021-05-28 23:59:31,917 ==== SSA block rewrite pass on 290
2021-05-28 23:59:31,917 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903860>
2021-05-28 23:59:31,917 on stmt: jump 292
2021-05-28 23:59:31,917 ==== SSA block rewrite pass on 292
2021-05-28 23:59:31,918 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903860>
2021-05-28 23:59:31,918 on stmt: $292.3 = scale - frac
2021-05-28 23:59:31,918 find_def var='frac' stmt=$292.3 = scale - frac
2021-05-28 23:59:31,918 find_def_from_top label 292
2021-05-28 23:59:31,918 idom 290 from label 292
2021-05-28 23:59:31,918 find_def_from_bottom label 290
2021-05-28 23:59:31,918 find_def_from_top label 290
2021-05-28 23:59:31,918 idom 194 from label 290
2021-05-28 23:59:31,918 find_def_from_bottom label 194
2021-05-28 23:59:31,918 find_def_from_top label 194
2021-05-28 23:59:31,918 idom 186 from label 194
2021-05-28 23:59:31,918 find_def_from_bottom label 186
2021-05-28 23:59:31,918 find_def_from_top label 186
2021-05-28 23:59:31,918 idom 184 from label 186
2021-05-28 23:59:31,918 find_def_from_bottom label 184
2021-05-28 23:59:31,918 find_def_from_top label 184
2021-05-28 23:59:31,918 idom 116 from label 184
2021-05-28 23:59:31,918 find_def_from_bottom label 116
2021-05-28 23:59:31,918 replaced with: $292.3 = scale - frac.1
2021-05-28 23:59:31,918 on stmt: frac.2 = $292.3
2021-05-28 23:59:31,918 on stmt: index_frac.2 = frac * num_table
2021-05-28 23:59:31,918 find_def var='frac' stmt=index_frac.2 = frac * num_table
2021-05-28 23:59:31,919 replaced with: index_frac.2 = frac.2 * num_table
2021-05-28 23:59:31,919 on stmt: $292.7 = global(int: <class 'int'>)
2021-05-28 23:59:31,919 on stmt: offset.2 = call $292.7(index_frac.2, func=$292.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None)
2021-05-28 23:59:31,919 on stmt: eta.2 = index_frac.2 - offset.2
2021-05-28 23:59:31,919 on stmt: $292.13 = global(min: <built-in function min>)
2021-05-28 23:59:31,919 on stmt: $292.16 = n_orig - n.1
2021-05-28 23:59:31,919 on stmt: $const292.17 = const(int, 1)
2021-05-28 23:59:31,919 on stmt: $292.18 = $292.16 - $const292.17
2021-05-28 23:59:31,919 on stmt: $292.21 = nwin - offset.2
2021-05-28 23:59:31,919 on stmt: $292.23 = $292.21 // index_step
2021-05-28 23:59:31,919 on stmt: k_max = call $292.13($292.18, $292.23, func=$292.13, args=[Var($292.18, interpn.py:60), Var($292.23, interpn.py:60)], kws=(), vararg=None)
2021-05-28 23:59:31,919 on stmt: jump 350
2021-05-28 23:59:31,919 ==== SSA block rewrite pass on 350
2021-05-28 23:59:31,919 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903860>
2021-05-28 23:59:31,919 on stmt: jump 352
2021-05-28 23:59:31,919 ==== SSA block rewrite pass on 352
2021-05-28 23:59:31,919 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903860>
2021-05-28 23:59:31,919 on stmt: $352.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,919 on stmt: $352.3 = call $352.1(k_max, func=$352.1, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None)
2021-05-28 23:59:31,920 on stmt: $352.4 = getiter(value=$352.3)
2021-05-28 23:59:31,920 on stmt: $phi360.1 = $352.4
2021-05-28 23:59:31,920 on stmt: jump 360
2021-05-28 23:59:31,920 ==== SSA block rewrite pass on 360
2021-05-28 23:59:31,920 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903860>
2021-05-28 23:59:31,920 on stmt: $360.2 = iternext(value=$phi360.1)
2021-05-28 23:59:31,920 on stmt: $360.3 = pair_first(value=$360.2)
2021-05-28 23:59:31,920 on stmt: $360.4 = pair_second(value=$360.2)
2021-05-28 23:59:31,920 on stmt: $phi362.1 = $360.3
2021-05-28 23:59:31,920 on stmt: $phi464.1 = $360.3
2021-05-28 23:59:31,920 on stmt: $phi464.2 = $phi360.1
2021-05-28 23:59:31,920 on stmt: branch $360.4, 362, 464
2021-05-28 23:59:31,920 ==== SSA block rewrite pass on 362
2021-05-28 23:59:31,920 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903860>
2021-05-28 23:59:31,920 on stmt: k = $phi362.1
2021-05-28 23:59:31,920 on stmt: $362.6 = k * index_step
2021-05-28 23:59:31,920 on stmt: $362.7 = offset.2 + $362.6
2021-05-28 23:59:31,920 on stmt: $362.8 = getitem(value=interp_win, index=$362.7, fn=<built-in function getitem>)
2021-05-28 23:59:31,920 on stmt: $362.14 = k * index_step
2021-05-28 23:59:31,920 on stmt: $362.15 = offset.2 + $362.14
2021-05-28 23:59:31,920 on stmt: $362.16 = getitem(value=interp_delta, index=$362.15, fn=<built-in function getitem>)
2021-05-28 23:59:31,920 on stmt: $362.17 = eta.2 * $362.16
2021-05-28 23:59:31,920 on stmt: weight.2 = $362.8 + $362.17
2021-05-28 23:59:31,921 on stmt: jump 400
2021-05-28 23:59:31,921 ==== SSA block rewrite pass on 400
2021-05-28 23:59:31,921 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903860>
2021-05-28 23:59:31,921 on stmt: jump 402
2021-05-28 23:59:31,921 ==== SSA block rewrite pass on 402
2021-05-28 23:59:31,921 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903860>
2021-05-28 23:59:31,921 on stmt: $402.1 = global(range: <class 'range'>)
2021-05-28 23:59:31,921 on stmt: $402.3 = call $402.1(n_channels, func=$402.1, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-28 23:59:31,921 on stmt: $402.4 = getiter(value=$402.3)
2021-05-28 23:59:31,921 on stmt: $phi410.1 = $402.4
2021-05-28 23:59:31,921 on stmt: jump 410
2021-05-28 23:59:31,921 ==== SSA block rewrite pass on 410
2021-05-28 23:59:31,921 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903860>
2021-05-28 23:59:31,921 on stmt: $410.2 = iternext(value=$phi410.1)
2021-05-28 23:59:31,921 on stmt: $410.3 = pair_first(value=$410.2)
2021-05-28 23:59:31,921 on stmt: $410.4 = pair_second(value=$410.2)
2021-05-28 23:59:31,921 on stmt: $phi412.1 = $410.3
2021-05-28 23:59:31,921 on stmt: $phi458.1 = $410.3
2021-05-28 23:59:31,921 on stmt: $phi458.2 = $phi410.1
2021-05-28 23:59:31,921 on stmt: branch $410.4, 412, 458
2021-05-28 23:59:31,922 ==== SSA block rewrite pass on 412
2021-05-28 23:59:31,922 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903860>
2021-05-28 23:59:31,922 on stmt: j.1 = $phi412.1
2021-05-28 23:59:31,922 on stmt: $412.5 = build_tuple(items=[Var(t, interpn.py:27), Var(j.1, interpn.py:63)])
2021-05-28 23:59:31,922 on stmt: $412.8 = getitem(value=y, index=$412.5, fn=<built-in function getitem>)
2021-05-28 23:59:31,922 on stmt: $412.13 = n.1 + k
2021-05-28 23:59:31,922 on stmt: $const412.14 = const(int, 1)
2021-05-28 23:59:31,922 on stmt: $412.15 = $412.13 + $const412.14
2021-05-28 23:59:31,922 on stmt: $412.17 = build_tuple(items=[Var($412.15, interpn.py:64), Var(j.1, interpn.py:63)])
2021-05-28 23:59:31,922 on stmt: $412.18 = getitem(value=x, index=$412.17, fn=<built-in function getitem>)
2021-05-28 23:59:31,922 on stmt: $412.19 = weight.2 * $412.18
2021-05-28 23:59:31,922 on stmt: $412.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$412.8, rhs=$412.19, static_lhs=Undefined, static_rhs=Undefined)
2021-05-28 23:59:31,922 on stmt: y[$412.5] = $412.20
2021-05-28 23:59:31,922 on stmt: jump 410
2021-05-28 23:59:31,922 ==== SSA block rewrite pass on 458
2021-05-28 23:59:31,922 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903860>
2021-05-28 23:59:31,922 on stmt: jump 460
2021-05-28 23:59:31,922 ==== SSA block rewrite pass on 460
2021-05-28 23:59:31,922 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903860>
2021-05-28 23:59:31,922 on stmt: jump 360
2021-05-28 23:59:31,922 ==== SSA block rewrite pass on 464
2021-05-28 23:59:31,922 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903860>
2021-05-28 23:59:31,923 on stmt: jump 466
2021-05-28 23:59:31,923 ==== SSA block rewrite pass on 466
2021-05-28 23:59:31,923 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903860>
2021-05-28 23:59:31,923 on stmt: $466.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register.2, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
2021-05-28 23:59:31,923 on stmt: time_register.1 = $466.3
2021-05-28 23:59:31,923 on stmt: jump 112
2021-05-28 23:59:31,923 ==== SSA block rewrite pass on 476
2021-05-28 23:59:31,923 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903860>
2021-05-28 23:59:31,923 on stmt: jump 478
2021-05-28 23:59:31,923 ==== SSA block rewrite pass on 478
2021-05-28 23:59:31,923 Running <numba.core.ssa._FixSSAVars object at 0x00000168E8903860>
2021-05-28 23:59:31,923 on stmt: $const478.1 = const(NoneType, None)
2021-05-28 23:59:31,923 on stmt: $478.2 = cast(value=$const478.1)
2021-05-28 23:59:31,923 on stmt: return $478.2
2021-05-28 23:59:35,357 Creating Perceptual Hash for each feature
2021-05-28 23:59:35,369 Creating Perceptual Hash for each feature
2021-05-28 23:59:35,373 Creating Perceptual Hash for each feature
2021-05-28 23:59:35,376 Creating Perceptual Hash for each feature
2021-05-28 23:59:35,378 Checking if the 2 songs are opened
2021-05-28 23:59:35,389 open song 2
2021-05-28 23:59:37,510 subprocess.call(['ffmpeg', '-y', '-f', 'mp3', '-i', 'F:/SBME 3rd/2nd sem/DSP/ShazamLikeApp/Database/Songs/Group03_Song02_Full.mp3', '-acodec', 'pcm_s16le', '-vn', '-f', 'wav', '-'])
2021-05-28 23:59:41,156 Creating Perceptual Hash for each feature
2021-05-28 23:59:41,165 Creating Perceptual Hash for each feature
2021-05-28 23:59:41,169 Creating Perceptual Hash for each feature
2021-05-28 23:59:41,171 Creating Perceptual Hash for each feature
2021-05-28 23:59:41,173 Checking if the 2 songs are opened
2021-05-28 23:59:41,173 Mixing the 2 songs together with 0.0 % of song1 and 100.0 % of song2
2021-05-28 23:59:42,100 Creating Perceptual Hash for each feature
2021-05-28 23:59:42,109 Creating Perceptual Hash for each feature
2021-05-28 23:59:42,112 Creating Perceptual Hash for each feature
2021-05-28 23:59:42,115 Creating Perceptual Hash for each feature
2021-05-28 23:59:42,116 Comparing song with the database songs
2021-05-28 23:59:42,141 Mixing Output
2021-05-28 23:59:51,314 Checking if the 2 songs are opened
2021-05-28 23:59:51,314 Mixing the 2 songs together with 1.0 % of song1 and 99.0 % of song2
2021-05-28 23:59:52,186 Creating Perceptual Hash for each feature
2021-05-28 23:59:52,198 Creating Perceptual Hash for each feature
2021-05-28 23:59:52,202 Creating Perceptual Hash for each feature
2021-05-28 23:59:52,205 Creating Perceptual Hash for each feature
2021-05-28 23:59:52,206 Comparing song with the database songs
2021-05-28 23:59:52,226 Mixing Output
2021-05-28 23:59:52,231 Checking if the 2 songs are opened
2021-05-28 23:59:52,231 Mixing the 2 songs together with 2.0 % of song1 and 98.0 % of song2
2021-05-28 23:59:53,089 Creating Perceptual Hash for each feature
2021-05-28 23:59:53,098 Creating Perceptual Hash for each feature
2021-05-28 23:59:53,101 Creating Perceptual Hash for each feature
2021-05-28 23:59:53,104 Creating Perceptual Hash for each feature
2021-05-28 23:59:53,105 Comparing song with the database songs
2021-05-28 23:59:53,117 Mixing Output
2021-05-28 23:59:54,396 Checking if the 2 songs are opened
2021-05-28 23:59:54,397 Mixing the 2 songs together with 3.0 % of song1 and 97.0 % of song2
2021-05-28 23:59:55,281 Creating Perceptual Hash for each feature
2021-05-28 23:59:55,291 Creating Perceptual Hash for each feature
2021-05-28 23:59:55,294 Creating Perceptual Hash for each feature
2021-05-28 23:59:55,296 Creating Perceptual Hash for each feature
2021-05-28 23:59:55,298 Comparing song with the database songs
2021-05-28 23:59:55,310 Mixing Output
2021-05-28 23:59:55,315 Checking if the 2 songs are opened
2021-05-28 23:59:55,315 Mixing the 2 songs together with 5.0 % of song1 and 95.0 % of song2
2021-05-28 23:59:56,188 Creating Perceptual Hash for each feature
2021-05-28 23:59:56,197 Creating Perceptual Hash for each feature
2021-05-28 23:59:56,200 Creating Perceptual Hash for each feature
2021-05-28 23:59:56,203 Creating Perceptual Hash for each feature
2021-05-28 23:59:56,204 Comparing song with the database songs
2021-05-28 23:59:56,218 Mixing Output
2021-05-28 23:59:56,223 Checking if the 2 songs are opened
2021-05-28 23:59:56,223 Mixing the 2 songs together with 9.0 % of song1 and 91.0 % of song2
2021-05-28 23:59:57,085 Creating Perceptual Hash for each feature
2021-05-28 23:59:57,568 Creating Perceptual Hash for each feature
2021-05-28 23:59:57,574 Creating Perceptual Hash for each feature
2021-05-28 23:59:57,577 Creating Perceptual Hash for each feature
2021-05-28 23:59:57,579 Comparing song with the database songs
2021-05-28 23:59:57,592 Mixing Output
2021-05-28 23:59:57,598 Checking if the 2 songs are opened
2021-05-28 23:59:57,598 Mixing the 2 songs together with 11.0 % of song1 and 89.0 % of song2
2021-05-28 23:59:58,478 Creating Perceptual Hash for each feature
2021-05-28 23:59:58,487 Creating Perceptual Hash for each feature
2021-05-28 23:59:58,491 Creating Perceptual Hash for each feature
2021-05-28 23:59:58,493 Creating Perceptual Hash for each feature
2021-05-28 23:59:58,495 Comparing song with the database songs
2021-05-28 23:59:58,507 Mixing Output
2021-05-28 23:59:58,511 Checking if the 2 songs are opened
2021-05-28 23:59:58,511 Mixing the 2 songs together with 24.0 % of song1 and 76.0 % of song2
2021-05-28 23:59:59,397 Creating Perceptual Hash for each feature
2021-05-28 23:59:59,408 Creating Perceptual Hash for each feature
2021-05-28 23:59:59,413 Creating Perceptual Hash for each feature
2021-05-28 23:59:59,416 Creating Perceptual Hash for each feature
2021-05-28 23:59:59,418 Comparing song with the database songs
2021-05-28 23:59:59,440 Mixing Output
2021-05-28 23:59:59,445 Checking if the 2 songs are opened
2021-05-28 23:59:59,445 Mixing the 2 songs together with 66.0 % of song1 and 34.0 % of song2
2021-05-29 00:00:00,329 Creating Perceptual Hash for each feature
2021-05-29 00:00:00,338 Creating Perceptual Hash for each feature
2021-05-29 00:00:00,342 Creating Perceptual Hash for each feature
2021-05-29 00:00:00,344 Creating Perceptual Hash for each feature
2021-05-29 00:00:00,345 Comparing song with the database songs
2021-05-29 00:00:00,358 Mixing Output
2021-05-29 00:00:00,364 Checking if the 2 songs are opened
2021-05-29 00:00:00,365 Mixing the 2 songs together with 63.0 % of song1 and 37.0 % of song2
2021-05-29 00:00:01,226 Creating Perceptual Hash for each feature
2021-05-29 00:00:01,235 Creating Perceptual Hash for each feature
2021-05-29 00:00:01,239 Creating Perceptual Hash for each feature
2021-05-29 00:00:01,241 Creating Perceptual Hash for each feature
2021-05-29 00:00:01,243 Comparing song with the database songs
2021-05-29 00:00:01,256 Mixing Output
2021-05-29 00:00:01,260 Checking if the 2 songs are opened
2021-05-29 00:00:01,260 Mixing the 2 songs together with 72.0 % of song1 and 28.000000000000004 % of song2
2021-05-29 00:00:02,141 Creating Perceptual Hash for each feature
2021-05-29 00:00:02,150 Creating Perceptual Hash for each feature
2021-05-29 00:00:02,153 Creating Perceptual Hash for each feature
2021-05-29 00:00:02,156 Creating Perceptual Hash for each feature
2021-05-29 00:00:02,157 Comparing song with the database songs
2021-05-29 00:00:02,170 Mixing Output
2021-05-29 00:00:02,174 Checking if the 2 songs are opened
2021-05-29 00:00:02,175 Mixing the 2 songs together with 99.0 % of song1 and 1.0000000000000009 % of song2
2021-05-29 00:00:03,031 Creating Perceptual Hash for each feature
2021-05-29 00:00:03,041 Creating Perceptual Hash for each feature
2021-05-29 00:00:03,044 Creating Perceptual Hash for each feature
2021-05-29 00:00:03,046 Creating Perceptual Hash for each feature
2021-05-29 00:00:03,048 Comparing song with the database songs
2021-05-29 00:00:03,062 Mixing Output
2021-05-29 00:00:03,065 Checking if the 2 songs are opened
2021-05-29 00:00:03,065 Mixing the 2 songs together with 93.0 % of song1 and 6.999999999999995 % of song2
2021-05-29 00:00:03,938 Creating Perceptual Hash for each feature
2021-05-29 00:00:03,950 Creating Perceptual Hash for each feature
2021-05-29 00:00:03,953 Creating Perceptual Hash for each feature
2021-05-29 00:00:03,956 Creating Perceptual Hash for each feature
2021-05-29 00:00:03,958 Comparing song with the database songs
2021-05-29 00:00:03,980 Mixing Output
2021-05-29 00:00:05,496 Checking if the 2 songs are opened
2021-05-29 00:00:05,496 Mixing the 2 songs together with 94.0 % of song1 and 6.000000000000005 % of song2
2021-05-29 00:00:06,367 Creating Perceptual Hash for each feature
2021-05-29 00:00:06,376 Creating Perceptual Hash for each feature
2021-05-29 00:00:06,380 Creating Perceptual Hash for each feature
2021-05-29 00:00:06,382 Creating Perceptual Hash for each feature
2021-05-29 00:00:06,384 Comparing song with the database songs
2021-05-29 00:00:06,396 Mixing Output
2021-05-29 00:00:06,400 Checking if the 2 songs are opened
2021-05-29 00:00:06,400 Mixing the 2 songs together with 98.0 % of song1 and 2.0000000000000018 % of song2
2021-05-29 00:00:07,293 Creating Perceptual Hash for each feature
2021-05-29 00:00:07,305 Creating Perceptual Hash for each feature
2021-05-29 00:00:07,309 Creating Perceptual Hash for each feature
2021-05-29 00:00:07,312 Creating Perceptual Hash for each feature
2021-05-29 00:00:07,314 Comparing song with the database songs
2021-05-29 00:00:07,338 Mixing Output
2021-05-29 00:00:07,343 Checking if the 2 songs are opened
2021-05-29 00:00:07,343 Mixing the 2 songs together with 99.0 % of song1 and 1.0000000000000009 % of song2
2021-05-29 00:00:08,205 Creating Perceptual Hash for each feature
2021-05-29 00:00:08,214 Creating Perceptual Hash for each feature
2021-05-29 00:00:08,218 Creating Perceptual Hash for each feature
2021-05-29 00:00:08,221 Creating Perceptual Hash for each feature
2021-05-29 00:00:08,222 Comparing song with the database songs
2021-05-29 00:00:08,235 Mixing Output
