2021-05-27 22:37:51,119 open song 1
2021-05-27 22:37:56,574 subprocess.call(['ffmpeg', '-y', '-f', 'mp3', '-i', 'D:/Biomedical/3rd year/2nd semester/DSP/tasks/github/ShazamLikeApp/Database/Songs/Group03_Song02_Music.mp3', '-acodec', 'pcm_s16le', '-vn', '-f', 'wav', '-'])
2021-05-27 22:37:58,759 bytecode dump:
>          0	NOP(arg=None, lineno=10)
           2	LOAD_GLOBAL(arg=0, lineno=10)
           4	LOAD_CONST(arg=1, lineno=10)
           6	LOAD_FAST(arg=2, lineno=10)
           8	CALL_FUNCTION(arg=2, lineno=10)
          10	STORE_FAST(arg=6, lineno=10)
          12	LOAD_CONST(arg=1, lineno=11)
          14	LOAD_FAST(arg=2, lineno=11)
          16	BINARY_TRUE_DIVIDE(arg=None, lineno=11)
          18	STORE_FAST(arg=7, lineno=11)
          20	LOAD_GLOBAL(arg=1, lineno=12)
          22	LOAD_FAST(arg=6, lineno=12)
          24	LOAD_FAST(arg=5, lineno=12)
          26	BINARY_MULTIPLY(arg=None, lineno=12)
          28	CALL_FUNCTION(arg=1, lineno=12)
          30	STORE_FAST(arg=8, lineno=12)
          32	LOAD_CONST(arg=2, lineno=13)
          34	STORE_FAST(arg=9, lineno=13)
          36	LOAD_CONST(arg=3, lineno=15)
          38	STORE_FAST(arg=10, lineno=15)
          40	LOAD_CONST(arg=2, lineno=16)
          42	STORE_FAST(arg=11, lineno=16)
          44	LOAD_CONST(arg=2, lineno=17)
          46	STORE_FAST(arg=12, lineno=17)
          48	LOAD_CONST(arg=3, lineno=18)
          50	STORE_FAST(arg=13, lineno=18)
          52	LOAD_CONST(arg=2, lineno=19)
          54	STORE_FAST(arg=14, lineno=19)
          56	LOAD_CONST(arg=2, lineno=20)
          58	STORE_FAST(arg=15, lineno=20)
          60	LOAD_FAST(arg=3, lineno=22)
          62	LOAD_ATTR(arg=2, lineno=22)
          64	LOAD_CONST(arg=3, lineno=22)
          66	BINARY_SUBSCR(arg=None, lineno=22)
          68	STORE_FAST(arg=16, lineno=22)
          70	LOAD_FAST(arg=0, lineno=23)
          72	LOAD_ATTR(arg=2, lineno=23)
          74	LOAD_CONST(arg=3, lineno=23)
          76	BINARY_SUBSCR(arg=None, lineno=23)
          78	STORE_FAST(arg=17, lineno=23)
          80	LOAD_FAST(arg=1, lineno=24)
          82	LOAD_ATTR(arg=2, lineno=24)
          84	LOAD_CONST(arg=3, lineno=24)
          86	BINARY_SUBSCR(arg=None, lineno=24)
          88	STORE_FAST(arg=18, lineno=24)
          90	LOAD_FAST(arg=1, lineno=25)
          92	LOAD_ATTR(arg=2, lineno=25)
          94	LOAD_CONST(arg=4, lineno=25)
          96	BINARY_SUBSCR(arg=None, lineno=25)
          98	STORE_FAST(arg=19, lineno=25)
         100	SETUP_LOOP(arg=374, lineno=27)
         104	LOAD_GLOBAL(arg=3, lineno=27)
         106	LOAD_FAST(arg=18, lineno=27)
         108	CALL_FUNCTION(arg=1, lineno=27)
         110	GET_ITER(arg=None, lineno=27)
>        112	FOR_ITER(arg=360, lineno=27)
         116	STORE_FAST(arg=20, lineno=27)
         118	LOAD_GLOBAL(arg=1, lineno=29)
         120	LOAD_FAST(arg=9, lineno=29)
         122	CALL_FUNCTION(arg=1, lineno=29)
         124	STORE_FAST(arg=10, lineno=29)
         126	LOAD_FAST(arg=6, lineno=32)
         128	LOAD_FAST(arg=9, lineno=32)
         130	LOAD_FAST(arg=10, lineno=32)
         132	BINARY_SUBTRACT(arg=None, lineno=32)
         134	BINARY_MULTIPLY(arg=None, lineno=32)
         136	STORE_FAST(arg=11, lineno=32)
         138	LOAD_FAST(arg=11, lineno=35)
         140	LOAD_FAST(arg=5, lineno=35)
         142	BINARY_MULTIPLY(arg=None, lineno=35)
         144	STORE_FAST(arg=12, lineno=35)
         146	LOAD_GLOBAL(arg=1, lineno=36)
         148	LOAD_FAST(arg=12, lineno=36)
         150	CALL_FUNCTION(arg=1, lineno=36)
         152	STORE_FAST(arg=13, lineno=36)
         154	LOAD_FAST(arg=12, lineno=39)
         156	LOAD_FAST(arg=13, lineno=39)
         158	BINARY_SUBTRACT(arg=None, lineno=39)
         160	STORE_FAST(arg=14, lineno=39)
         162	LOAD_GLOBAL(arg=0, lineno=42)
         164	LOAD_FAST(arg=10, lineno=42)
         166	LOAD_CONST(arg=4, lineno=42)
         168	BINARY_ADD(arg=None, lineno=42)
         170	LOAD_FAST(arg=16, lineno=42)
         172	LOAD_FAST(arg=13, lineno=42)
         174	BINARY_SUBTRACT(arg=None, lineno=42)
         176	LOAD_FAST(arg=8, lineno=42)
         178	BINARY_FLOOR_DIVIDE(arg=None, lineno=42)
         180	CALL_FUNCTION(arg=2, lineno=42)
         182	STORE_FAST(arg=21, lineno=42)
         184	SETUP_LOOP(arg=106, lineno=43)
         186	LOAD_GLOBAL(arg=3, lineno=43)
         188	LOAD_FAST(arg=21, lineno=43)
         190	CALL_FUNCTION(arg=1, lineno=43)
         192	GET_ITER(arg=None, lineno=43)
>        194	FOR_ITER(arg=94, lineno=43)
         196	STORE_FAST(arg=22, lineno=43)
         198	LOAD_FAST(arg=3, lineno=45)
         200	LOAD_FAST(arg=13, lineno=45)
         202	LOAD_FAST(arg=22, lineno=45)
         204	LOAD_FAST(arg=8, lineno=45)
         206	BINARY_MULTIPLY(arg=None, lineno=45)
         208	BINARY_ADD(arg=None, lineno=45)
         210	BINARY_SUBSCR(arg=None, lineno=45)
         212	LOAD_FAST(arg=14, lineno=45)
         214	LOAD_FAST(arg=4, lineno=45)
         216	LOAD_FAST(arg=13, lineno=45)
         218	LOAD_FAST(arg=22, lineno=45)
         220	LOAD_FAST(arg=8, lineno=45)
         222	BINARY_MULTIPLY(arg=None, lineno=45)
         224	BINARY_ADD(arg=None, lineno=45)
         226	BINARY_SUBSCR(arg=None, lineno=45)
         228	BINARY_MULTIPLY(arg=None, lineno=45)
         230	BINARY_ADD(arg=None, lineno=45)
         232	STORE_FAST(arg=15, lineno=45)
         234	SETUP_LOOP(arg=52, lineno=46)
         236	LOAD_GLOBAL(arg=3, lineno=46)
         238	LOAD_FAST(arg=19, lineno=46)
         240	CALL_FUNCTION(arg=1, lineno=46)
         242	GET_ITER(arg=None, lineno=46)
>        244	FOR_ITER(arg=40, lineno=46)
         246	STORE_FAST(arg=23, lineno=46)
         248	LOAD_FAST(arg=1, lineno=47)
         250	LOAD_FAST(arg=20, lineno=47)
         252	LOAD_FAST(arg=23, lineno=47)
         254	BUILD_TUPLE(arg=2, lineno=47)
         256	DUP_TOP_TWO(arg=None, lineno=47)
         258	BINARY_SUBSCR(arg=None, lineno=47)
         260	LOAD_FAST(arg=15, lineno=47)
         262	LOAD_FAST(arg=0, lineno=47)
         264	LOAD_FAST(arg=10, lineno=47)
         266	LOAD_FAST(arg=22, lineno=47)
         268	BINARY_SUBTRACT(arg=None, lineno=47)
         270	LOAD_FAST(arg=23, lineno=47)
         272	BUILD_TUPLE(arg=2, lineno=47)
         274	BINARY_SUBSCR(arg=None, lineno=47)
         276	BINARY_MULTIPLY(arg=None, lineno=47)
         278	INPLACE_ADD(arg=None, lineno=47)
         280	ROT_THREE(arg=None, lineno=47)
         282	STORE_SUBSCR(arg=None, lineno=47)
         284	JUMP_ABSOLUTE(arg=244, lineno=47)
>        286	POP_BLOCK(arg=None, lineno=47)
>        288	JUMP_ABSOLUTE(arg=194, lineno=47)
>        290	POP_BLOCK(arg=None, lineno=47)
>        292	LOAD_FAST(arg=6, lineno=50)
         294	LOAD_FAST(arg=11, lineno=50)
         296	BINARY_SUBTRACT(arg=None, lineno=50)
         298	STORE_FAST(arg=11, lineno=50)
         300	LOAD_FAST(arg=11, lineno=53)
         302	LOAD_FAST(arg=5, lineno=53)
         304	BINARY_MULTIPLY(arg=None, lineno=53)
         306	STORE_FAST(arg=12, lineno=53)
         308	LOAD_GLOBAL(arg=1, lineno=54)
         310	LOAD_FAST(arg=12, lineno=54)
         312	CALL_FUNCTION(arg=1, lineno=54)
         314	STORE_FAST(arg=13, lineno=54)
         316	LOAD_FAST(arg=12, lineno=57)
         318	LOAD_FAST(arg=13, lineno=57)
         320	BINARY_SUBTRACT(arg=None, lineno=57)
         322	STORE_FAST(arg=14, lineno=57)
         324	LOAD_GLOBAL(arg=0, lineno=60)
         326	LOAD_FAST(arg=17, lineno=60)
         328	LOAD_FAST(arg=10, lineno=60)
         330	BINARY_SUBTRACT(arg=None, lineno=60)
         332	LOAD_CONST(arg=4, lineno=60)
         334	BINARY_SUBTRACT(arg=None, lineno=60)
         336	LOAD_FAST(arg=16, lineno=60)
         338	LOAD_FAST(arg=13, lineno=60)
         340	BINARY_SUBTRACT(arg=None, lineno=60)
         342	LOAD_FAST(arg=8, lineno=60)
         344	BINARY_FLOOR_DIVIDE(arg=None, lineno=60)
         346	CALL_FUNCTION(arg=2, lineno=60)
         348	STORE_FAST(arg=24, lineno=60)
         350	SETUP_LOOP(arg=114, lineno=61)
         352	LOAD_GLOBAL(arg=3, lineno=61)
         354	LOAD_FAST(arg=24, lineno=61)
         356	CALL_FUNCTION(arg=1, lineno=61)
         358	GET_ITER(arg=None, lineno=61)
>        360	FOR_ITER(arg=102, lineno=61)
         362	STORE_FAST(arg=25, lineno=61)
         364	LOAD_FAST(arg=3, lineno=62)
         366	LOAD_FAST(arg=13, lineno=62)
         368	LOAD_FAST(arg=25, lineno=62)
         370	LOAD_FAST(arg=8, lineno=62)
         372	BINARY_MULTIPLY(arg=None, lineno=62)
         374	BINARY_ADD(arg=None, lineno=62)
         376	BINARY_SUBSCR(arg=None, lineno=62)
         378	LOAD_FAST(arg=14, lineno=62)
         380	LOAD_FAST(arg=4, lineno=62)
         382	LOAD_FAST(arg=13, lineno=62)
         384	LOAD_FAST(arg=25, lineno=62)
         386	LOAD_FAST(arg=8, lineno=62)
         388	BINARY_MULTIPLY(arg=None, lineno=62)
         390	BINARY_ADD(arg=None, lineno=62)
         392	BINARY_SUBSCR(arg=None, lineno=62)
         394	BINARY_MULTIPLY(arg=None, lineno=62)
         396	BINARY_ADD(arg=None, lineno=62)
         398	STORE_FAST(arg=15, lineno=62)
         400	SETUP_LOOP(arg=58, lineno=63)
         402	LOAD_GLOBAL(arg=3, lineno=63)
         404	LOAD_FAST(arg=19, lineno=63)
         406	CALL_FUNCTION(arg=1, lineno=63)
         408	GET_ITER(arg=None, lineno=63)
>        410	FOR_ITER(arg=46, lineno=63)
         412	STORE_FAST(arg=23, lineno=63)
         414	LOAD_FAST(arg=1, lineno=64)
         416	LOAD_FAST(arg=20, lineno=64)
         418	LOAD_FAST(arg=23, lineno=64)
         420	BUILD_TUPLE(arg=2, lineno=64)
         422	DUP_TOP_TWO(arg=None, lineno=64)
         424	BINARY_SUBSCR(arg=None, lineno=64)
         426	LOAD_FAST(arg=15, lineno=64)
         428	LOAD_FAST(arg=0, lineno=64)
         430	LOAD_FAST(arg=10, lineno=64)
         432	LOAD_FAST(arg=25, lineno=64)
         434	BINARY_ADD(arg=None, lineno=64)
         436	LOAD_CONST(arg=4, lineno=64)
         438	BINARY_ADD(arg=None, lineno=64)
         440	LOAD_FAST(arg=23, lineno=64)
         442	BUILD_TUPLE(arg=2, lineno=64)
         444	BINARY_SUBSCR(arg=None, lineno=64)
         446	BINARY_MULTIPLY(arg=None, lineno=64)
         448	INPLACE_ADD(arg=None, lineno=64)
         450	ROT_THREE(arg=None, lineno=64)
         452	STORE_SUBSCR(arg=None, lineno=64)
         454	JUMP_ABSOLUTE(arg=410, lineno=64)
>        458	POP_BLOCK(arg=None, lineno=64)
>        460	JUMP_ABSOLUTE(arg=360, lineno=64)
>        464	POP_BLOCK(arg=None, lineno=64)
>        466	LOAD_FAST(arg=9, lineno=67)
         468	LOAD_FAST(arg=7, lineno=67)
         470	INPLACE_ADD(arg=None, lineno=67)
         472	STORE_FAST(arg=9, lineno=67)
         474	JUMP_ABSOLUTE(arg=112, lineno=67)
>        476	POP_BLOCK(arg=None, lineno=67)
>        478	LOAD_CONST(arg=0, lineno=67)
         480	RETURN_VALUE(arg=None, lineno=67)
2021-05-27 22:37:58,759 pending: deque([State(pc_initial=0 nstack_initial=0)])
2021-05-27 22:37:58,759 stack: []
2021-05-27 22:37:58,759 dispatch pc=0, inst=NOP(arg=None, lineno=10)
2021-05-27 22:37:58,759 stack []
2021-05-27 22:37:58,759 dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=10)
2021-05-27 22:37:58,759 stack []
2021-05-27 22:37:58,759 dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=10)
2021-05-27 22:37:58,759 stack ['$2load_global.0']
2021-05-27 22:37:58,759 dispatch pc=6, inst=LOAD_FAST(arg=2, lineno=10)
2021-05-27 22:37:58,759 stack ['$2load_global.0', '$const4.1']
2021-05-27 22:37:58,759 dispatch pc=8, inst=CALL_FUNCTION(arg=2, lineno=10)
2021-05-27 22:37:58,759 stack ['$2load_global.0', '$const4.1', '$sample_ratio6.2']
2021-05-27 22:37:58,759 dispatch pc=10, inst=STORE_FAST(arg=6, lineno=10)
2021-05-27 22:37:58,759 stack ['$8call_function.3']
2021-05-27 22:37:58,759 dispatch pc=12, inst=LOAD_CONST(arg=1, lineno=11)
2021-05-27 22:37:58,759 stack []
2021-05-27 22:37:58,759 dispatch pc=14, inst=LOAD_FAST(arg=2, lineno=11)
2021-05-27 22:37:58,759 stack ['$const12.4']
2021-05-27 22:37:58,759 dispatch pc=16, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=11)
2021-05-27 22:37:58,759 stack ['$const12.4', '$sample_ratio14.5']
2021-05-27 22:37:58,759 dispatch pc=18, inst=STORE_FAST(arg=7, lineno=11)
2021-05-27 22:37:58,759 stack ['$16binary_true_divide.6']
2021-05-27 22:37:58,759 dispatch pc=20, inst=LOAD_GLOBAL(arg=1, lineno=12)
2021-05-27 22:37:58,759 stack []
2021-05-27 22:37:58,759 dispatch pc=22, inst=LOAD_FAST(arg=6, lineno=12)
2021-05-27 22:37:58,759 stack ['$20load_global.7']
2021-05-27 22:37:58,759 dispatch pc=24, inst=LOAD_FAST(arg=5, lineno=12)
2021-05-27 22:37:58,759 stack ['$20load_global.7', '$scale22.8']
2021-05-27 22:37:58,759 dispatch pc=26, inst=BINARY_MULTIPLY(arg=None, lineno=12)
2021-05-27 22:37:58,759 stack ['$20load_global.7', '$scale22.8', '$num_table24.9']
2021-05-27 22:37:58,759 dispatch pc=28, inst=CALL_FUNCTION(arg=1, lineno=12)
2021-05-27 22:37:58,759 stack ['$20load_global.7', '$26binary_multiply.10']
2021-05-27 22:37:58,759 dispatch pc=30, inst=STORE_FAST(arg=8, lineno=12)
2021-05-27 22:37:58,759 stack ['$28call_function.11']
2021-05-27 22:37:58,759 dispatch pc=32, inst=LOAD_CONST(arg=2, lineno=13)
2021-05-27 22:37:58,774 stack []
2021-05-27 22:37:58,774 dispatch pc=34, inst=STORE_FAST(arg=9, lineno=13)
2021-05-27 22:37:58,774 stack ['$const32.12']
2021-05-27 22:37:58,774 dispatch pc=36, inst=LOAD_CONST(arg=3, lineno=15)
2021-05-27 22:37:58,774 stack []
2021-05-27 22:37:58,774 dispatch pc=38, inst=STORE_FAST(arg=10, lineno=15)
2021-05-27 22:37:58,775 stack ['$const36.13']
2021-05-27 22:37:58,775 dispatch pc=40, inst=LOAD_CONST(arg=2, lineno=16)
2021-05-27 22:37:58,775 stack []
2021-05-27 22:37:58,775 dispatch pc=42, inst=STORE_FAST(arg=11, lineno=16)
2021-05-27 22:37:58,775 stack ['$const40.14']
2021-05-27 22:37:58,775 dispatch pc=44, inst=LOAD_CONST(arg=2, lineno=17)
2021-05-27 22:37:58,775 stack []
2021-05-27 22:37:58,775 dispatch pc=46, inst=STORE_FAST(arg=12, lineno=17)
2021-05-27 22:37:58,775 stack ['$const44.15']
2021-05-27 22:37:58,775 dispatch pc=48, inst=LOAD_CONST(arg=3, lineno=18)
2021-05-27 22:37:58,776 stack []
2021-05-27 22:37:58,776 dispatch pc=50, inst=STORE_FAST(arg=13, lineno=18)
2021-05-27 22:37:58,776 stack ['$const48.16']
2021-05-27 22:37:58,776 dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=19)
2021-05-27 22:37:58,776 stack []
2021-05-27 22:37:58,776 dispatch pc=54, inst=STORE_FAST(arg=14, lineno=19)
2021-05-27 22:37:58,776 stack ['$const52.17']
2021-05-27 22:37:58,776 dispatch pc=56, inst=LOAD_CONST(arg=2, lineno=20)
2021-05-27 22:37:58,776 stack []
2021-05-27 22:37:58,776 dispatch pc=58, inst=STORE_FAST(arg=15, lineno=20)
2021-05-27 22:37:58,776 stack ['$const56.18']
2021-05-27 22:37:58,776 dispatch pc=60, inst=LOAD_FAST(arg=3, lineno=22)
2021-05-27 22:37:58,777 stack []
2021-05-27 22:37:58,777 dispatch pc=62, inst=LOAD_ATTR(arg=2, lineno=22)
2021-05-27 22:37:58,777 stack ['$interp_win60.19']
2021-05-27 22:37:58,777 dispatch pc=64, inst=LOAD_CONST(arg=3, lineno=22)
2021-05-27 22:37:58,777 stack ['$62load_attr.20']
2021-05-27 22:37:58,777 dispatch pc=66, inst=BINARY_SUBSCR(arg=None, lineno=22)
2021-05-27 22:37:58,777 stack ['$62load_attr.20', '$const64.21']
2021-05-27 22:37:58,777 dispatch pc=68, inst=STORE_FAST(arg=16, lineno=22)
2021-05-27 22:37:58,777 stack ['$66binary_subscr.22']
2021-05-27 22:37:58,777 dispatch pc=70, inst=LOAD_FAST(arg=0, lineno=23)
2021-05-27 22:37:58,777 stack []
2021-05-27 22:37:58,778 dispatch pc=72, inst=LOAD_ATTR(arg=2, lineno=23)
2021-05-27 22:37:58,778 stack ['$x70.23']
2021-05-27 22:37:58,778 dispatch pc=74, inst=LOAD_CONST(arg=3, lineno=23)
2021-05-27 22:37:58,778 stack ['$72load_attr.24']
2021-05-27 22:37:58,778 dispatch pc=76, inst=BINARY_SUBSCR(arg=None, lineno=23)
2021-05-27 22:37:58,778 stack ['$72load_attr.24', '$const74.25']
2021-05-27 22:37:58,778 dispatch pc=78, inst=STORE_FAST(arg=17, lineno=23)
2021-05-27 22:37:58,778 stack ['$76binary_subscr.26']
2021-05-27 22:37:58,778 dispatch pc=80, inst=LOAD_FAST(arg=1, lineno=24)
2021-05-27 22:37:58,778 stack []
2021-05-27 22:37:58,779 dispatch pc=82, inst=LOAD_ATTR(arg=2, lineno=24)
2021-05-27 22:37:58,779 stack ['$y80.27']
2021-05-27 22:37:58,779 dispatch pc=84, inst=LOAD_CONST(arg=3, lineno=24)
2021-05-27 22:37:58,779 stack ['$82load_attr.28']
2021-05-27 22:37:58,779 dispatch pc=86, inst=BINARY_SUBSCR(arg=None, lineno=24)
2021-05-27 22:37:58,779 stack ['$82load_attr.28', '$const84.29']
2021-05-27 22:37:58,779 dispatch pc=88, inst=STORE_FAST(arg=18, lineno=24)
2021-05-27 22:37:58,779 stack ['$86binary_subscr.30']
2021-05-27 22:37:58,779 dispatch pc=90, inst=LOAD_FAST(arg=1, lineno=25)
2021-05-27 22:37:58,779 stack []
2021-05-27 22:37:58,779 dispatch pc=92, inst=LOAD_ATTR(arg=2, lineno=25)
2021-05-27 22:37:58,779 stack ['$y90.31']
2021-05-27 22:37:58,780 dispatch pc=94, inst=LOAD_CONST(arg=4, lineno=25)
2021-05-27 22:37:58,780 stack ['$92load_attr.32']
2021-05-27 22:37:58,780 dispatch pc=96, inst=BINARY_SUBSCR(arg=None, lineno=25)
2021-05-27 22:37:58,780 stack ['$92load_attr.32', '$const94.33']
2021-05-27 22:37:58,780 dispatch pc=98, inst=STORE_FAST(arg=19, lineno=25)
2021-05-27 22:37:58,780 stack ['$96binary_subscr.34']
2021-05-27 22:37:58,780 end state. edges=[Edge(pc=100, stack=(), blockstack=(), npush=0)]
2021-05-27 22:37:58,780 pending: deque([State(pc_initial=100 nstack_initial=0)])
2021-05-27 22:37:58,780 stack: []
2021-05-27 22:37:58,780 dispatch pc=100, inst=SETUP_LOOP(arg=374, lineno=27)
2021-05-27 22:37:58,780 stack []
2021-05-27 22:37:58,781 dispatch pc=104, inst=LOAD_GLOBAL(arg=3, lineno=27)
2021-05-27 22:37:58,781 stack []
2021-05-27 22:37:58,781 dispatch pc=106, inst=LOAD_FAST(arg=18, lineno=27)
2021-05-27 22:37:58,781 stack ['$104load_global.0']
2021-05-27 22:37:58,781 dispatch pc=108, inst=CALL_FUNCTION(arg=1, lineno=27)
2021-05-27 22:37:58,781 stack ['$104load_global.0', '$n_out106.1']
2021-05-27 22:37:58,781 dispatch pc=110, inst=GET_ITER(arg=None, lineno=27)
2021-05-27 22:37:58,781 stack ['$108call_function.2']
2021-05-27 22:37:58,781 end state. edges=[Edge(pc=112, stack=('$110get_iter.3',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
2021-05-27 22:37:58,781 pending: deque([State(pc_initial=112 nstack_initial=1)])
2021-05-27 22:37:58,782 stack: ['$phi112.0']
2021-05-27 22:37:58,782 dispatch pc=112, inst=FOR_ITER(arg=360, lineno=27)
2021-05-27 22:37:58,782 stack ['$phi112.0']
2021-05-27 22:37:58,782 end state. edges=[Edge(pc=476, stack=(), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0), Edge(pc=116, stack=('$phi112.0', '$112for_iter.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
2021-05-27 22:37:58,782 pending: deque([State(pc_initial=476 nstack_initial=0), State(pc_initial=116 nstack_initial=2)])
2021-05-27 22:37:58,782 stack: []
2021-05-27 22:37:58,782 dispatch pc=476, inst=POP_BLOCK(arg=None, lineno=67)
2021-05-27 22:37:58,782 stack []
2021-05-27 22:37:58,782 end state. edges=[Edge(pc=478, stack=(), blockstack=(), npush=0)]
2021-05-27 22:37:58,782 pending: deque([State(pc_initial=116 nstack_initial=2), State(pc_initial=478 nstack_initial=0)])
2021-05-27 22:37:58,782 stack: ['$phi116.0', '$phi116.1']
2021-05-27 22:37:58,783 dispatch pc=116, inst=STORE_FAST(arg=20, lineno=27)
2021-05-27 22:37:58,783 stack ['$phi116.0', '$phi116.1']
2021-05-27 22:37:58,783 dispatch pc=118, inst=LOAD_GLOBAL(arg=1, lineno=29)
2021-05-27 22:37:58,783 stack ['$phi116.0']
2021-05-27 22:37:58,783 dispatch pc=120, inst=LOAD_FAST(arg=9, lineno=29)
2021-05-27 22:37:58,783 stack ['$phi116.0', '$118load_global.2']
2021-05-27 22:37:58,783 dispatch pc=122, inst=CALL_FUNCTION(arg=1, lineno=29)
2021-05-27 22:37:58,783 stack ['$phi116.0', '$118load_global.2', '$time_register120.3']
2021-05-27 22:37:58,783 dispatch pc=124, inst=STORE_FAST(arg=10, lineno=29)
2021-05-27 22:37:58,783 stack ['$phi116.0', '$122call_function.4']
2021-05-27 22:37:58,783 dispatch pc=126, inst=LOAD_FAST(arg=6, lineno=32)
2021-05-27 22:37:58,783 stack ['$phi116.0']
2021-05-27 22:37:58,784 dispatch pc=128, inst=LOAD_FAST(arg=9, lineno=32)
2021-05-27 22:37:58,784 stack ['$phi116.0', '$scale126.5']
2021-05-27 22:37:58,784 dispatch pc=130, inst=LOAD_FAST(arg=10, lineno=32)
2021-05-27 22:37:58,784 stack ['$phi116.0', '$scale126.5', '$time_register128.6']
2021-05-27 22:37:58,784 dispatch pc=132, inst=BINARY_SUBTRACT(arg=None, lineno=32)
2021-05-27 22:37:58,784 stack ['$phi116.0', '$scale126.5', '$time_register128.6', '$n130.7']
2021-05-27 22:37:58,784 dispatch pc=134, inst=BINARY_MULTIPLY(arg=None, lineno=32)
2021-05-27 22:37:58,784 stack ['$phi116.0', '$scale126.5', '$132binary_subtract.8']
2021-05-27 22:37:58,784 dispatch pc=136, inst=STORE_FAST(arg=11, lineno=32)
2021-05-27 22:37:58,785 stack ['$phi116.0', '$134binary_multiply.9']
2021-05-27 22:37:58,785 dispatch pc=138, inst=LOAD_FAST(arg=11, lineno=35)
2021-05-27 22:37:58,785 stack ['$phi116.0']
2021-05-27 22:37:58,785 dispatch pc=140, inst=LOAD_FAST(arg=5, lineno=35)
2021-05-27 22:37:58,785 stack ['$phi116.0', '$frac138.10']
2021-05-27 22:37:58,785 dispatch pc=142, inst=BINARY_MULTIPLY(arg=None, lineno=35)
2021-05-27 22:37:58,785 stack ['$phi116.0', '$frac138.10', '$num_table140.11']
2021-05-27 22:37:58,785 dispatch pc=144, inst=STORE_FAST(arg=12, lineno=35)
2021-05-27 22:37:58,785 stack ['$phi116.0', '$142binary_multiply.12']
2021-05-27 22:37:58,785 dispatch pc=146, inst=LOAD_GLOBAL(arg=1, lineno=36)
2021-05-27 22:37:58,785 stack ['$phi116.0']
2021-05-27 22:37:58,786 dispatch pc=148, inst=LOAD_FAST(arg=12, lineno=36)
2021-05-27 22:37:58,786 stack ['$phi116.0', '$146load_global.13']
2021-05-27 22:37:58,786 dispatch pc=150, inst=CALL_FUNCTION(arg=1, lineno=36)
2021-05-27 22:37:58,786 stack ['$phi116.0', '$146load_global.13', '$index_frac148.14']
2021-05-27 22:37:58,786 dispatch pc=152, inst=STORE_FAST(arg=13, lineno=36)
2021-05-27 22:37:58,786 stack ['$phi116.0', '$150call_function.15']
2021-05-27 22:37:58,786 dispatch pc=154, inst=LOAD_FAST(arg=12, lineno=39)
2021-05-27 22:37:58,786 stack ['$phi116.0']
2021-05-27 22:37:58,786 dispatch pc=156, inst=LOAD_FAST(arg=13, lineno=39)
2021-05-27 22:37:58,786 stack ['$phi116.0', '$index_frac154.16']
2021-05-27 22:37:58,786 dispatch pc=158, inst=BINARY_SUBTRACT(arg=None, lineno=39)
2021-05-27 22:37:58,786 stack ['$phi116.0', '$index_frac154.16', '$offset156.17']
2021-05-27 22:37:58,787 dispatch pc=160, inst=STORE_FAST(arg=14, lineno=39)
2021-05-27 22:37:58,787 stack ['$phi116.0', '$158binary_subtract.18']
2021-05-27 22:37:58,787 dispatch pc=162, inst=LOAD_GLOBAL(arg=0, lineno=42)
2021-05-27 22:37:58,787 stack ['$phi116.0']
2021-05-27 22:37:58,787 dispatch pc=164, inst=LOAD_FAST(arg=10, lineno=42)
2021-05-27 22:37:58,787 stack ['$phi116.0', '$162load_global.19']
2021-05-27 22:37:58,787 dispatch pc=166, inst=LOAD_CONST(arg=4, lineno=42)
2021-05-27 22:37:58,787 stack ['$phi116.0', '$162load_global.19', '$n164.20']
2021-05-27 22:37:58,787 dispatch pc=168, inst=BINARY_ADD(arg=None, lineno=42)
2021-05-27 22:37:58,787 stack ['$phi116.0', '$162load_global.19', '$n164.20', '$const166.21']
2021-05-27 22:37:58,787 dispatch pc=170, inst=LOAD_FAST(arg=16, lineno=42)
2021-05-27 22:37:58,788 stack ['$phi116.0', '$162load_global.19', '$168binary_add.22']
2021-05-27 22:37:58,788 dispatch pc=172, inst=LOAD_FAST(arg=13, lineno=42)
2021-05-27 22:37:58,788 stack ['$phi116.0', '$162load_global.19', '$168binary_add.22', '$nwin170.23']
2021-05-27 22:37:58,788 dispatch pc=174, inst=BINARY_SUBTRACT(arg=None, lineno=42)
2021-05-27 22:37:58,788 stack ['$phi116.0', '$162load_global.19', '$168binary_add.22', '$nwin170.23', '$offset172.24']
2021-05-27 22:37:58,788 dispatch pc=176, inst=LOAD_FAST(arg=8, lineno=42)
2021-05-27 22:37:58,788 stack ['$phi116.0', '$162load_global.19', '$168binary_add.22', '$174binary_subtract.25']
2021-05-27 22:37:58,788 dispatch pc=178, inst=BINARY_FLOOR_DIVIDE(arg=None, lineno=42)
2021-05-27 22:37:58,788 stack ['$phi116.0', '$162load_global.19', '$168binary_add.22', '$174binary_subtract.25', '$index_step176.26']
2021-05-27 22:37:58,788 dispatch pc=180, inst=CALL_FUNCTION(arg=2, lineno=42)
2021-05-27 22:37:58,788 stack ['$phi116.0', '$162load_global.19', '$168binary_add.22', '$178binary_floor_divide.27']
2021-05-27 22:37:58,789 dispatch pc=182, inst=STORE_FAST(arg=21, lineno=42)
2021-05-27 22:37:58,789 stack ['$phi116.0', '$180call_function.28']
2021-05-27 22:37:58,789 end state. edges=[Edge(pc=184, stack=('$phi116.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
2021-05-27 22:37:58,789 pending: deque([State(pc_initial=478 nstack_initial=0), State(pc_initial=184 nstack_initial=1)])
2021-05-27 22:37:58,789 stack: []
2021-05-27 22:37:58,789 dispatch pc=478, inst=LOAD_CONST(arg=0, lineno=67)
2021-05-27 22:37:58,789 stack []
2021-05-27 22:37:58,789 dispatch pc=480, inst=RETURN_VALUE(arg=None, lineno=67)
2021-05-27 22:37:58,789 stack ['$const478.0']
2021-05-27 22:37:58,789 end state. edges=[]
2021-05-27 22:37:58,789 pending: deque([State(pc_initial=184 nstack_initial=1)])
2021-05-27 22:37:58,790 stack: ['$phi184.0']
2021-05-27 22:37:58,790 dispatch pc=184, inst=SETUP_LOOP(arg=106, lineno=43)
2021-05-27 22:37:58,790 stack ['$phi184.0']
2021-05-27 22:37:58,790 dispatch pc=186, inst=LOAD_GLOBAL(arg=3, lineno=43)
2021-05-27 22:37:58,790 stack ['$phi184.0']
2021-05-27 22:37:58,790 dispatch pc=188, inst=LOAD_FAST(arg=21, lineno=43)
2021-05-27 22:37:58,790 stack ['$phi184.0', '$186load_global.1']
2021-05-27 22:37:58,790 dispatch pc=190, inst=CALL_FUNCTION(arg=1, lineno=43)
2021-05-27 22:37:58,790 stack ['$phi184.0', '$186load_global.1', '$i_max188.2']
2021-05-27 22:37:58,790 dispatch pc=192, inst=GET_ITER(arg=None, lineno=43)
2021-05-27 22:37:58,790 stack ['$phi184.0', '$190call_function.3']
2021-05-27 22:37:58,791 end state. edges=[Edge(pc=194, stack=('$phi184.0', '$192get_iter.4'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
2021-05-27 22:37:58,791 pending: deque([State(pc_initial=194 nstack_initial=2)])
2021-05-27 22:37:58,791 stack: ['$phi194.0', '$phi194.1']
2021-05-27 22:37:58,791 dispatch pc=194, inst=FOR_ITER(arg=94, lineno=43)
2021-05-27 22:37:58,791 stack ['$phi194.0', '$phi194.1']
2021-05-27 22:37:58,791 end state. edges=[Edge(pc=290, stack=('$phi194.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0), Edge(pc=196, stack=('$phi194.0', '$phi194.1', '$194for_iter.3'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
2021-05-27 22:37:58,791 pending: deque([State(pc_initial=290 nstack_initial=1), State(pc_initial=196 nstack_initial=3)])
2021-05-27 22:37:58,791 stack: ['$phi290.0']
2021-05-27 22:37:58,791 dispatch pc=290, inst=POP_BLOCK(arg=None, lineno=47)
2021-05-27 22:37:58,791 stack ['$phi290.0']
2021-05-27 22:37:58,792 end state. edges=[Edge(pc=292, stack=('$phi290.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
2021-05-27 22:37:58,792 pending: deque([State(pc_initial=196 nstack_initial=3), State(pc_initial=292 nstack_initial=1)])
2021-05-27 22:37:58,792 stack: ['$phi196.0', '$phi196.1', '$phi196.2']
2021-05-27 22:37:58,792 dispatch pc=196, inst=STORE_FAST(arg=22, lineno=43)
2021-05-27 22:37:58,792 stack ['$phi196.0', '$phi196.1', '$phi196.2']
2021-05-27 22:37:58,792 dispatch pc=198, inst=LOAD_FAST(arg=3, lineno=45)
2021-05-27 22:37:58,792 stack ['$phi196.0', '$phi196.1']
2021-05-27 22:37:58,792 dispatch pc=200, inst=LOAD_FAST(arg=13, lineno=45)
2021-05-27 22:37:58,792 stack ['$phi196.0', '$phi196.1', '$interp_win198.3']
2021-05-27 22:37:58,792 dispatch pc=202, inst=LOAD_FAST(arg=22, lineno=45)
2021-05-27 22:37:58,793 stack ['$phi196.0', '$phi196.1', '$interp_win198.3', '$offset200.4']
2021-05-27 22:37:58,793 dispatch pc=204, inst=LOAD_FAST(arg=8, lineno=45)
2021-05-27 22:37:58,793 stack ['$phi196.0', '$phi196.1', '$interp_win198.3', '$offset200.4', '$i202.5']
2021-05-27 22:37:58,793 dispatch pc=206, inst=BINARY_MULTIPLY(arg=None, lineno=45)
2021-05-27 22:37:58,793 stack ['$phi196.0', '$phi196.1', '$interp_win198.3', '$offset200.4', '$i202.5', '$index_step204.6']
2021-05-27 22:37:58,793 dispatch pc=208, inst=BINARY_ADD(arg=None, lineno=45)
2021-05-27 22:37:58,793 stack ['$phi196.0', '$phi196.1', '$interp_win198.3', '$offset200.4', '$206binary_multiply.7']
2021-05-27 22:37:58,793 dispatch pc=210, inst=BINARY_SUBSCR(arg=None, lineno=45)
2021-05-27 22:37:58,793 stack ['$phi196.0', '$phi196.1', '$interp_win198.3', '$208binary_add.8']
2021-05-27 22:37:58,793 dispatch pc=212, inst=LOAD_FAST(arg=14, lineno=45)
2021-05-27 22:37:58,793 stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9']
2021-05-27 22:37:58,794 dispatch pc=214, inst=LOAD_FAST(arg=4, lineno=45)
2021-05-27 22:37:58,794 stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10']
2021-05-27 22:37:58,794 dispatch pc=216, inst=LOAD_FAST(arg=13, lineno=45)
2021-05-27 22:37:58,794 stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$interp_delta214.11']
2021-05-27 22:37:58,794 dispatch pc=218, inst=LOAD_FAST(arg=22, lineno=45)
2021-05-27 22:37:58,794 stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$interp_delta214.11', '$offset216.12']
2021-05-27 22:37:58,794 dispatch pc=220, inst=LOAD_FAST(arg=8, lineno=45)
2021-05-27 22:37:58,794 stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$interp_delta214.11', '$offset216.12', '$i218.13']
2021-05-27 22:37:58,794 dispatch pc=222, inst=BINARY_MULTIPLY(arg=None, lineno=45)
2021-05-27 22:37:58,794 stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$interp_delta214.11', '$offset216.12', '$i218.13', '$index_step220.14']
2021-05-27 22:37:58,794 dispatch pc=224, inst=BINARY_ADD(arg=None, lineno=45)
2021-05-27 22:37:58,795 stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$interp_delta214.11', '$offset216.12', '$222binary_multiply.15']
2021-05-27 22:37:58,795 dispatch pc=226, inst=BINARY_SUBSCR(arg=None, lineno=45)
2021-05-27 22:37:58,795 stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$interp_delta214.11', '$224binary_add.16']
2021-05-27 22:37:58,795 dispatch pc=228, inst=BINARY_MULTIPLY(arg=None, lineno=45)
2021-05-27 22:37:58,795 stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$eta212.10', '$226binary_subscr.17']
2021-05-27 22:37:58,795 dispatch pc=230, inst=BINARY_ADD(arg=None, lineno=45)
2021-05-27 22:37:58,795 stack ['$phi196.0', '$phi196.1', '$210binary_subscr.9', '$228binary_multiply.18']
2021-05-27 22:37:58,795 dispatch pc=232, inst=STORE_FAST(arg=15, lineno=45)
2021-05-27 22:37:58,795 stack ['$phi196.0', '$phi196.1', '$230binary_add.19']
2021-05-27 22:37:58,795 end state. edges=[Edge(pc=234, stack=('$phi196.0', '$phi196.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
2021-05-27 22:37:58,795 pending: deque([State(pc_initial=292 nstack_initial=1), State(pc_initial=234 nstack_initial=2)])
2021-05-27 22:37:58,796 stack: ['$phi292.0']
2021-05-27 22:37:58,796 dispatch pc=292, inst=LOAD_FAST(arg=6, lineno=50)
2021-05-27 22:37:58,796 stack ['$phi292.0']
2021-05-27 22:37:58,796 dispatch pc=294, inst=LOAD_FAST(arg=11, lineno=50)
2021-05-27 22:37:58,796 stack ['$phi292.0', '$scale292.1']
2021-05-27 22:37:58,796 dispatch pc=296, inst=BINARY_SUBTRACT(arg=None, lineno=50)
2021-05-27 22:37:58,796 stack ['$phi292.0', '$scale292.1', '$frac294.2']
2021-05-27 22:37:58,796 dispatch pc=298, inst=STORE_FAST(arg=11, lineno=50)
2021-05-27 22:37:58,796 stack ['$phi292.0', '$296binary_subtract.3']
2021-05-27 22:37:58,796 dispatch pc=300, inst=LOAD_FAST(arg=11, lineno=53)
2021-05-27 22:37:58,796 stack ['$phi292.0']
2021-05-27 22:37:58,797 dispatch pc=302, inst=LOAD_FAST(arg=5, lineno=53)
2021-05-27 22:37:58,797 stack ['$phi292.0', '$frac300.4']
2021-05-27 22:37:58,797 dispatch pc=304, inst=BINARY_MULTIPLY(arg=None, lineno=53)
2021-05-27 22:37:58,797 stack ['$phi292.0', '$frac300.4', '$num_table302.5']
2021-05-27 22:37:58,797 dispatch pc=306, inst=STORE_FAST(arg=12, lineno=53)
2021-05-27 22:37:58,797 stack ['$phi292.0', '$304binary_multiply.6']
2021-05-27 22:37:58,797 dispatch pc=308, inst=LOAD_GLOBAL(arg=1, lineno=54)
2021-05-27 22:37:58,797 stack ['$phi292.0']
2021-05-27 22:37:58,797 dispatch pc=310, inst=LOAD_FAST(arg=12, lineno=54)
2021-05-27 22:37:58,797 stack ['$phi292.0', '$308load_global.7']
2021-05-27 22:37:58,797 dispatch pc=312, inst=CALL_FUNCTION(arg=1, lineno=54)
2021-05-27 22:37:58,798 stack ['$phi292.0', '$308load_global.7', '$index_frac310.8']
2021-05-27 22:37:58,798 dispatch pc=314, inst=STORE_FAST(arg=13, lineno=54)
2021-05-27 22:37:58,798 stack ['$phi292.0', '$312call_function.9']
2021-05-27 22:37:58,798 dispatch pc=316, inst=LOAD_FAST(arg=12, lineno=57)
2021-05-27 22:37:58,798 stack ['$phi292.0']
2021-05-27 22:37:58,798 dispatch pc=318, inst=LOAD_FAST(arg=13, lineno=57)
2021-05-27 22:37:58,798 stack ['$phi292.0', '$index_frac316.10']
2021-05-27 22:37:58,798 dispatch pc=320, inst=BINARY_SUBTRACT(arg=None, lineno=57)
2021-05-27 22:37:58,798 stack ['$phi292.0', '$index_frac316.10', '$offset318.11']
2021-05-27 22:37:58,798 dispatch pc=322, inst=STORE_FAST(arg=14, lineno=57)
2021-05-27 22:37:58,798 stack ['$phi292.0', '$320binary_subtract.12']
2021-05-27 22:37:58,799 dispatch pc=324, inst=LOAD_GLOBAL(arg=0, lineno=60)
2021-05-27 22:37:58,799 stack ['$phi292.0']
2021-05-27 22:37:58,799 dispatch pc=326, inst=LOAD_FAST(arg=17, lineno=60)
2021-05-27 22:37:58,799 stack ['$phi292.0', '$324load_global.13']
2021-05-27 22:37:58,799 dispatch pc=328, inst=LOAD_FAST(arg=10, lineno=60)
2021-05-27 22:37:58,799 stack ['$phi292.0', '$324load_global.13', '$n_orig326.14']
2021-05-27 22:37:58,799 dispatch pc=330, inst=BINARY_SUBTRACT(arg=None, lineno=60)
2021-05-27 22:37:58,799 stack ['$phi292.0', '$324load_global.13', '$n_orig326.14', '$n328.15']
2021-05-27 22:37:58,799 dispatch pc=332, inst=LOAD_CONST(arg=4, lineno=60)
2021-05-27 22:37:58,799 stack ['$phi292.0', '$324load_global.13', '$330binary_subtract.16']
2021-05-27 22:37:58,800 dispatch pc=334, inst=BINARY_SUBTRACT(arg=None, lineno=60)
2021-05-27 22:37:58,800 stack ['$phi292.0', '$324load_global.13', '$330binary_subtract.16', '$const332.17']
2021-05-27 22:37:58,800 dispatch pc=336, inst=LOAD_FAST(arg=16, lineno=60)
2021-05-27 22:37:58,800 stack ['$phi292.0', '$324load_global.13', '$334binary_subtract.18']
2021-05-27 22:37:58,800 dispatch pc=338, inst=LOAD_FAST(arg=13, lineno=60)
2021-05-27 22:37:58,800 stack ['$phi292.0', '$324load_global.13', '$334binary_subtract.18', '$nwin336.19']
2021-05-27 22:37:58,800 dispatch pc=340, inst=BINARY_SUBTRACT(arg=None, lineno=60)
2021-05-27 22:37:58,800 stack ['$phi292.0', '$324load_global.13', '$334binary_subtract.18', '$nwin336.19', '$offset338.20']
2021-05-27 22:37:58,800 dispatch pc=342, inst=LOAD_FAST(arg=8, lineno=60)
2021-05-27 22:37:58,800 stack ['$phi292.0', '$324load_global.13', '$334binary_subtract.18', '$340binary_subtract.21']
2021-05-27 22:37:58,800 dispatch pc=344, inst=BINARY_FLOOR_DIVIDE(arg=None, lineno=60)
2021-05-27 22:37:58,801 stack ['$phi292.0', '$324load_global.13', '$334binary_subtract.18', '$340binary_subtract.21', '$index_step342.22']
2021-05-27 22:37:58,801 dispatch pc=346, inst=CALL_FUNCTION(arg=2, lineno=60)
2021-05-27 22:37:58,801 stack ['$phi292.0', '$324load_global.13', '$334binary_subtract.18', '$344binary_floor_divide.23']
2021-05-27 22:37:58,801 dispatch pc=348, inst=STORE_FAST(arg=24, lineno=60)
2021-05-27 22:37:58,801 stack ['$phi292.0', '$346call_function.24']
2021-05-27 22:37:58,801 end state. edges=[Edge(pc=350, stack=('$phi292.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
2021-05-27 22:37:58,801 pending: deque([State(pc_initial=234 nstack_initial=2), State(pc_initial=350 nstack_initial=1)])
2021-05-27 22:37:58,801 stack: ['$phi234.0', '$phi234.1']
2021-05-27 22:37:58,801 dispatch pc=234, inst=SETUP_LOOP(arg=52, lineno=46)
2021-05-27 22:37:58,801 stack ['$phi234.0', '$phi234.1']
2021-05-27 22:37:58,801 dispatch pc=236, inst=LOAD_GLOBAL(arg=3, lineno=46)
2021-05-27 22:37:58,802 stack ['$phi234.0', '$phi234.1']
2021-05-27 22:37:58,802 dispatch pc=238, inst=LOAD_FAST(arg=19, lineno=46)
2021-05-27 22:37:58,802 stack ['$phi234.0', '$phi234.1', '$236load_global.2']
2021-05-27 22:37:58,802 dispatch pc=240, inst=CALL_FUNCTION(arg=1, lineno=46)
2021-05-27 22:37:58,802 stack ['$phi234.0', '$phi234.1', '$236load_global.2', '$n_channels238.3']
2021-05-27 22:37:58,802 dispatch pc=242, inst=GET_ITER(arg=None, lineno=46)
2021-05-27 22:37:58,802 stack ['$phi234.0', '$phi234.1', '$240call_function.4']
2021-05-27 22:37:58,802 end state. edges=[Edge(pc=244, stack=('$phi234.0', '$phi234.1', '$242get_iter.5'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
2021-05-27 22:37:58,802 pending: deque([State(pc_initial=350 nstack_initial=1), State(pc_initial=244 nstack_initial=3)])
2021-05-27 22:37:58,802 stack: ['$phi350.0']
2021-05-27 22:37:58,803 dispatch pc=350, inst=SETUP_LOOP(arg=114, lineno=61)
2021-05-27 22:37:58,803 stack ['$phi350.0']
2021-05-27 22:37:58,803 dispatch pc=352, inst=LOAD_GLOBAL(arg=3, lineno=61)
2021-05-27 22:37:58,803 stack ['$phi350.0']
2021-05-27 22:37:58,803 dispatch pc=354, inst=LOAD_FAST(arg=24, lineno=61)
2021-05-27 22:37:58,803 stack ['$phi350.0', '$352load_global.1']
2021-05-27 22:37:58,803 dispatch pc=356, inst=CALL_FUNCTION(arg=1, lineno=61)
2021-05-27 22:37:58,803 stack ['$phi350.0', '$352load_global.1', '$k_max354.2']
2021-05-27 22:37:58,803 dispatch pc=358, inst=GET_ITER(arg=None, lineno=61)
2021-05-27 22:37:58,803 stack ['$phi350.0', '$356call_function.3']
2021-05-27 22:37:58,803 end state. edges=[Edge(pc=360, stack=('$phi350.0', '$358get_iter.4'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
2021-05-27 22:37:58,804 pending: deque([State(pc_initial=244 nstack_initial=3), State(pc_initial=360 nstack_initial=2)])
2021-05-27 22:37:58,804 stack: ['$phi244.0', '$phi244.1', '$phi244.2']
2021-05-27 22:37:58,804 dispatch pc=244, inst=FOR_ITER(arg=40, lineno=46)
2021-05-27 22:37:58,804 stack ['$phi244.0', '$phi244.1', '$phi244.2']
2021-05-27 22:37:58,804 end state. edges=[Edge(pc=286, stack=('$phi244.0', '$phi244.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0), Edge(pc=246, stack=('$phi244.0', '$phi244.1', '$phi244.2', '$244for_iter.4'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
2021-05-27 22:37:58,804 pending: deque([State(pc_initial=360 nstack_initial=2), State(pc_initial=286 nstack_initial=2), State(pc_initial=246 nstack_initial=4)])
2021-05-27 22:37:58,804 stack: ['$phi360.0', '$phi360.1']
2021-05-27 22:37:58,804 dispatch pc=360, inst=FOR_ITER(arg=102, lineno=61)
2021-05-27 22:37:58,804 stack ['$phi360.0', '$phi360.1']
2021-05-27 22:37:58,804 end state. edges=[Edge(pc=464, stack=('$phi360.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0), Edge(pc=362, stack=('$phi360.0', '$phi360.1', '$360for_iter.3'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
2021-05-27 22:37:58,805 pending: deque([State(pc_initial=286 nstack_initial=2), State(pc_initial=246 nstack_initial=4), State(pc_initial=464 nstack_initial=1), State(pc_initial=362 nstack_initial=3)])
2021-05-27 22:37:58,805 stack: ['$phi286.0', '$phi286.1']
2021-05-27 22:37:58,805 dispatch pc=286, inst=POP_BLOCK(arg=None, lineno=47)
2021-05-27 22:37:58,805 stack ['$phi286.0', '$phi286.1']
2021-05-27 22:37:58,805 end state. edges=[Edge(pc=288, stack=('$phi286.0', '$phi286.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
2021-05-27 22:37:58,805 pending: deque([State(pc_initial=246 nstack_initial=4), State(pc_initial=464 nstack_initial=1), State(pc_initial=362 nstack_initial=3), State(pc_initial=288 nstack_initial=2)])
2021-05-27 22:37:58,805 stack: ['$phi246.0', '$phi246.1', '$phi246.2', '$phi246.3']
2021-05-27 22:37:58,805 dispatch pc=246, inst=STORE_FAST(arg=23, lineno=46)
2021-05-27 22:37:58,805 stack ['$phi246.0', '$phi246.1', '$phi246.2', '$phi246.3']
2021-05-27 22:37:58,805 dispatch pc=248, inst=LOAD_FAST(arg=1, lineno=47)
2021-05-27 22:37:58,806 stack ['$phi246.0', '$phi246.1', '$phi246.2']
2021-05-27 22:37:58,806 dispatch pc=250, inst=LOAD_FAST(arg=20, lineno=47)
2021-05-27 22:37:58,806 stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4']
2021-05-27 22:37:58,806 dispatch pc=252, inst=LOAD_FAST(arg=23, lineno=47)
2021-05-27 22:37:58,806 stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$t250.5']
2021-05-27 22:37:58,806 dispatch pc=254, inst=BUILD_TUPLE(arg=2, lineno=47)
2021-05-27 22:37:58,806 stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$t250.5', '$j252.6']
2021-05-27 22:37:58,806 dispatch pc=256, inst=DUP_TOP_TWO(arg=None, lineno=47)
2021-05-27 22:37:58,806 stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7']
2021-05-27 22:37:58,806 dispatch pc=258, inst=BINARY_SUBSCR(arg=None, lineno=47)
2021-05-27 22:37:58,807 stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$256dup_top_two.8', '$256dup_top_two.9']
2021-05-27 22:37:58,807 dispatch pc=260, inst=LOAD_FAST(arg=15, lineno=47)
2021-05-27 22:37:58,807 stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10']
2021-05-27 22:37:58,807 dispatch pc=262, inst=LOAD_FAST(arg=0, lineno=47)
2021-05-27 22:37:58,807 stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11']
2021-05-27 22:37:58,807 dispatch pc=264, inst=LOAD_FAST(arg=10, lineno=47)
2021-05-27 22:37:58,807 stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$x262.12']
2021-05-27 22:37:58,807 dispatch pc=266, inst=LOAD_FAST(arg=22, lineno=47)
2021-05-27 22:37:58,807 stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$x262.12', '$n264.13']
2021-05-27 22:37:58,807 dispatch pc=268, inst=BINARY_SUBTRACT(arg=None, lineno=47)
2021-05-27 22:37:58,807 stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$x262.12', '$n264.13', '$i266.14']
2021-05-27 22:37:58,808 dispatch pc=270, inst=LOAD_FAST(arg=23, lineno=47)
2021-05-27 22:37:58,808 stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$x262.12', '$268binary_subtract.15']
2021-05-27 22:37:58,808 dispatch pc=272, inst=BUILD_TUPLE(arg=2, lineno=47)
2021-05-27 22:37:58,808 stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$x262.12', '$268binary_subtract.15', '$j270.16']
2021-05-27 22:37:58,808 dispatch pc=274, inst=BINARY_SUBSCR(arg=None, lineno=47)
2021-05-27 22:37:58,808 stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$x262.12', '$272build_tuple.17']
2021-05-27 22:37:58,808 dispatch pc=276, inst=BINARY_MULTIPLY(arg=None, lineno=47)
2021-05-27 22:37:58,808 stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$weight260.11', '$274binary_subscr.18']
2021-05-27 22:37:58,808 dispatch pc=278, inst=INPLACE_ADD(arg=None, lineno=47)
2021-05-27 22:37:58,808 stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$258binary_subscr.10', '$276binary_multiply.19']
2021-05-27 22:37:58,809 dispatch pc=280, inst=ROT_THREE(arg=None, lineno=47)
2021-05-27 22:37:58,809 stack ['$phi246.0', '$phi246.1', '$phi246.2', '$y248.4', '$254build_tuple.7', '$278inplace_add.20']
2021-05-27 22:37:58,809 dispatch pc=282, inst=STORE_SUBSCR(arg=None, lineno=47)
2021-05-27 22:37:58,809 stack ['$phi246.0', '$phi246.1', '$phi246.2', '$278inplace_add.20', '$y248.4', '$254build_tuple.7']
2021-05-27 22:37:58,809 dispatch pc=284, inst=JUMP_ABSOLUTE(arg=244, lineno=47)
2021-05-27 22:37:58,809 stack ['$phi246.0', '$phi246.1', '$phi246.2']
2021-05-27 22:37:58,809 end state. edges=[Edge(pc=244, stack=('$phi246.0', '$phi246.1', '$phi246.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
2021-05-27 22:37:58,809 pending: deque([State(pc_initial=464 nstack_initial=1), State(pc_initial=362 nstack_initial=3), State(pc_initial=288 nstack_initial=2), State(pc_initial=244 nstack_initial=3)])
2021-05-27 22:37:58,809 stack: ['$phi464.0']
2021-05-27 22:37:58,809 dispatch pc=464, inst=POP_BLOCK(arg=None, lineno=64)
2021-05-27 22:37:58,809 stack ['$phi464.0']
2021-05-27 22:37:58,810 end state. edges=[Edge(pc=466, stack=('$phi464.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
2021-05-27 22:37:58,810 pending: deque([State(pc_initial=362 nstack_initial=3), State(pc_initial=288 nstack_initial=2), State(pc_initial=244 nstack_initial=3), State(pc_initial=466 nstack_initial=1)])
2021-05-27 22:37:58,810 stack: ['$phi362.0', '$phi362.1', '$phi362.2']
2021-05-27 22:37:58,810 dispatch pc=362, inst=STORE_FAST(arg=25, lineno=61)
2021-05-27 22:37:58,810 stack ['$phi362.0', '$phi362.1', '$phi362.2']
2021-05-27 22:37:58,810 dispatch pc=364, inst=LOAD_FAST(arg=3, lineno=62)
2021-05-27 22:37:58,810 stack ['$phi362.0', '$phi362.1']
2021-05-27 22:37:58,810 dispatch pc=366, inst=LOAD_FAST(arg=13, lineno=62)
2021-05-27 22:37:58,810 stack ['$phi362.0', '$phi362.1', '$interp_win364.3']
2021-05-27 22:37:58,810 dispatch pc=368, inst=LOAD_FAST(arg=25, lineno=62)
2021-05-27 22:37:58,810 stack ['$phi362.0', '$phi362.1', '$interp_win364.3', '$offset366.4']
2021-05-27 22:37:58,810 dispatch pc=370, inst=LOAD_FAST(arg=8, lineno=62)
2021-05-27 22:37:58,810 stack ['$phi362.0', '$phi362.1', '$interp_win364.3', '$offset366.4', '$k368.5']
2021-05-27 22:37:58,810 dispatch pc=372, inst=BINARY_MULTIPLY(arg=None, lineno=62)
2021-05-27 22:37:58,810 stack ['$phi362.0', '$phi362.1', '$interp_win364.3', '$offset366.4', '$k368.5', '$index_step370.6']
2021-05-27 22:37:58,810 dispatch pc=374, inst=BINARY_ADD(arg=None, lineno=62)
2021-05-27 22:37:58,810 stack ['$phi362.0', '$phi362.1', '$interp_win364.3', '$offset366.4', '$372binary_multiply.7']
2021-05-27 22:37:58,810 dispatch pc=376, inst=BINARY_SUBSCR(arg=None, lineno=62)
2021-05-27 22:37:58,810 stack ['$phi362.0', '$phi362.1', '$interp_win364.3', '$374binary_add.8']
2021-05-27 22:37:58,810 dispatch pc=378, inst=LOAD_FAST(arg=14, lineno=62)
2021-05-27 22:37:58,810 stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9']
2021-05-27 22:37:58,810 dispatch pc=380, inst=LOAD_FAST(arg=4, lineno=62)
2021-05-27 22:37:58,810 stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10']
2021-05-27 22:37:58,810 dispatch pc=382, inst=LOAD_FAST(arg=13, lineno=62)
2021-05-27 22:37:58,810 stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$interp_delta380.11']
2021-05-27 22:37:58,810 dispatch pc=384, inst=LOAD_FAST(arg=25, lineno=62)
2021-05-27 22:37:58,810 stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$interp_delta380.11', '$offset382.12']
2021-05-27 22:37:58,810 dispatch pc=386, inst=LOAD_FAST(arg=8, lineno=62)
2021-05-27 22:37:58,810 stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$interp_delta380.11', '$offset382.12', '$k384.13']
2021-05-27 22:37:58,810 dispatch pc=388, inst=BINARY_MULTIPLY(arg=None, lineno=62)
2021-05-27 22:37:58,810 stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$interp_delta380.11', '$offset382.12', '$k384.13', '$index_step386.14']
2021-05-27 22:37:58,810 dispatch pc=390, inst=BINARY_ADD(arg=None, lineno=62)
2021-05-27 22:37:58,810 stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$interp_delta380.11', '$offset382.12', '$388binary_multiply.15']
2021-05-27 22:37:58,810 dispatch pc=392, inst=BINARY_SUBSCR(arg=None, lineno=62)
2021-05-27 22:37:58,810 stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$interp_delta380.11', '$390binary_add.16']
2021-05-27 22:37:58,810 dispatch pc=394, inst=BINARY_MULTIPLY(arg=None, lineno=62)
2021-05-27 22:37:58,810 stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$eta378.10', '$392binary_subscr.17']
2021-05-27 22:37:58,810 dispatch pc=396, inst=BINARY_ADD(arg=None, lineno=62)
2021-05-27 22:37:58,810 stack ['$phi362.0', '$phi362.1', '$376binary_subscr.9', '$394binary_multiply.18']
2021-05-27 22:37:58,810 dispatch pc=398, inst=STORE_FAST(arg=15, lineno=62)
2021-05-27 22:37:58,810 stack ['$phi362.0', '$phi362.1', '$396binary_add.19']
2021-05-27 22:37:58,810 end state. edges=[Edge(pc=400, stack=('$phi362.0', '$phi362.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
2021-05-27 22:37:58,810 pending: deque([State(pc_initial=288 nstack_initial=2), State(pc_initial=244 nstack_initial=3), State(pc_initial=466 nstack_initial=1), State(pc_initial=400 nstack_initial=2)])
2021-05-27 22:37:58,810 stack: ['$phi288.0', '$phi288.1']
2021-05-27 22:37:58,810 dispatch pc=288, inst=JUMP_ABSOLUTE(arg=194, lineno=47)
2021-05-27 22:37:58,810 stack ['$phi288.0', '$phi288.1']
2021-05-27 22:37:58,810 end state. edges=[Edge(pc=194, stack=('$phi288.0', '$phi288.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
2021-05-27 22:37:58,810 pending: deque([State(pc_initial=244 nstack_initial=3), State(pc_initial=466 nstack_initial=1), State(pc_initial=400 nstack_initial=2), State(pc_initial=194 nstack_initial=2)])
2021-05-27 22:37:58,810 pending: deque([State(pc_initial=466 nstack_initial=1), State(pc_initial=400 nstack_initial=2), State(pc_initial=194 nstack_initial=2)])
2021-05-27 22:37:58,810 stack: ['$phi466.0']
2021-05-27 22:37:58,810 dispatch pc=466, inst=LOAD_FAST(arg=9, lineno=67)
2021-05-27 22:37:58,810 stack ['$phi466.0']
2021-05-27 22:37:58,810 dispatch pc=468, inst=LOAD_FAST(arg=7, lineno=67)
2021-05-27 22:37:58,810 stack ['$phi466.0', '$time_register466.1']
2021-05-27 22:37:58,810 dispatch pc=470, inst=INPLACE_ADD(arg=None, lineno=67)
2021-05-27 22:37:58,810 stack ['$phi466.0', '$time_register466.1', '$time_increment468.2']
2021-05-27 22:37:58,810 dispatch pc=472, inst=STORE_FAST(arg=9, lineno=67)
2021-05-27 22:37:58,810 stack ['$phi466.0', '$470inplace_add.3']
2021-05-27 22:37:58,810 dispatch pc=474, inst=JUMP_ABSOLUTE(arg=112, lineno=67)
2021-05-27 22:37:58,810 stack ['$phi466.0']
2021-05-27 22:37:58,810 end state. edges=[Edge(pc=112, stack=('$phi466.0',), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), npush=0)]
2021-05-27 22:37:58,810 pending: deque([State(pc_initial=400 nstack_initial=2), State(pc_initial=194 nstack_initial=2), State(pc_initial=112 nstack_initial=1)])
2021-05-27 22:37:58,810 stack: ['$phi400.0', '$phi400.1']
2021-05-27 22:37:58,810 dispatch pc=400, inst=SETUP_LOOP(arg=58, lineno=63)
2021-05-27 22:37:58,810 stack ['$phi400.0', '$phi400.1']
2021-05-27 22:37:58,810 dispatch pc=402, inst=LOAD_GLOBAL(arg=3, lineno=63)
2021-05-27 22:37:58,810 stack ['$phi400.0', '$phi400.1']
2021-05-27 22:37:58,810 dispatch pc=404, inst=LOAD_FAST(arg=19, lineno=63)
2021-05-27 22:37:58,810 stack ['$phi400.0', '$phi400.1', '$402load_global.2']
2021-05-27 22:37:58,810 dispatch pc=406, inst=CALL_FUNCTION(arg=1, lineno=63)
2021-05-27 22:37:58,810 stack ['$phi400.0', '$phi400.1', '$402load_global.2', '$n_channels404.3']
2021-05-27 22:37:58,810 dispatch pc=408, inst=GET_ITER(arg=None, lineno=63)
2021-05-27 22:37:58,810 stack ['$phi400.0', '$phi400.1', '$406call_function.4']
2021-05-27 22:37:58,810 end state. edges=[Edge(pc=410, stack=('$phi400.0', '$phi400.1', '$408get_iter.5'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
2021-05-27 22:37:58,810 pending: deque([State(pc_initial=194 nstack_initial=2), State(pc_initial=112 nstack_initial=1), State(pc_initial=410 nstack_initial=3)])
2021-05-27 22:37:58,810 pending: deque([State(pc_initial=112 nstack_initial=1), State(pc_initial=410 nstack_initial=3)])
2021-05-27 22:37:58,810 pending: deque([State(pc_initial=410 nstack_initial=3)])
2021-05-27 22:37:58,810 stack: ['$phi410.0', '$phi410.1', '$phi410.2']
2021-05-27 22:37:58,810 dispatch pc=410, inst=FOR_ITER(arg=46, lineno=63)
2021-05-27 22:37:58,810 stack ['$phi410.0', '$phi410.1', '$phi410.2']
2021-05-27 22:37:58,810 end state. edges=[Edge(pc=458, stack=('$phi410.0', '$phi410.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0), Edge(pc=412, stack=('$phi410.0', '$phi410.1', '$phi410.2', '$410for_iter.4'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
2021-05-27 22:37:58,810 pending: deque([State(pc_initial=458 nstack_initial=2), State(pc_initial=412 nstack_initial=4)])
2021-05-27 22:37:58,810 stack: ['$phi458.0', '$phi458.1']
2021-05-27 22:37:58,810 dispatch pc=458, inst=POP_BLOCK(arg=None, lineno=64)
2021-05-27 22:37:58,810 stack ['$phi458.0', '$phi458.1']
2021-05-27 22:37:58,810 end state. edges=[Edge(pc=460, stack=('$phi458.0', '$phi458.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
2021-05-27 22:37:58,810 pending: deque([State(pc_initial=412 nstack_initial=4), State(pc_initial=460 nstack_initial=2)])
2021-05-27 22:37:58,810 stack: ['$phi412.0', '$phi412.1', '$phi412.2', '$phi412.3']
2021-05-27 22:37:58,810 dispatch pc=412, inst=STORE_FAST(arg=23, lineno=63)
2021-05-27 22:37:58,810 stack ['$phi412.0', '$phi412.1', '$phi412.2', '$phi412.3']
2021-05-27 22:37:58,810 dispatch pc=414, inst=LOAD_FAST(arg=1, lineno=64)
2021-05-27 22:37:58,810 stack ['$phi412.0', '$phi412.1', '$phi412.2']
2021-05-27 22:37:58,810 dispatch pc=416, inst=LOAD_FAST(arg=20, lineno=64)
2021-05-27 22:37:58,810 stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4']
2021-05-27 22:37:58,810 dispatch pc=418, inst=LOAD_FAST(arg=23, lineno=64)
2021-05-27 22:37:58,810 stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$t416.5']
2021-05-27 22:37:58,810 dispatch pc=420, inst=BUILD_TUPLE(arg=2, lineno=64)
2021-05-27 22:37:58,810 stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$t416.5', '$j418.6']
2021-05-27 22:37:58,810 dispatch pc=422, inst=DUP_TOP_TWO(arg=None, lineno=64)
2021-05-27 22:37:58,810 stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7']
2021-05-27 22:37:58,810 dispatch pc=424, inst=BINARY_SUBSCR(arg=None, lineno=64)
2021-05-27 22:37:58,810 stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$422dup_top_two.8', '$422dup_top_two.9']
2021-05-27 22:37:58,810 dispatch pc=426, inst=LOAD_FAST(arg=15, lineno=64)
2021-05-27 22:37:58,810 stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10']
2021-05-27 22:37:58,810 dispatch pc=428, inst=LOAD_FAST(arg=0, lineno=64)
2021-05-27 22:37:58,810 stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11']
2021-05-27 22:37:58,810 dispatch pc=430, inst=LOAD_FAST(arg=10, lineno=64)
2021-05-27 22:37:58,810 stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12']
2021-05-27 22:37:58,810 dispatch pc=432, inst=LOAD_FAST(arg=25, lineno=64)
2021-05-27 22:37:58,810 stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$n430.13']
2021-05-27 22:37:58,810 dispatch pc=434, inst=BINARY_ADD(arg=None, lineno=64)
2021-05-27 22:37:58,810 stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$n430.13', '$k432.14']
2021-05-27 22:37:58,810 dispatch pc=436, inst=LOAD_CONST(arg=4, lineno=64)
2021-05-27 22:37:58,810 stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$434binary_add.15']
2021-05-27 22:37:58,810 dispatch pc=438, inst=BINARY_ADD(arg=None, lineno=64)
2021-05-27 22:37:58,810 stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$434binary_add.15', '$const436.16']
2021-05-27 22:37:58,810 dispatch pc=440, inst=LOAD_FAST(arg=23, lineno=64)
2021-05-27 22:37:58,810 stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$438binary_add.17']
2021-05-27 22:37:58,810 dispatch pc=442, inst=BUILD_TUPLE(arg=2, lineno=64)
2021-05-27 22:37:58,810 stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$438binary_add.17', '$j440.18']
2021-05-27 22:37:58,810 dispatch pc=444, inst=BINARY_SUBSCR(arg=None, lineno=64)
2021-05-27 22:37:58,810 stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$x428.12', '$442build_tuple.19']
2021-05-27 22:37:58,810 dispatch pc=446, inst=BINARY_MULTIPLY(arg=None, lineno=64)
2021-05-27 22:37:58,810 stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$weight426.11', '$444binary_subscr.20']
2021-05-27 22:37:58,810 dispatch pc=448, inst=INPLACE_ADD(arg=None, lineno=64)
2021-05-27 22:37:58,810 stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$424binary_subscr.10', '$446binary_multiply.21']
2021-05-27 22:37:58,810 dispatch pc=450, inst=ROT_THREE(arg=None, lineno=64)
2021-05-27 22:37:58,810 stack ['$phi412.0', '$phi412.1', '$phi412.2', '$y414.4', '$420build_tuple.7', '$448inplace_add.22']
2021-05-27 22:37:58,810 dispatch pc=452, inst=STORE_SUBSCR(arg=None, lineno=64)
2021-05-27 22:37:58,810 stack ['$phi412.0', '$phi412.1', '$phi412.2', '$448inplace_add.22', '$y414.4', '$420build_tuple.7']
2021-05-27 22:37:58,810 dispatch pc=454, inst=JUMP_ABSOLUTE(arg=410, lineno=64)
2021-05-27 22:37:58,810 stack ['$phi412.0', '$phi412.1', '$phi412.2']
2021-05-27 22:37:58,810 end state. edges=[Edge(pc=410, stack=('$phi412.0', '$phi412.1', '$phi412.2'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), npush=0)]
2021-05-27 22:37:58,810 pending: deque([State(pc_initial=460 nstack_initial=2), State(pc_initial=410 nstack_initial=3)])
2021-05-27 22:37:58,810 stack: ['$phi460.0', '$phi460.1']
2021-05-27 22:37:58,810 dispatch pc=460, inst=JUMP_ABSOLUTE(arg=360, lineno=64)
2021-05-27 22:37:58,810 stack ['$phi460.0', '$phi460.1']
2021-05-27 22:37:58,810 end state. edges=[Edge(pc=360, stack=('$phi460.0', '$phi460.1'), blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), npush=0)]
2021-05-27 22:37:58,810 pending: deque([State(pc_initial=410 nstack_initial=3), State(pc_initial=360 nstack_initial=2)])
2021-05-27 22:37:58,810 pending: deque([State(pc_initial=360 nstack_initial=2)])
2021-05-27 22:37:58,810 -------------------------Prune PHIs-------------------------
2021-05-27 22:37:58,810 Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=100 nstack_initial=0): set(),
             State(pc_initial=112 nstack_initial=1): {'$phi112.0'},
             State(pc_initial=116 nstack_initial=2): {'$phi116.1'},
             State(pc_initial=184 nstack_initial=1): set(),
             State(pc_initial=194 nstack_initial=2): {'$phi194.1'},
             State(pc_initial=196 nstack_initial=3): {'$phi196.2'},
             State(pc_initial=234 nstack_initial=2): set(),
             State(pc_initial=244 nstack_initial=3): {'$phi244.2'},
             State(pc_initial=246 nstack_initial=4): {'$phi246.3'},
             State(pc_initial=286 nstack_initial=2): set(),
             State(pc_initial=288 nstack_initial=2): set(),
             State(pc_initial=290 nstack_initial=1): set(),
             State(pc_initial=292 nstack_initial=1): set(),
             State(pc_initial=350 nstack_initial=1): set(),
             State(pc_initial=360 nstack_initial=2): {'$phi360.1'},
             State(pc_initial=362 nstack_initial=3): {'$phi362.2'},
             State(pc_initial=400 nstack_initial=2): set(),
             State(pc_initial=410 nstack_initial=3): {'$phi410.2'},
             State(pc_initial=412 nstack_initial=4): {'$phi412.3'},
             State(pc_initial=458 nstack_initial=2): set(),
             State(pc_initial=460 nstack_initial=2): set(),
             State(pc_initial=464 nstack_initial=1): set(),
             State(pc_initial=466 nstack_initial=1): set(),
             State(pc_initial=476 nstack_initial=0): set(),
             State(pc_initial=478 nstack_initial=0): set()})
2021-05-27 22:37:58,810 defmap: {'$phi112.0': State(pc_initial=100 nstack_initial=0),
 '$phi116.1': State(pc_initial=112 nstack_initial=1),
 '$phi194.1': State(pc_initial=184 nstack_initial=1),
 '$phi196.2': State(pc_initial=194 nstack_initial=2),
 '$phi244.2': State(pc_initial=234 nstack_initial=2),
 '$phi246.3': State(pc_initial=244 nstack_initial=3),
 '$phi360.1': State(pc_initial=350 nstack_initial=1),
 '$phi362.2': State(pc_initial=360 nstack_initial=2),
 '$phi410.2': State(pc_initial=400 nstack_initial=2),
 '$phi412.3': State(pc_initial=410 nstack_initial=3)}
2021-05-27 22:37:58,810 phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi466.0',
                            State(pc_initial=466 nstack_initial=1))},
             '$phi116.0': {('$phi112.0',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi116.1': {('$112for_iter.2',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi184.0': {('$phi116.0',
                            State(pc_initial=116 nstack_initial=2))},
             '$phi194.0': {('$phi184.0',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi288.0',
                            State(pc_initial=288 nstack_initial=2))},
             '$phi194.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi288.1',
                            State(pc_initial=288 nstack_initial=2))},
             '$phi196.0': {('$phi194.0',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi196.1': {('$phi194.1',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi196.2': {('$194for_iter.3',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi234.0': {('$phi196.0',
                            State(pc_initial=196 nstack_initial=3))},
             '$phi234.1': {('$phi196.1',
                            State(pc_initial=196 nstack_initial=3))},
             '$phi244.0': {('$phi234.0',
                            State(pc_initial=234 nstack_initial=2)),
                           ('$phi246.0',
                            State(pc_initial=246 nstack_initial=4))},
             '$phi244.1': {('$phi234.1',
                            State(pc_initial=234 nstack_initial=2)),
                           ('$phi246.1',
                            State(pc_initial=246 nstack_initial=4))},
             '$phi244.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2)),
                           ('$phi246.2',
                            State(pc_initial=246 nstack_initial=4))},
             '$phi246.0': {('$phi244.0',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi246.1': {('$phi244.1',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi246.2': {('$phi244.2',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi246.3': {('$244for_iter.4',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi286.0': {('$phi244.0',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi286.1': {('$phi244.1',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi288.0': {('$phi286.0',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi288.1': {('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi290.0': {('$phi194.0',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi292.0': {('$phi290.0',
                            State(pc_initial=290 nstack_initial=1))},
             '$phi350.0': {('$phi292.0',
                            State(pc_initial=292 nstack_initial=1))},
             '$phi360.0': {('$phi350.0',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi460.0',
                            State(pc_initial=460 nstack_initial=2))},
             '$phi360.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi460.1',
                            State(pc_initial=460 nstack_initial=2))},
             '$phi362.0': {('$phi360.0',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi362.1': {('$phi360.1',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi362.2': {('$360for_iter.3',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi400.0': {('$phi362.0',
                            State(pc_initial=362 nstack_initial=3))},
             '$phi400.1': {('$phi362.1',
                            State(pc_initial=362 nstack_initial=3))},
             '$phi410.0': {('$phi400.0',
                            State(pc_initial=400 nstack_initial=2)),
                           ('$phi412.0',
                            State(pc_initial=412 nstack_initial=4))},
             '$phi410.1': {('$phi400.1',
                            State(pc_initial=400 nstack_initial=2)),
                           ('$phi412.1',
                            State(pc_initial=412 nstack_initial=4))},
             '$phi410.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2)),
                           ('$phi412.2',
                            State(pc_initial=412 nstack_initial=4))},
             '$phi412.0': {('$phi410.0',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi412.1': {('$phi410.1',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi412.2': {('$phi410.2',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi412.3': {('$410for_iter.4',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi458.0': {('$phi410.0',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi458.1': {('$phi410.1',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi460.0': {('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi460.1': {('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi464.0': {('$phi360.0',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi466.0': {('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))}})
2021-05-27 22:37:58,826 changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi116.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi116.1': {('$112for_iter.2',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi184.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi194.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi194.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi196.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi196.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi196.2': {('$194for_iter.3',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi234.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi234.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi244.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi244.0',
                            State(pc_initial=244 nstack_initial=3)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi244.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi244.1',
                            State(pc_initial=244 nstack_initial=3)),
                           ('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi244.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2)),
                           ('$phi244.2',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi246.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi246.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi246.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.3': {('$244for_iter.4',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi286.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi286.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1)),
                           ('$phi286.1',
                            State(pc_initial=286 nstack_initial=2))},
             '$phi288.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi288.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi290.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi292.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi350.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi360.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi360.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi362.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi362.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi362.2': {('$360for_iter.3',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi400.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi400.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi410.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi410.0',
                            State(pc_initial=410 nstack_initial=3)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi410.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi410.1',
                            State(pc_initial=410 nstack_initial=3)),
                           ('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi410.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2)),
                           ('$phi410.2',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi412.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi412.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi412.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.3': {('$410for_iter.4',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi458.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi458.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1)),
                           ('$phi458.1',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi460.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi460.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi464.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2)),
                           ('$phi464.0',
                            State(pc_initial=464 nstack_initial=1))},
             '$phi466.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))}})
2021-05-27 22:37:58,826 changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi116.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi116.1': {('$112for_iter.2',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi184.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi286.0',
                            State(pc_initial=286 nstack_initial=2)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi194.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi194.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi196.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi196.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi196.2': {('$194for_iter.3',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi234.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi234.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi244.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi244.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi244.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi246.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi246.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.3': {('$244for_iter.4',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi286.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi286.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi288.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi288.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi290.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi292.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi350.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0)),
                           ('$phi458.0',
                            State(pc_initial=458 nstack_initial=2))},
             '$phi360.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi360.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi362.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi362.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi362.2': {('$360for_iter.3',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi400.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi400.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi410.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi410.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi410.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi412.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi412.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.3': {('$410for_iter.4',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi458.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi458.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi460.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi460.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi464.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi466.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))}})
2021-05-27 22:37:58,826 changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi116.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi116.1': {('$112for_iter.2',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi184.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi194.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi194.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi196.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi196.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi196.2': {('$194for_iter.3',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi234.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi234.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi244.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi244.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi244.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi246.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi246.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.3': {('$244for_iter.4',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi286.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi286.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi288.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi288.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi290.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi292.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi350.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi360.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi360.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi362.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi362.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi362.2': {('$360for_iter.3',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi400.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi400.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi410.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi410.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi410.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi412.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi412.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.3': {('$410for_iter.4',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi458.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi458.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi460.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi460.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi464.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi466.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))}})
2021-05-27 22:37:58,826 changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi116.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi116.1': {('$112for_iter.2',
                            State(pc_initial=112 nstack_initial=1))},
             '$phi184.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi194.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi194.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi196.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi196.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi196.2': {('$194for_iter.3',
                            State(pc_initial=194 nstack_initial=2))},
             '$phi234.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi234.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi244.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi244.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi244.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi246.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi246.2': {('$242get_iter.5',
                            State(pc_initial=234 nstack_initial=2))},
             '$phi246.3': {('$244for_iter.4',
                            State(pc_initial=244 nstack_initial=3))},
             '$phi286.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi286.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi288.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi288.1': {('$192get_iter.4',
                            State(pc_initial=184 nstack_initial=1))},
             '$phi290.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi292.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi350.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi360.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi360.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi362.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi362.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi362.2': {('$360for_iter.3',
                            State(pc_initial=360 nstack_initial=2))},
             '$phi400.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi400.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi410.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi410.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi410.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi412.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi412.2': {('$408get_iter.5',
                            State(pc_initial=400 nstack_initial=2))},
             '$phi412.3': {('$410for_iter.4',
                            State(pc_initial=410 nstack_initial=3))},
             '$phi458.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi458.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi460.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi460.1': {('$358get_iter.4',
                            State(pc_initial=350 nstack_initial=1))},
             '$phi464.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))},
             '$phi466.0': {('$110get_iter.3',
                            State(pc_initial=100 nstack_initial=0))}})
2021-05-27 22:37:58,826 keep phismap: {'$phi112.0': {('$110get_iter.3', State(pc_initial=100 nstack_initial=0))},
 '$phi116.1': {('$112for_iter.2', State(pc_initial=112 nstack_initial=1))},
 '$phi194.1': {('$192get_iter.4', State(pc_initial=184 nstack_initial=1))},
 '$phi196.2': {('$194for_iter.3', State(pc_initial=194 nstack_initial=2))},
 '$phi244.2': {('$242get_iter.5', State(pc_initial=234 nstack_initial=2))},
 '$phi246.3': {('$244for_iter.4', State(pc_initial=244 nstack_initial=3))},
 '$phi360.1': {('$358get_iter.4', State(pc_initial=350 nstack_initial=1))},
 '$phi362.2': {('$360for_iter.3', State(pc_initial=360 nstack_initial=2))},
 '$phi410.2': {('$408get_iter.5', State(pc_initial=400 nstack_initial=2))},
 '$phi412.3': {('$410for_iter.4', State(pc_initial=410 nstack_initial=3))}}
2021-05-27 22:37:58,826 new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=100 nstack_initial=0): {'$phi112.0': '$110get_iter.3'},
             State(pc_initial=112 nstack_initial=1): {'$phi116.1': '$112for_iter.2'},
             State(pc_initial=184 nstack_initial=1): {'$phi194.1': '$192get_iter.4'},
             State(pc_initial=194 nstack_initial=2): {'$phi196.2': '$194for_iter.3'},
             State(pc_initial=234 nstack_initial=2): {'$phi244.2': '$242get_iter.5'},
             State(pc_initial=244 nstack_initial=3): {'$phi246.3': '$244for_iter.4'},
             State(pc_initial=350 nstack_initial=1): {'$phi360.1': '$358get_iter.4'},
             State(pc_initial=360 nstack_initial=2): {'$phi362.2': '$360for_iter.3'},
             State(pc_initial=400 nstack_initial=2): {'$phi410.2': '$408get_iter.5'},
             State(pc_initial=410 nstack_initial=3): {'$phi412.3': '$410for_iter.4'}})
2021-05-27 22:37:58,842 ----------------------DONE Prune PHIs-----------------------
2021-05-27 22:37:58,842 block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$const4.1'}), (6, {'res': '$sample_ratio6.2'}), (8, {'func': '$2load_global.0', 'args': ['$const4.1', '$sample_ratio6.2'], 'res': '$8call_function.3'}), (10, {'value': '$8call_function.3'}), (12, {'res': '$const12.4'}), (14, {'res': '$sample_ratio14.5'}), (16, {'lhs': '$const12.4', 'rhs': '$sample_ratio14.5', 'res': '$16binary_true_divide.6'}), (18, {'value': '$16binary_true_divide.6'}), (20, {'res': '$20load_global.7'}), (22, {'res': '$scale22.8'}), (24, {'res': '$num_table24.9'}), (26, {'lhs': '$scale22.8', 'rhs': '$num_table24.9', 'res': '$26binary_multiply.10'}), (28, {'func': '$20load_global.7', 'args': ['$26binary_multiply.10'], 'res': '$28call_function.11'}), (30, {'value': '$28call_function.11'}), (32, {'res': '$const32.12'}), (34, {'value': '$const32.12'}), (36, {'res': '$const36.13'}), (38, {'value': '$const36.13'}), (40, {'res': '$const40.14'}), (42, {'value': '$const40.14'}), (44, {'res': '$const44.15'}), (46, {'value': '$const44.15'}), (48, {'res': '$const48.16'}), (50, {'value': '$const48.16'}), (52, {'res': '$const52.17'}), (54, {'value': '$const52.17'}), (56, {'res': '$const56.18'}), (58, {'value': '$const56.18'}), (60, {'res': '$interp_win60.19'}), (62, {'item': '$interp_win60.19', 'res': '$62load_attr.20'}), (64, {'res': '$const64.21'}), (66, {'index': '$const64.21', 'target': '$62load_attr.20', 'res': '$66binary_subscr.22'}), (68, {'value': '$66binary_subscr.22'}), (70, {'res': '$x70.23'}), (72, {'item': '$x70.23', 'res': '$72load_attr.24'}), (74, {'res': '$const74.25'}), (76, {'index': '$const74.25', 'target': '$72load_attr.24', 'res': '$76binary_subscr.26'}), (78, {'value': '$76binary_subscr.26'}), (80, {'res': '$y80.27'}), (82, {'item': '$y80.27', 'res': '$82load_attr.28'}), (84, {'res': '$const84.29'}), (86, {'index': '$const84.29', 'target': '$82load_attr.28', 'res': '$86binary_subscr.30'}), (88, {'value': '$86binary_subscr.30'}), (90, {'res': '$y90.31'}), (92, {'item': '$y90.31', 'res': '$92load_attr.32'}), (94, {'res': '$const94.33'}), (96, {'index': '$const94.33', 'target': '$92load_attr.32', 'res': '$96binary_subscr.34'}), (98, {'value': '$96binary_subscr.34'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={100: ()})
2021-05-27 22:37:58,842 block_infos State(pc_initial=100 nstack_initial=0):
AdaptBlockInfo(insts=((104, {'res': '$104load_global.0'}), (106, {'res': '$n_out106.1'}), (108, {'func': '$104load_global.0', 'args': ['$n_out106.1'], 'res': '$108call_function.2'}), (110, {'value': '$108call_function.2', 'res': '$110get_iter.3'})), outgoing_phis={'$phi112.0': '$110get_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={112: ('$110get_iter.3',)})
2021-05-27 22:37:58,842 block_infos State(pc_initial=112 nstack_initial=1):
AdaptBlockInfo(insts=((112, {'iterator': '$phi112.0', 'pair': '$112for_iter.1', 'indval': '$112for_iter.2', 'pred': '$112for_iter.3'}),), outgoing_phis={'$phi116.1': '$112for_iter.2'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={476: (), 116: ('$phi112.0', '$112for_iter.2')})
2021-05-27 22:37:58,842 block_infos State(pc_initial=116 nstack_initial=2):
AdaptBlockInfo(insts=((116, {'value': '$phi116.1'}), (118, {'res': '$118load_global.2'}), (120, {'res': '$time_register120.3'}), (122, {'func': '$118load_global.2', 'args': ['$time_register120.3'], 'res': '$122call_function.4'}), (124, {'value': '$122call_function.4'}), (126, {'res': '$scale126.5'}), (128, {'res': '$time_register128.6'}), (130, {'res': '$n130.7'}), (132, {'lhs': '$time_register128.6', 'rhs': '$n130.7', 'res': '$132binary_subtract.8'}), (134, {'lhs': '$scale126.5', 'rhs': '$132binary_subtract.8', 'res': '$134binary_multiply.9'}), (136, {'value': '$134binary_multiply.9'}), (138, {'res': '$frac138.10'}), (140, {'res': '$num_table140.11'}), (142, {'lhs': '$frac138.10', 'rhs': '$num_table140.11', 'res': '$142binary_multiply.12'}), (144, {'value': '$142binary_multiply.12'}), (146, {'res': '$146load_global.13'}), (148, {'res': '$index_frac148.14'}), (150, {'func': '$146load_global.13', 'args': ['$index_frac148.14'], 'res': '$150call_function.15'}), (152, {'value': '$150call_function.15'}), (154, {'res': '$index_frac154.16'}), (156, {'res': '$offset156.17'}), (158, {'lhs': '$index_frac154.16', 'rhs': '$offset156.17', 'res': '$158binary_subtract.18'}), (160, {'value': '$158binary_subtract.18'}), (162, {'res': '$162load_global.19'}), (164, {'res': '$n164.20'}), (166, {'res': '$const166.21'}), (168, {'lhs': '$n164.20', 'rhs': '$const166.21', 'res': '$168binary_add.22'}), (170, {'res': '$nwin170.23'}), (172, {'res': '$offset172.24'}), (174, {'lhs': '$nwin170.23', 'rhs': '$offset172.24', 'res': '$174binary_subtract.25'}), (176, {'res': '$index_step176.26'}), (178, {'lhs': '$174binary_subtract.25', 'rhs': '$index_step176.26', 'res': '$178binary_floor_divide.27'}), (180, {'func': '$162load_global.19', 'args': ['$168binary_add.22', '$178binary_floor_divide.27'], 'res': '$180call_function.28'}), (182, {'value': '$180call_function.28'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={184: ('$phi116.0',)})
2021-05-27 22:37:58,842 block_infos State(pc_initial=184 nstack_initial=1):
AdaptBlockInfo(insts=((186, {'res': '$186load_global.1'}), (188, {'res': '$i_max188.2'}), (190, {'func': '$186load_global.1', 'args': ['$i_max188.2'], 'res': '$190call_function.3'}), (192, {'value': '$190call_function.3', 'res': '$192get_iter.4'})), outgoing_phis={'$phi194.1': '$192get_iter.4'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={194: ('$phi184.0', '$192get_iter.4')})
2021-05-27 22:37:58,842 block_infos State(pc_initial=194 nstack_initial=2):
AdaptBlockInfo(insts=((194, {'iterator': '$phi194.1', 'pair': '$194for_iter.2', 'indval': '$194for_iter.3', 'pred': '$194for_iter.4'}),), outgoing_phis={'$phi196.2': '$194for_iter.3'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={290: ('$phi194.0',), 196: ('$phi194.0', '$phi194.1', '$194for_iter.3')})
2021-05-27 22:37:58,842 block_infos State(pc_initial=196 nstack_initial=3):
AdaptBlockInfo(insts=((196, {'value': '$phi196.2'}), (198, {'res': '$interp_win198.3'}), (200, {'res': '$offset200.4'}), (202, {'res': '$i202.5'}), (204, {'res': '$index_step204.6'}), (206, {'lhs': '$i202.5', 'rhs': '$index_step204.6', 'res': '$206binary_multiply.7'}), (208, {'lhs': '$offset200.4', 'rhs': '$206binary_multiply.7', 'res': '$208binary_add.8'}), (210, {'index': '$208binary_add.8', 'target': '$interp_win198.3', 'res': '$210binary_subscr.9'}), (212, {'res': '$eta212.10'}), (214, {'res': '$interp_delta214.11'}), (216, {'res': '$offset216.12'}), (218, {'res': '$i218.13'}), (220, {'res': '$index_step220.14'}), (222, {'lhs': '$i218.13', 'rhs': '$index_step220.14', 'res': '$222binary_multiply.15'}), (224, {'lhs': '$offset216.12', 'rhs': '$222binary_multiply.15', 'res': '$224binary_add.16'}), (226, {'index': '$224binary_add.16', 'target': '$interp_delta214.11', 'res': '$226binary_subscr.17'}), (228, {'lhs': '$eta212.10', 'rhs': '$226binary_subscr.17', 'res': '$228binary_multiply.18'}), (230, {'lhs': '$210binary_subscr.9', 'rhs': '$228binary_multiply.18', 'res': '$230binary_add.19'}), (232, {'value': '$230binary_add.19'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={234: ('$phi196.0', '$phi196.1')})
2021-05-27 22:37:58,842 block_infos State(pc_initial=234 nstack_initial=2):
AdaptBlockInfo(insts=((236, {'res': '$236load_global.2'}), (238, {'res': '$n_channels238.3'}), (240, {'func': '$236load_global.2', 'args': ['$n_channels238.3'], 'res': '$240call_function.4'}), (242, {'value': '$240call_function.4', 'res': '$242get_iter.5'})), outgoing_phis={'$phi244.2': '$242get_iter.5'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={244: ('$phi234.0', '$phi234.1', '$242get_iter.5')})
2021-05-27 22:37:58,842 block_infos State(pc_initial=244 nstack_initial=3):
AdaptBlockInfo(insts=((244, {'iterator': '$phi244.2', 'pair': '$244for_iter.3', 'indval': '$244for_iter.4', 'pred': '$244for_iter.5'}),), outgoing_phis={'$phi246.3': '$244for_iter.4'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={286: ('$phi244.0', '$phi244.1'), 246: ('$phi244.0', '$phi244.1', '$phi244.2', '$244for_iter.4')})
2021-05-27 22:37:58,842 block_infos State(pc_initial=246 nstack_initial=4):
AdaptBlockInfo(insts=((246, {'value': '$phi246.3'}), (248, {'res': '$y248.4'}), (250, {'res': '$t250.5'}), (252, {'res': '$j252.6'}), (254, {'items': ['$t250.5', '$j252.6'], 'res': '$254build_tuple.7'}), (256, {'orig': ['$y248.4', '$254build_tuple.7'], 'duped': ['$256dup_top_two.8', '$256dup_top_two.9']}), (258, {'index': '$256dup_top_two.9', 'target': '$256dup_top_two.8', 'res': '$258binary_subscr.10'}), (260, {'res': '$weight260.11'}), (262, {'res': '$x262.12'}), (264, {'res': '$n264.13'}), (266, {'res': '$i266.14'}), (268, {'lhs': '$n264.13', 'rhs': '$i266.14', 'res': '$268binary_subtract.15'}), (270, {'res': '$j270.16'}), (272, {'items': ['$268binary_subtract.15', '$j270.16'], 'res': '$272build_tuple.17'}), (274, {'index': '$272build_tuple.17', 'target': '$x262.12', 'res': '$274binary_subscr.18'}), (276, {'lhs': '$weight260.11', 'rhs': '$274binary_subscr.18', 'res': '$276binary_multiply.19'}), (278, {'lhs': '$258binary_subscr.10', 'rhs': '$276binary_multiply.19', 'res': '$278inplace_add.20'}), (282, {'target': '$y248.4', 'index': '$254build_tuple.7', 'value': '$278inplace_add.20'}), (284, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={244: ('$phi246.0', '$phi246.1', '$phi246.2')})
2021-05-27 22:37:58,842 block_infos State(pc_initial=286 nstack_initial=2):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 288, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={288: ('$phi286.0', '$phi286.1')})
2021-05-27 22:37:58,842 block_infos State(pc_initial=288 nstack_initial=2):
AdaptBlockInfo(insts=((288, {}),), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={194: ('$phi288.0', '$phi288.1')})
2021-05-27 22:37:58,842 block_infos State(pc_initial=290 nstack_initial=1):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 292, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={292: ('$phi290.0',)})
2021-05-27 22:37:58,842 block_infos State(pc_initial=292 nstack_initial=1):
AdaptBlockInfo(insts=((292, {'res': '$scale292.1'}), (294, {'res': '$frac294.2'}), (296, {'lhs': '$scale292.1', 'rhs': '$frac294.2', 'res': '$296binary_subtract.3'}), (298, {'value': '$296binary_subtract.3'}), (300, {'res': '$frac300.4'}), (302, {'res': '$num_table302.5'}), (304, {'lhs': '$frac300.4', 'rhs': '$num_table302.5', 'res': '$304binary_multiply.6'}), (306, {'value': '$304binary_multiply.6'}), (308, {'res': '$308load_global.7'}), (310, {'res': '$index_frac310.8'}), (312, {'func': '$308load_global.7', 'args': ['$index_frac310.8'], 'res': '$312call_function.9'}), (314, {'value': '$312call_function.9'}), (316, {'res': '$index_frac316.10'}), (318, {'res': '$offset318.11'}), (320, {'lhs': '$index_frac316.10', 'rhs': '$offset318.11', 'res': '$320binary_subtract.12'}), (322, {'value': '$320binary_subtract.12'}), (324, {'res': '$324load_global.13'}), (326, {'res': '$n_orig326.14'}), (328, {'res': '$n328.15'}), (330, {'lhs': '$n_orig326.14', 'rhs': '$n328.15', 'res': '$330binary_subtract.16'}), (332, {'res': '$const332.17'}), (334, {'lhs': '$330binary_subtract.16', 'rhs': '$const332.17', 'res': '$334binary_subtract.18'}), (336, {'res': '$nwin336.19'}), (338, {'res': '$offset338.20'}), (340, {'lhs': '$nwin336.19', 'rhs': '$offset338.20', 'res': '$340binary_subtract.21'}), (342, {'res': '$index_step342.22'}), (344, {'lhs': '$340binary_subtract.21', 'rhs': '$index_step342.22', 'res': '$344binary_floor_divide.23'}), (346, {'func': '$324load_global.13', 'args': ['$334binary_subtract.18', '$344binary_floor_divide.23'], 'res': '$346call_function.24'}), (348, {'value': '$346call_function.24'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={350: ('$phi292.0',)})
2021-05-27 22:37:58,842 block_infos State(pc_initial=350 nstack_initial=1):
AdaptBlockInfo(insts=((352, {'res': '$352load_global.1'}), (354, {'res': '$k_max354.2'}), (356, {'func': '$352load_global.1', 'args': ['$k_max354.2'], 'res': '$356call_function.3'}), (358, {'value': '$356call_function.3', 'res': '$358get_iter.4'})), outgoing_phis={'$phi360.1': '$358get_iter.4'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={360: ('$phi350.0', '$358get_iter.4')})
2021-05-27 22:37:58,842 block_infos State(pc_initial=360 nstack_initial=2):
AdaptBlockInfo(insts=((360, {'iterator': '$phi360.1', 'pair': '$360for_iter.2', 'indval': '$360for_iter.3', 'pred': '$360for_iter.4'}),), outgoing_phis={'$phi362.2': '$360for_iter.3'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={464: ('$phi360.0',), 362: ('$phi360.0', '$phi360.1', '$360for_iter.3')})
2021-05-27 22:37:58,842 block_infos State(pc_initial=362 nstack_initial=3):
AdaptBlockInfo(insts=((362, {'value': '$phi362.2'}), (364, {'res': '$interp_win364.3'}), (366, {'res': '$offset366.4'}), (368, {'res': '$k368.5'}), (370, {'res': '$index_step370.6'}), (372, {'lhs': '$k368.5', 'rhs': '$index_step370.6', 'res': '$372binary_multiply.7'}), (374, {'lhs': '$offset366.4', 'rhs': '$372binary_multiply.7', 'res': '$374binary_add.8'}), (376, {'index': '$374binary_add.8', 'target': '$interp_win364.3', 'res': '$376binary_subscr.9'}), (378, {'res': '$eta378.10'}), (380, {'res': '$interp_delta380.11'}), (382, {'res': '$offset382.12'}), (384, {'res': '$k384.13'}), (386, {'res': '$index_step386.14'}), (388, {'lhs': '$k384.13', 'rhs': '$index_step386.14', 'res': '$388binary_multiply.15'}), (390, {'lhs': '$offset382.12', 'rhs': '$388binary_multiply.15', 'res': '$390binary_add.16'}), (392, {'index': '$390binary_add.16', 'target': '$interp_delta380.11', 'res': '$392binary_subscr.17'}), (394, {'lhs': '$eta378.10', 'rhs': '$392binary_subscr.17', 'res': '$394binary_multiply.18'}), (396, {'lhs': '$376binary_subscr.9', 'rhs': '$394binary_multiply.18', 'res': '$396binary_add.19'}), (398, {'value': '$396binary_add.19'})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={400: ('$phi362.0', '$phi362.1')})
2021-05-27 22:37:58,842 block_infos State(pc_initial=400 nstack_initial=2):
AdaptBlockInfo(insts=((402, {'res': '$402load_global.2'}), (404, {'res': '$n_channels404.3'}), (406, {'func': '$402load_global.2', 'args': ['$n_channels404.3'], 'res': '$406call_function.4'}), (408, {'value': '$406call_function.4', 'res': '$408get_iter.5'})), outgoing_phis={'$phi410.2': '$408get_iter.5'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={410: ('$phi400.0', '$phi400.1', '$408get_iter.5')})
2021-05-27 22:37:58,842 block_infos State(pc_initial=410 nstack_initial=3):
AdaptBlockInfo(insts=((410, {'iterator': '$phi410.2', 'pair': '$410for_iter.3', 'indval': '$410for_iter.4', 'pred': '$410for_iter.5'}),), outgoing_phis={'$phi412.3': '$410for_iter.4'}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={458: ('$phi410.0', '$phi410.1'), 412: ('$phi410.0', '$phi410.1', '$phi410.2', '$410for_iter.4')})
2021-05-27 22:37:58,842 block_infos State(pc_initial=412 nstack_initial=4):
AdaptBlockInfo(insts=((412, {'value': '$phi412.3'}), (414, {'res': '$y414.4'}), (416, {'res': '$t416.5'}), (418, {'res': '$j418.6'}), (420, {'items': ['$t416.5', '$j418.6'], 'res': '$420build_tuple.7'}), (422, {'orig': ['$y414.4', '$420build_tuple.7'], 'duped': ['$422dup_top_two.8', '$422dup_top_two.9']}), (424, {'index': '$422dup_top_two.9', 'target': '$422dup_top_two.8', 'res': '$424binary_subscr.10'}), (426, {'res': '$weight426.11'}), (428, {'res': '$x428.12'}), (430, {'res': '$n430.13'}), (432, {'res': '$k432.14'}), (434, {'lhs': '$n430.13', 'rhs': '$k432.14', 'res': '$434binary_add.15'}), (436, {'res': '$const436.16'}), (438, {'lhs': '$434binary_add.15', 'rhs': '$const436.16', 'res': '$438binary_add.17'}), (440, {'res': '$j440.18'}), (442, {'items': ['$438binary_add.17', '$j440.18'], 'res': '$442build_tuple.19'}), (444, {'index': '$442build_tuple.19', 'target': '$x428.12', 'res': '$444binary_subscr.20'}), (446, {'lhs': '$weight426.11', 'rhs': '$444binary_subscr.20', 'res': '$446binary_multiply.21'}), (448, {'lhs': '$424binary_subscr.10', 'rhs': '$446binary_multiply.21', 'res': '$448inplace_add.22'}), (452, {'target': '$y414.4', 'index': '$420build_tuple.7', 'value': '$448inplace_add.22'}), (454, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={410: ('$phi412.0', '$phi412.1', '$phi412.2')})
2021-05-27 22:37:58,842 block_infos State(pc_initial=458 nstack_initial=2):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 460, 'entry_stack': 2, 'stack_depth': 2, 'handler': None}), active_try_block=None, outgoing_edgepushed={460: ('$phi458.0', '$phi458.1')})
2021-05-27 22:37:58,842 block_infos State(pc_initial=460 nstack_initial=2):
AdaptBlockInfo(insts=((460, {}),), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={360: ('$phi460.0', '$phi460.1')})
2021-05-27 22:37:58,842 block_infos State(pc_initial=464 nstack_initial=1):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None}, {'kind': BlockKind(LOOP), 'end': 466, 'entry_stack': 1, 'stack_depth': 1, 'handler': None}), active_try_block=None, outgoing_edgepushed={466: ('$phi464.0',)})
2021-05-27 22:37:58,842 block_infos State(pc_initial=466 nstack_initial=1):
AdaptBlockInfo(insts=((466, {'res': '$time_register466.1'}), (468, {'res': '$time_increment468.2'}), (470, {'lhs': '$time_register466.1', 'rhs': '$time_increment468.2', 'res': '$470inplace_add.3'}), (472, {'value': '$470inplace_add.3'}), (474, {})), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={112: ('$phi466.0',)})
2021-05-27 22:37:58,842 block_infos State(pc_initial=476 nstack_initial=0):
AdaptBlockInfo(insts=(), outgoing_phis={}, blockstack=({'kind': BlockKind(LOOP), 'end': 478, 'entry_stack': 0, 'stack_depth': 0, 'handler': None},), active_try_block=None, outgoing_edgepushed={478: ()})
2021-05-27 22:37:58,842 block_infos State(pc_initial=478 nstack_initial=0):
AdaptBlockInfo(insts=((478, {'res': '$const478.0'}), (480, {'retval': '$const478.0', 'castval': '$480return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2021-05-27 22:37:58,842 label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    sample_ratio = arg(2, name=sample_ratio) ['sample_ratio']
    interp_win = arg(3, name=interp_win)     ['interp_win']
    interp_delta = arg(4, name=interp_delta) ['interp_delta']
    num_table = arg(5, name=num_table)       ['num_table']
    $2load_global.0 = global(min: <built-in function min>) ['$2load_global.0']
    $const4.1 = const(float, 1.0)            ['$const4.1']
    scale = call $2load_global.0($const4.1, sample_ratio, func=$2load_global.0, args=[Var($const4.1, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None) ['$2load_global.0', '$const4.1', 'sample_ratio', 'scale']
    $const12.4 = const(float, 1.0)           ['$const12.4']
    time_increment = $const12.4 / sample_ratio ['$const12.4', 'sample_ratio', 'time_increment']
    $20load_global.7 = global(int: <class 'int'>) ['$20load_global.7']
    $26binary_multiply.10 = scale * num_table ['$26binary_multiply.10', 'num_table', 'scale']
    index_step = call $20load_global.7($26binary_multiply.10, func=$20load_global.7, args=[Var($26binary_multiply.10, interpn.py:12)], kws=(), vararg=None) ['$20load_global.7', '$26binary_multiply.10', 'index_step']
    time_register = const(float, 0.0)        ['time_register']
    n = const(int, 0)                        ['n']
    frac = const(float, 0.0)                 ['frac']
    index_frac = const(float, 0.0)           ['index_frac']
    offset = const(int, 0)                   ['offset']
    eta = const(float, 0.0)                  ['eta']
    weight = const(float, 0.0)               ['weight']
    $62load_attr.20 = getattr(value=interp_win, attr=shape) ['$62load_attr.20', 'interp_win']
    $const64.21 = const(int, 0)              ['$const64.21']
    nwin = getitem(value=$62load_attr.20, index=$const64.21, fn=<built-in function getitem>) ['$62load_attr.20', '$const64.21', 'nwin']
    $72load_attr.24 = getattr(value=x, attr=shape) ['$72load_attr.24', 'x']
    $const74.25 = const(int, 0)              ['$const74.25']
    n_orig = getitem(value=$72load_attr.24, index=$const74.25, fn=<built-in function getitem>) ['$72load_attr.24', '$const74.25', 'n_orig']
    $82load_attr.28 = getattr(value=y, attr=shape) ['$82load_attr.28', 'y']
    $const84.29 = const(int, 0)              ['$const84.29']
    n_out = getitem(value=$82load_attr.28, index=$const84.29, fn=<built-in function getitem>) ['$82load_attr.28', '$const84.29', 'n_out']
    $92load_attr.32 = getattr(value=y, attr=shape) ['$92load_attr.32', 'y']
    $const94.33 = const(int, 1)              ['$const94.33']
    n_channels = getitem(value=$92load_attr.32, index=$const94.33, fn=<built-in function getitem>) ['$92load_attr.32', '$const94.33', 'n_channels']
    jump 100                                 []
label 100:
    $104load_global.0 = global(range: <class 'range'>) ['$104load_global.0']
    $108call_function.2 = call $104load_global.0(n_out, func=$104load_global.0, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None) ['$104load_global.0', '$108call_function.2', 'n_out']
    $110get_iter.3 = getiter(value=$108call_function.2) ['$108call_function.2', '$110get_iter.3']
    $phi112.0 = $110get_iter.3               ['$110get_iter.3', '$phi112.0']
    jump 112                                 []
label 112:
    $112for_iter.1 = iternext(value=$phi112.0) ['$112for_iter.1', '$phi112.0']
    $112for_iter.2 = pair_first(value=$112for_iter.1) ['$112for_iter.1', '$112for_iter.2']
    $112for_iter.3 = pair_second(value=$112for_iter.1) ['$112for_iter.1', '$112for_iter.3']
    $phi116.1 = $112for_iter.2               ['$112for_iter.2', '$phi116.1']
    branch $112for_iter.3, 116, 476          ['$112for_iter.3']
label 116:
    t = $phi116.1                            ['$phi116.1', 't']
    $118load_global.2 = global(int: <class 'int'>) ['$118load_global.2']
    n = call $118load_global.2(time_register, func=$118load_global.2, args=[Var(time_register, interpn.py:13)], kws=(), vararg=None) ['$118load_global.2', 'n', 'time_register']
    $132binary_subtract.8 = time_register - n ['$132binary_subtract.8', 'n', 'time_register']
    frac = scale * $132binary_subtract.8     ['$132binary_subtract.8', 'frac', 'scale']
    index_frac = frac * num_table            ['frac', 'index_frac', 'num_table']
    $146load_global.13 = global(int: <class 'int'>) ['$146load_global.13']
    offset = call $146load_global.13(index_frac, func=$146load_global.13, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None) ['$146load_global.13', 'index_frac', 'offset']
    eta = index_frac - offset                ['eta', 'index_frac', 'offset']
    $162load_global.19 = global(min: <built-in function min>) ['$162load_global.19']
    $const166.21 = const(int, 1)             ['$const166.21']
    $168binary_add.22 = n + $const166.21     ['$168binary_add.22', '$const166.21', 'n']
    $174binary_subtract.25 = nwin - offset   ['$174binary_subtract.25', 'nwin', 'offset']
    $178binary_floor_divide.27 = $174binary_subtract.25 // index_step ['$174binary_subtract.25', '$178binary_floor_divide.27', 'index_step']
    i_max = call $162load_global.19($168binary_add.22, $178binary_floor_divide.27, func=$162load_global.19, args=[Var($168binary_add.22, interpn.py:42), Var($178binary_floor_divide.27, interpn.py:42)], kws=(), vararg=None) ['$162load_global.19', '$168binary_add.22', '$178binary_floor_divide.27', 'i_max']
    jump 184                                 []
label 184:
    $186load_global.1 = global(range: <class 'range'>) ['$186load_global.1']
    $190call_function.3 = call $186load_global.1(i_max, func=$186load_global.1, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None) ['$186load_global.1', '$190call_function.3', 'i_max']
    $192get_iter.4 = getiter(value=$190call_function.3) ['$190call_function.3', '$192get_iter.4']
    $phi194.1 = $192get_iter.4               ['$192get_iter.4', '$phi194.1']
    jump 194                                 []
label 194:
    $194for_iter.2 = iternext(value=$phi194.1) ['$194for_iter.2', '$phi194.1']
    $194for_iter.3 = pair_first(value=$194for_iter.2) ['$194for_iter.2', '$194for_iter.3']
    $194for_iter.4 = pair_second(value=$194for_iter.2) ['$194for_iter.2', '$194for_iter.4']
    $phi196.2 = $194for_iter.3               ['$194for_iter.3', '$phi196.2']
    branch $194for_iter.4, 196, 290          ['$194for_iter.4']
label 196:
    i = $phi196.2                            ['$phi196.2', 'i']
    $206binary_multiply.7 = i * index_step   ['$206binary_multiply.7', 'i', 'index_step']
    $208binary_add.8 = offset + $206binary_multiply.7 ['$206binary_multiply.7', '$208binary_add.8', 'offset']
    $210binary_subscr.9 = getitem(value=interp_win, index=$208binary_add.8, fn=<built-in function getitem>) ['$208binary_add.8', '$210binary_subscr.9', 'interp_win']
    $222binary_multiply.15 = i * index_step  ['$222binary_multiply.15', 'i', 'index_step']
    $224binary_add.16 = offset + $222binary_multiply.15 ['$222binary_multiply.15', '$224binary_add.16', 'offset']
    $226binary_subscr.17 = getitem(value=interp_delta, index=$224binary_add.16, fn=<built-in function getitem>) ['$224binary_add.16', '$226binary_subscr.17', 'interp_delta']
    $228binary_multiply.18 = eta * $226binary_subscr.17 ['$226binary_subscr.17', '$228binary_multiply.18', 'eta']
    weight = $210binary_subscr.9 + $228binary_multiply.18 ['$210binary_subscr.9', '$228binary_multiply.18', 'weight']
    jump 234                                 []
label 234:
    $236load_global.2 = global(range: <class 'range'>) ['$236load_global.2']
    $240call_function.4 = call $236load_global.2(n_channels, func=$236load_global.2, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None) ['$236load_global.2', '$240call_function.4', 'n_channels']
    $242get_iter.5 = getiter(value=$240call_function.4) ['$240call_function.4', '$242get_iter.5']
    $phi244.2 = $242get_iter.5               ['$242get_iter.5', '$phi244.2']
    jump 244                                 []
label 244:
    $244for_iter.3 = iternext(value=$phi244.2) ['$244for_iter.3', '$phi244.2']
    $244for_iter.4 = pair_first(value=$244for_iter.3) ['$244for_iter.3', '$244for_iter.4']
    $244for_iter.5 = pair_second(value=$244for_iter.3) ['$244for_iter.3', '$244for_iter.5']
    $phi246.3 = $244for_iter.4               ['$244for_iter.4', '$phi246.3']
    branch $244for_iter.5, 246, 286          ['$244for_iter.5']
label 246:
    j = $phi246.3                            ['$phi246.3', 'j']
    $254build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)]) ['$254build_tuple.7', 'j', 't']
    $258binary_subscr.10 = getitem(value=y, index=$254build_tuple.7, fn=<built-in function getitem>) ['$254build_tuple.7', '$258binary_subscr.10', 'y']
    $268binary_subtract.15 = n - i           ['$268binary_subtract.15', 'i', 'n']
    $272build_tuple.17 = build_tuple(items=[Var($268binary_subtract.15, interpn.py:47), Var(j, interpn.py:46)]) ['$268binary_subtract.15', '$272build_tuple.17', 'j']
    $274binary_subscr.18 = getitem(value=x, index=$272build_tuple.17, fn=<built-in function getitem>) ['$272build_tuple.17', '$274binary_subscr.18', 'x']
    $276binary_multiply.19 = weight * $274binary_subscr.18 ['$274binary_subscr.18', '$276binary_multiply.19', 'weight']
    $278inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$258binary_subscr.10, rhs=$276binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined) ['$258binary_subscr.10', '$276binary_multiply.19', '$278inplace_add.20']
    y[$254build_tuple.7] = $278inplace_add.20 ['$254build_tuple.7', '$278inplace_add.20', 'y']
    jump 244                                 []
label 286:
    jump 288                                 []
label 288:
    jump 194                                 []
label 290:
    jump 292                                 []
label 292:
    $296binary_subtract.3 = scale - frac     ['$296binary_subtract.3', 'frac', 'scale']
    frac = $296binary_subtract.3             ['$296binary_subtract.3', 'frac']
    index_frac = frac * num_table            ['frac', 'index_frac', 'num_table']
    $308load_global.7 = global(int: <class 'int'>) ['$308load_global.7']
    offset = call $308load_global.7(index_frac, func=$308load_global.7, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None) ['$308load_global.7', 'index_frac', 'offset']
    eta = index_frac - offset                ['eta', 'index_frac', 'offset']
    $324load_global.13 = global(min: <built-in function min>) ['$324load_global.13']
    $330binary_subtract.16 = n_orig - n      ['$330binary_subtract.16', 'n', 'n_orig']
    $const332.17 = const(int, 1)             ['$const332.17']
    $334binary_subtract.18 = $330binary_subtract.16 - $const332.17 ['$330binary_subtract.16', '$334binary_subtract.18', '$const332.17']
    $340binary_subtract.21 = nwin - offset   ['$340binary_subtract.21', 'nwin', 'offset']
    $344binary_floor_divide.23 = $340binary_subtract.21 // index_step ['$340binary_subtract.21', '$344binary_floor_divide.23', 'index_step']
    k_max = call $324load_global.13($334binary_subtract.18, $344binary_floor_divide.23, func=$324load_global.13, args=[Var($334binary_subtract.18, interpn.py:60), Var($344binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None) ['$324load_global.13', '$334binary_subtract.18', '$344binary_floor_divide.23', 'k_max']
    jump 350                                 []
label 350:
    $352load_global.1 = global(range: <class 'range'>) ['$352load_global.1']
    $356call_function.3 = call $352load_global.1(k_max, func=$352load_global.1, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None) ['$352load_global.1', '$356call_function.3', 'k_max']
    $358get_iter.4 = getiter(value=$356call_function.3) ['$356call_function.3', '$358get_iter.4']
    $phi360.1 = $358get_iter.4               ['$358get_iter.4', '$phi360.1']
    jump 360                                 []
label 360:
    $360for_iter.2 = iternext(value=$phi360.1) ['$360for_iter.2', '$phi360.1']
    $360for_iter.3 = pair_first(value=$360for_iter.2) ['$360for_iter.2', '$360for_iter.3']
    $360for_iter.4 = pair_second(value=$360for_iter.2) ['$360for_iter.2', '$360for_iter.4']
    $phi362.2 = $360for_iter.3               ['$360for_iter.3', '$phi362.2']
    branch $360for_iter.4, 362, 464          ['$360for_iter.4']
label 362:
    k = $phi362.2                            ['$phi362.2', 'k']
    $372binary_multiply.7 = k * index_step   ['$372binary_multiply.7', 'index_step', 'k']
    $374binary_add.8 = offset + $372binary_multiply.7 ['$372binary_multiply.7', '$374binary_add.8', 'offset']
    $376binary_subscr.9 = getitem(value=interp_win, index=$374binary_add.8, fn=<built-in function getitem>) ['$374binary_add.8', '$376binary_subscr.9', 'interp_win']
    $388binary_multiply.15 = k * index_step  ['$388binary_multiply.15', 'index_step', 'k']
    $390binary_add.16 = offset + $388binary_multiply.15 ['$388binary_multiply.15', '$390binary_add.16', 'offset']
    $392binary_subscr.17 = getitem(value=interp_delta, index=$390binary_add.16, fn=<built-in function getitem>) ['$390binary_add.16', '$392binary_subscr.17', 'interp_delta']
    $394binary_multiply.18 = eta * $392binary_subscr.17 ['$392binary_subscr.17', '$394binary_multiply.18', 'eta']
    weight = $376binary_subscr.9 + $394binary_multiply.18 ['$376binary_subscr.9', '$394binary_multiply.18', 'weight']
    jump 400                                 []
label 400:
    $402load_global.2 = global(range: <class 'range'>) ['$402load_global.2']
    $406call_function.4 = call $402load_global.2(n_channels, func=$402load_global.2, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None) ['$402load_global.2', '$406call_function.4', 'n_channels']
    $408get_iter.5 = getiter(value=$406call_function.4) ['$406call_function.4', '$408get_iter.5']
    $phi410.2 = $408get_iter.5               ['$408get_iter.5', '$phi410.2']
    jump 410                                 []
label 410:
    $410for_iter.3 = iternext(value=$phi410.2) ['$410for_iter.3', '$phi410.2']
    $410for_iter.4 = pair_first(value=$410for_iter.3) ['$410for_iter.3', '$410for_iter.4']
    $410for_iter.5 = pair_second(value=$410for_iter.3) ['$410for_iter.3', '$410for_iter.5']
    $phi412.3 = $410for_iter.4               ['$410for_iter.4', '$phi412.3']
    branch $410for_iter.5, 412, 458          ['$410for_iter.5']
label 412:
    j = $phi412.3                            ['$phi412.3', 'j']
    $420build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)]) ['$420build_tuple.7', 'j', 't']
    $424binary_subscr.10 = getitem(value=y, index=$420build_tuple.7, fn=<built-in function getitem>) ['$420build_tuple.7', '$424binary_subscr.10', 'y']
    $434binary_add.15 = n + k                ['$434binary_add.15', 'k', 'n']
    $const436.16 = const(int, 1)             ['$const436.16']
    $438binary_add.17 = $434binary_add.15 + $const436.16 ['$434binary_add.15', '$438binary_add.17', '$const436.16']
    $442build_tuple.19 = build_tuple(items=[Var($438binary_add.17, interpn.py:64), Var(j, interpn.py:46)]) ['$438binary_add.17', '$442build_tuple.19', 'j']
    $444binary_subscr.20 = getitem(value=x, index=$442build_tuple.19, fn=<built-in function getitem>) ['$442build_tuple.19', '$444binary_subscr.20', 'x']
    $446binary_multiply.21 = weight * $444binary_subscr.20 ['$444binary_subscr.20', '$446binary_multiply.21', 'weight']
    $448inplace_add.22 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$424binary_subscr.10, rhs=$446binary_multiply.21, static_lhs=Undefined, static_rhs=Undefined) ['$424binary_subscr.10', '$446binary_multiply.21', '$448inplace_add.22']
    y[$420build_tuple.7] = $448inplace_add.22 ['$420build_tuple.7', '$448inplace_add.22', 'y']
    jump 410                                 []
label 458:
    jump 460                                 []
label 460:
    jump 360                                 []
label 464:
    jump 466                                 []
label 466:
    $470inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined) ['$470inplace_add.3', 'time_increment', 'time_register']
    time_register = $470inplace_add.3        ['$470inplace_add.3', 'time_register']
    jump 112                                 []
label 476:
    jump 478                                 []
label 478:
    $const478.0 = const(NoneType, None)      ['$const478.0']
    $480return_value.1 = cast(value=$const478.0) ['$480return_value.1', '$const478.0']
    return $480return_value.1                ['$480return_value.1']

2021-05-27 22:37:58,904 ==== SSA block analysis pass on 0
2021-05-27 22:37:58,904 Running <numba.core.ssa._GatherDefsHandler object at 0x000000000A84BA20>
2021-05-27 22:37:58,904 on stmt: x = arg(0, name=x)
2021-05-27 22:37:58,904 on stmt: y = arg(1, name=y)
2021-05-27 22:37:58,904 on stmt: sample_ratio = arg(2, name=sample_ratio)
2021-05-27 22:37:58,904 on stmt: interp_win = arg(3, name=interp_win)
2021-05-27 22:37:58,904 on stmt: interp_delta = arg(4, name=interp_delta)
2021-05-27 22:37:58,904 on stmt: num_table = arg(5, name=num_table)
2021-05-27 22:37:58,904 on stmt: $2load_global.0 = global(min: <built-in function min>)
2021-05-27 22:37:58,904 on stmt: $const4.1 = const(float, 1.0)
2021-05-27 22:37:58,904 on stmt: scale = call $2load_global.0($const4.1, sample_ratio, func=$2load_global.0, args=[Var($const4.1, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None)
2021-05-27 22:37:58,904 on stmt: $const12.4 = const(float, 1.0)
2021-05-27 22:37:58,904 on stmt: time_increment = $const12.4 / sample_ratio
2021-05-27 22:37:58,904 on stmt: $20load_global.7 = global(int: <class 'int'>)
2021-05-27 22:37:58,904 on stmt: $26binary_multiply.10 = scale * num_table
2021-05-27 22:37:58,904 on stmt: index_step = call $20load_global.7($26binary_multiply.10, func=$20load_global.7, args=[Var($26binary_multiply.10, interpn.py:12)], kws=(), vararg=None)
2021-05-27 22:37:58,904 on stmt: time_register = const(float, 0.0)
2021-05-27 22:37:58,904 on stmt: n = const(int, 0)
2021-05-27 22:37:58,904 on stmt: frac = const(float, 0.0)
2021-05-27 22:37:58,904 on stmt: index_frac = const(float, 0.0)
2021-05-27 22:37:58,904 on stmt: offset = const(int, 0)
2021-05-27 22:37:58,904 on stmt: eta = const(float, 0.0)
2021-05-27 22:37:58,904 on stmt: weight = const(float, 0.0)
2021-05-27 22:37:58,904 on stmt: $62load_attr.20 = getattr(value=interp_win, attr=shape)
2021-05-27 22:37:58,904 on stmt: $const64.21 = const(int, 0)
2021-05-27 22:37:58,904 on stmt: nwin = static_getitem(value=$62load_attr.20, index=0, index_var=$const64.21, fn=<built-in function getitem>)
2021-05-27 22:37:58,904 on stmt: $72load_attr.24 = getattr(value=x, attr=shape)
2021-05-27 22:37:58,904 on stmt: $const74.25 = const(int, 0)
2021-05-27 22:37:58,904 on stmt: n_orig = static_getitem(value=$72load_attr.24, index=0, index_var=$const74.25, fn=<built-in function getitem>)
2021-05-27 22:37:58,904 on stmt: $82load_attr.28 = getattr(value=y, attr=shape)
2021-05-27 22:37:58,904 on stmt: $const84.29 = const(int, 0)
2021-05-27 22:37:58,904 on stmt: n_out = static_getitem(value=$82load_attr.28, index=0, index_var=$const84.29, fn=<built-in function getitem>)
2021-05-27 22:37:58,904 on stmt: $92load_attr.32 = getattr(value=y, attr=shape)
2021-05-27 22:37:58,904 on stmt: $const94.33 = const(int, 1)
2021-05-27 22:37:58,904 on stmt: n_channels = static_getitem(value=$92load_attr.32, index=1, index_var=$const94.33, fn=<built-in function getitem>)
2021-05-27 22:37:58,904 on stmt: jump 100
2021-05-27 22:37:58,904 ==== SSA block analysis pass on 100
2021-05-27 22:37:58,904 Running <numba.core.ssa._GatherDefsHandler object at 0x000000000A84BA20>
2021-05-27 22:37:58,904 on stmt: $104load_global.0 = global(range: <class 'range'>)
2021-05-27 22:37:58,904 on stmt: $108call_function.2 = call $104load_global.0(n_out, func=$104load_global.0, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None)
2021-05-27 22:37:58,904 on stmt: $110get_iter.3 = getiter(value=$108call_function.2)
2021-05-27 22:37:58,904 on stmt: $phi112.0 = $110get_iter.3
2021-05-27 22:37:58,904 on stmt: jump 112
2021-05-27 22:37:58,904 ==== SSA block analysis pass on 112
2021-05-27 22:37:58,904 Running <numba.core.ssa._GatherDefsHandler object at 0x000000000A84BA20>
2021-05-27 22:37:58,904 on stmt: $112for_iter.1 = iternext(value=$phi112.0)
2021-05-27 22:37:58,904 on stmt: $112for_iter.2 = pair_first(value=$112for_iter.1)
2021-05-27 22:37:58,904 on stmt: $112for_iter.3 = pair_second(value=$112for_iter.1)
2021-05-27 22:37:58,904 on stmt: $phi116.1 = $112for_iter.2
2021-05-27 22:37:58,904 on stmt: branch $112for_iter.3, 116, 476
2021-05-27 22:37:58,904 ==== SSA block analysis pass on 116
2021-05-27 22:37:58,904 Running <numba.core.ssa._GatherDefsHandler object at 0x000000000A84BA20>
2021-05-27 22:37:58,904 on stmt: t = $phi116.1
2021-05-27 22:37:58,904 on stmt: $118load_global.2 = global(int: <class 'int'>)
2021-05-27 22:37:58,904 on stmt: n = call $118load_global.2(time_register, func=$118load_global.2, args=[Var(time_register, interpn.py:13)], kws=(), vararg=None)
2021-05-27 22:37:58,904 on stmt: $132binary_subtract.8 = time_register - n
2021-05-27 22:37:58,904 on stmt: frac = scale * $132binary_subtract.8
2021-05-27 22:37:58,904 on stmt: index_frac = frac * num_table
2021-05-27 22:37:58,904 on stmt: $146load_global.13 = global(int: <class 'int'>)
2021-05-27 22:37:58,904 on stmt: offset = call $146load_global.13(index_frac, func=$146load_global.13, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None)
2021-05-27 22:37:58,904 on stmt: eta = index_frac - offset
2021-05-27 22:37:58,904 on stmt: $162load_global.19 = global(min: <built-in function min>)
2021-05-27 22:37:58,904 on stmt: $const166.21 = const(int, 1)
2021-05-27 22:37:58,904 on stmt: $168binary_add.22 = n + $const166.21
2021-05-27 22:37:58,904 on stmt: $174binary_subtract.25 = nwin - offset
2021-05-27 22:37:58,904 on stmt: $178binary_floor_divide.27 = $174binary_subtract.25 // index_step
2021-05-27 22:37:58,904 on stmt: i_max = call $162load_global.19($168binary_add.22, $178binary_floor_divide.27, func=$162load_global.19, args=[Var($168binary_add.22, interpn.py:42), Var($178binary_floor_divide.27, interpn.py:42)], kws=(), vararg=None)
2021-05-27 22:37:58,920 on stmt: jump 184
2021-05-27 22:37:58,920 ==== SSA block analysis pass on 184
2021-05-27 22:37:58,920 Running <numba.core.ssa._GatherDefsHandler object at 0x000000000A84BA20>
2021-05-27 22:37:58,920 on stmt: $186load_global.1 = global(range: <class 'range'>)
2021-05-27 22:37:58,920 on stmt: $190call_function.3 = call $186load_global.1(i_max, func=$186load_global.1, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None)
2021-05-27 22:37:58,920 on stmt: $192get_iter.4 = getiter(value=$190call_function.3)
2021-05-27 22:37:58,920 on stmt: $phi194.1 = $192get_iter.4
2021-05-27 22:37:58,920 on stmt: jump 194
2021-05-27 22:37:58,920 ==== SSA block analysis pass on 194
2021-05-27 22:37:58,920 Running <numba.core.ssa._GatherDefsHandler object at 0x000000000A84BA20>
2021-05-27 22:37:58,920 on stmt: $194for_iter.2 = iternext(value=$phi194.1)
2021-05-27 22:37:58,920 on stmt: $194for_iter.3 = pair_first(value=$194for_iter.2)
2021-05-27 22:37:58,920 on stmt: $194for_iter.4 = pair_second(value=$194for_iter.2)
2021-05-27 22:37:58,920 on stmt: $phi196.2 = $194for_iter.3
2021-05-27 22:37:58,920 on stmt: branch $194for_iter.4, 196, 290
2021-05-27 22:37:58,920 ==== SSA block analysis pass on 196
2021-05-27 22:37:58,920 Running <numba.core.ssa._GatherDefsHandler object at 0x000000000A84BA20>
2021-05-27 22:37:58,920 on stmt: i = $phi196.2
2021-05-27 22:37:58,920 on stmt: $206binary_multiply.7 = i * index_step
2021-05-27 22:37:58,920 on stmt: $208binary_add.8 = offset + $206binary_multiply.7
2021-05-27 22:37:58,920 on stmt: $210binary_subscr.9 = getitem(value=interp_win, index=$208binary_add.8, fn=<built-in function getitem>)
2021-05-27 22:37:58,920 on stmt: $222binary_multiply.15 = i * index_step
2021-05-27 22:37:58,920 on stmt: $224binary_add.16 = offset + $222binary_multiply.15
2021-05-27 22:37:58,920 on stmt: $226binary_subscr.17 = getitem(value=interp_delta, index=$224binary_add.16, fn=<built-in function getitem>)
2021-05-27 22:37:58,920 on stmt: $228binary_multiply.18 = eta * $226binary_subscr.17
2021-05-27 22:37:58,920 on stmt: weight = $210binary_subscr.9 + $228binary_multiply.18
2021-05-27 22:37:58,920 on stmt: jump 234
2021-05-27 22:37:58,920 ==== SSA block analysis pass on 234
2021-05-27 22:37:58,920 Running <numba.core.ssa._GatherDefsHandler object at 0x000000000A84BA20>
2021-05-27 22:37:58,920 on stmt: $236load_global.2 = global(range: <class 'range'>)
2021-05-27 22:37:58,920 on stmt: $240call_function.4 = call $236load_global.2(n_channels, func=$236load_global.2, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-27 22:37:58,920 on stmt: $242get_iter.5 = getiter(value=$240call_function.4)
2021-05-27 22:37:58,920 on stmt: $phi244.2 = $242get_iter.5
2021-05-27 22:37:58,920 on stmt: jump 244
2021-05-27 22:37:58,920 ==== SSA block analysis pass on 244
2021-05-27 22:37:58,920 Running <numba.core.ssa._GatherDefsHandler object at 0x000000000A84BA20>
2021-05-27 22:37:58,920 on stmt: $244for_iter.3 = iternext(value=$phi244.2)
2021-05-27 22:37:58,920 on stmt: $244for_iter.4 = pair_first(value=$244for_iter.3)
2021-05-27 22:37:58,920 on stmt: $244for_iter.5 = pair_second(value=$244for_iter.3)
2021-05-27 22:37:58,920 on stmt: $phi246.3 = $244for_iter.4
2021-05-27 22:37:58,920 on stmt: branch $244for_iter.5, 246, 286
2021-05-27 22:37:58,920 ==== SSA block analysis pass on 246
2021-05-27 22:37:58,920 Running <numba.core.ssa._GatherDefsHandler object at 0x000000000A84BA20>
2021-05-27 22:37:58,920 on stmt: j = $phi246.3
2021-05-27 22:37:58,920 on stmt: $254build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-27 22:37:58,920 on stmt: $258binary_subscr.10 = getitem(value=y, index=$254build_tuple.7, fn=<built-in function getitem>)
2021-05-27 22:37:58,920 on stmt: $268binary_subtract.15 = n - i
2021-05-27 22:37:58,920 on stmt: $272build_tuple.17 = build_tuple(items=[Var($268binary_subtract.15, interpn.py:47), Var(j, interpn.py:46)])
2021-05-27 22:37:58,920 on stmt: $274binary_subscr.18 = getitem(value=x, index=$272build_tuple.17, fn=<built-in function getitem>)
2021-05-27 22:37:58,920 on stmt: $276binary_multiply.19 = weight * $274binary_subscr.18
2021-05-27 22:37:58,920 on stmt: $278inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$258binary_subscr.10, rhs=$276binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
2021-05-27 22:37:58,920 on stmt: y[$254build_tuple.7] = $278inplace_add.20
2021-05-27 22:37:58,920 on stmt: jump 244
2021-05-27 22:37:58,920 ==== SSA block analysis pass on 286
2021-05-27 22:37:58,920 Running <numba.core.ssa._GatherDefsHandler object at 0x000000000A84BA20>
2021-05-27 22:37:58,920 on stmt: jump 288
2021-05-27 22:37:58,920 ==== SSA block analysis pass on 288
2021-05-27 22:37:58,920 Running <numba.core.ssa._GatherDefsHandler object at 0x000000000A84BA20>
2021-05-27 22:37:58,920 on stmt: jump 194
2021-05-27 22:37:58,920 ==== SSA block analysis pass on 290
2021-05-27 22:37:58,920 Running <numba.core.ssa._GatherDefsHandler object at 0x000000000A84BA20>
2021-05-27 22:37:58,920 on stmt: jump 292
2021-05-27 22:37:58,920 ==== SSA block analysis pass on 292
2021-05-27 22:37:58,920 Running <numba.core.ssa._GatherDefsHandler object at 0x000000000A84BA20>
2021-05-27 22:37:58,920 on stmt: $296binary_subtract.3 = scale - frac
2021-05-27 22:37:58,920 on stmt: frac = $296binary_subtract.3
2021-05-27 22:37:58,920 on stmt: index_frac = frac * num_table
2021-05-27 22:37:58,920 on stmt: $308load_global.7 = global(int: <class 'int'>)
2021-05-27 22:37:58,920 on stmt: offset = call $308load_global.7(index_frac, func=$308load_global.7, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None)
2021-05-27 22:37:58,920 on stmt: eta = index_frac - offset
2021-05-27 22:37:58,920 on stmt: $324load_global.13 = global(min: <built-in function min>)
2021-05-27 22:37:58,920 on stmt: $330binary_subtract.16 = n_orig - n
2021-05-27 22:37:58,920 on stmt: $const332.17 = const(int, 1)
2021-05-27 22:37:58,920 on stmt: $334binary_subtract.18 = $330binary_subtract.16 - $const332.17
2021-05-27 22:37:58,920 on stmt: $340binary_subtract.21 = nwin - offset
2021-05-27 22:37:58,920 on stmt: $344binary_floor_divide.23 = $340binary_subtract.21 // index_step
2021-05-27 22:37:58,920 on stmt: k_max = call $324load_global.13($334binary_subtract.18, $344binary_floor_divide.23, func=$324load_global.13, args=[Var($334binary_subtract.18, interpn.py:60), Var($344binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None)
2021-05-27 22:37:58,920 on stmt: jump 350
2021-05-27 22:37:58,920 ==== SSA block analysis pass on 350
2021-05-27 22:37:58,920 Running <numba.core.ssa._GatherDefsHandler object at 0x000000000A84BA20>
2021-05-27 22:37:58,920 on stmt: $352load_global.1 = global(range: <class 'range'>)
2021-05-27 22:37:58,920 on stmt: $356call_function.3 = call $352load_global.1(k_max, func=$352load_global.1, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None)
2021-05-27 22:37:58,920 on stmt: $358get_iter.4 = getiter(value=$356call_function.3)
2021-05-27 22:37:58,920 on stmt: $phi360.1 = $358get_iter.4
2021-05-27 22:37:58,920 on stmt: jump 360
2021-05-27 22:37:58,920 ==== SSA block analysis pass on 360
2021-05-27 22:37:58,920 Running <numba.core.ssa._GatherDefsHandler object at 0x000000000A84BA20>
2021-05-27 22:37:58,920 on stmt: $360for_iter.2 = iternext(value=$phi360.1)
2021-05-27 22:37:58,920 on stmt: $360for_iter.3 = pair_first(value=$360for_iter.2)
2021-05-27 22:37:58,920 on stmt: $360for_iter.4 = pair_second(value=$360for_iter.2)
2021-05-27 22:37:58,920 on stmt: $phi362.2 = $360for_iter.3
2021-05-27 22:37:58,920 on stmt: branch $360for_iter.4, 362, 464
2021-05-27 22:37:58,920 ==== SSA block analysis pass on 362
2021-05-27 22:37:58,920 Running <numba.core.ssa._GatherDefsHandler object at 0x000000000A84BA20>
2021-05-27 22:37:58,920 on stmt: k = $phi362.2
2021-05-27 22:37:58,920 on stmt: $372binary_multiply.7 = k * index_step
2021-05-27 22:37:58,920 on stmt: $374binary_add.8 = offset + $372binary_multiply.7
2021-05-27 22:37:58,920 on stmt: $376binary_subscr.9 = getitem(value=interp_win, index=$374binary_add.8, fn=<built-in function getitem>)
2021-05-27 22:37:58,920 on stmt: $388binary_multiply.15 = k * index_step
2021-05-27 22:37:58,920 on stmt: $390binary_add.16 = offset + $388binary_multiply.15
2021-05-27 22:37:58,920 on stmt: $392binary_subscr.17 = getitem(value=interp_delta, index=$390binary_add.16, fn=<built-in function getitem>)
2021-05-27 22:37:58,920 on stmt: $394binary_multiply.18 = eta * $392binary_subscr.17
2021-05-27 22:37:58,920 on stmt: weight = $376binary_subscr.9 + $394binary_multiply.18
2021-05-27 22:37:58,920 on stmt: jump 400
2021-05-27 22:37:58,920 ==== SSA block analysis pass on 400
2021-05-27 22:37:58,920 Running <numba.core.ssa._GatherDefsHandler object at 0x000000000A84BA20>
2021-05-27 22:37:58,920 on stmt: $402load_global.2 = global(range: <class 'range'>)
2021-05-27 22:37:58,920 on stmt: $406call_function.4 = call $402load_global.2(n_channels, func=$402load_global.2, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-27 22:37:58,920 on stmt: $408get_iter.5 = getiter(value=$406call_function.4)
2021-05-27 22:37:58,920 on stmt: $phi410.2 = $408get_iter.5
2021-05-27 22:37:58,920 on stmt: jump 410
2021-05-27 22:37:58,920 ==== SSA block analysis pass on 410
2021-05-27 22:37:58,920 Running <numba.core.ssa._GatherDefsHandler object at 0x000000000A84BA20>
2021-05-27 22:37:58,920 on stmt: $410for_iter.3 = iternext(value=$phi410.2)
2021-05-27 22:37:58,920 on stmt: $410for_iter.4 = pair_first(value=$410for_iter.3)
2021-05-27 22:37:58,920 on stmt: $410for_iter.5 = pair_second(value=$410for_iter.3)
2021-05-27 22:37:58,920 on stmt: $phi412.3 = $410for_iter.4
2021-05-27 22:37:58,920 on stmt: branch $410for_iter.5, 412, 458
2021-05-27 22:37:58,920 ==== SSA block analysis pass on 412
2021-05-27 22:37:58,920 Running <numba.core.ssa._GatherDefsHandler object at 0x000000000A84BA20>
2021-05-27 22:37:58,920 on stmt: j = $phi412.3
2021-05-27 22:37:58,920 on stmt: $420build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-27 22:37:58,920 on stmt: $424binary_subscr.10 = getitem(value=y, index=$420build_tuple.7, fn=<built-in function getitem>)
2021-05-27 22:37:58,920 on stmt: $434binary_add.15 = n + k
2021-05-27 22:37:58,920 on stmt: $const436.16 = const(int, 1)
2021-05-27 22:37:58,920 on stmt: $438binary_add.17 = $434binary_add.15 + $const436.16
2021-05-27 22:37:58,920 on stmt: $442build_tuple.19 = build_tuple(items=[Var($438binary_add.17, interpn.py:64), Var(j, interpn.py:46)])
2021-05-27 22:37:58,920 on stmt: $444binary_subscr.20 = getitem(value=x, index=$442build_tuple.19, fn=<built-in function getitem>)
2021-05-27 22:37:58,920 on stmt: $446binary_multiply.21 = weight * $444binary_subscr.20
2021-05-27 22:37:58,920 on stmt: $448inplace_add.22 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$424binary_subscr.10, rhs=$446binary_multiply.21, static_lhs=Undefined, static_rhs=Undefined)
2021-05-27 22:37:58,920 on stmt: y[$420build_tuple.7] = $448inplace_add.22
2021-05-27 22:37:58,920 on stmt: jump 410
2021-05-27 22:37:58,920 ==== SSA block analysis pass on 458
2021-05-27 22:37:58,920 Running <numba.core.ssa._GatherDefsHandler object at 0x000000000A84BA20>
2021-05-27 22:37:58,920 on stmt: jump 460
2021-05-27 22:37:58,920 ==== SSA block analysis pass on 460
2021-05-27 22:37:58,920 Running <numba.core.ssa._GatherDefsHandler object at 0x000000000A84BA20>
2021-05-27 22:37:58,920 on stmt: jump 360
2021-05-27 22:37:58,920 ==== SSA block analysis pass on 464
2021-05-27 22:37:58,920 Running <numba.core.ssa._GatherDefsHandler object at 0x000000000A84BA20>
2021-05-27 22:37:58,920 on stmt: jump 466
2021-05-27 22:37:58,920 ==== SSA block analysis pass on 466
2021-05-27 22:37:58,920 Running <numba.core.ssa._GatherDefsHandler object at 0x000000000A84BA20>
2021-05-27 22:37:58,920 on stmt: $470inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
2021-05-27 22:37:58,920 on stmt: time_register = $470inplace_add.3
2021-05-27 22:37:58,920 on stmt: jump 112
2021-05-27 22:37:58,920 ==== SSA block analysis pass on 476
2021-05-27 22:37:58,920 Running <numba.core.ssa._GatherDefsHandler object at 0x000000000A84BA20>
2021-05-27 22:37:58,920 on stmt: jump 478
2021-05-27 22:37:58,920 ==== SSA block analysis pass on 478
2021-05-27 22:37:58,920 Running <numba.core.ssa._GatherDefsHandler object at 0x000000000A84BA20>
2021-05-27 22:37:58,920 on stmt: $const478.0 = const(NoneType, None)
2021-05-27 22:37:58,920 on stmt: $480return_value.1 = cast(value=$const478.0)
2021-05-27 22:37:58,920 on stmt: return $480return_value.1
2021-05-27 22:37:58,935 defs defaultdict(<class 'list'>,
            {'$104load_global.0': [<numba.core.ir.Assign object at 0x000000000E0DEDA0>],
             '$108call_function.2': [<numba.core.ir.Assign object at 0x000000000E0CEF98>],
             '$110get_iter.3': [<numba.core.ir.Assign object at 0x000000000E0E21D0>],
             '$112for_iter.1': [<numba.core.ir.Assign object at 0x000000000E0E2DD8>],
             '$112for_iter.2': [<numba.core.ir.Assign object at 0x000000000E0E2E80>],
             '$112for_iter.3': [<numba.core.ir.Assign object at 0x000000000E0E2F28>],
             '$118load_global.2': [<numba.core.ir.Assign object at 0x000000000E0E7208>],
             '$132binary_subtract.8': [<numba.core.ir.Assign object at 0x000000000E0E76D8>],
             '$146load_global.13': [<numba.core.ir.Assign object at 0x000000000E0E7BA8>],
             '$162load_global.19': [<numba.core.ir.Assign object at 0x000000000E0EA160>],
             '$168binary_add.22': [<numba.core.ir.Assign object at 0x000000000E0EA3C8>],
             '$174binary_subtract.25': [<numba.core.ir.Assign object at 0x000000000E0EA5F8>],
             '$178binary_floor_divide.27': [<numba.core.ir.Assign object at 0x000000000E0EA780>],
             '$186load_global.1': [<numba.core.ir.Assign object at 0x000000000E0E77F0>],
             '$190call_function.3': [<numba.core.ir.Assign object at 0x000000000E0E7D68>],
             '$192get_iter.4': [<numba.core.ir.Assign object at 0x000000000E0EA908>],
             '$194for_iter.2': [<numba.core.ir.Assign object at 0x000000000E0EA978>],
             '$194for_iter.3': [<numba.core.ir.Assign object at 0x000000000E0EAA20>],
             '$194for_iter.4': [<numba.core.ir.Assign object at 0x000000000E0EAAC8>],
             '$206binary_multiply.7': [<numba.core.ir.Assign object at 0x000000000E0EE048>],
             '$208binary_add.8': [<numba.core.ir.Assign object at 0x000000000E0EE128>],
             '$20load_global.7': [<numba.core.ir.Assign object at 0x000000000E0CEE48>],
             '$210binary_subscr.9': [<numba.core.ir.Assign object at 0x000000000E0EE208>],
             '$222binary_multiply.15': [<numba.core.ir.Assign object at 0x000000000E0EE630>],
             '$224binary_add.16': [<numba.core.ir.Assign object at 0x000000000E0EE710>],
             '$226binary_subscr.17': [<numba.core.ir.Assign object at 0x000000000E0EE7F0>],
             '$228binary_multiply.18': [<numba.core.ir.Assign object at 0x000000000E0EE8D0>],
             '$236load_global.2': [<numba.core.ir.Assign object at 0x000000000E0EE2B0>],
             '$240call_function.4': [<numba.core.ir.Assign object at 0x000000000E0EEAC8>],
             '$242get_iter.5': [<numba.core.ir.Assign object at 0x000000000E0EEBA8>],
             '$244for_iter.3': [<numba.core.ir.Assign object at 0x000000000E0EED68>],
             '$244for_iter.4': [<numba.core.ir.Assign object at 0x000000000E0EEE10>],
             '$244for_iter.5': [<numba.core.ir.Assign object at 0x000000000E0EEEB8>],
             '$254build_tuple.7': [<numba.core.ir.Assign object at 0x000000000E0F1390>],
             '$258binary_subscr.10': [<numba.core.ir.Assign object at 0x000000000E0F1588>],
             '$268binary_subtract.15': [<numba.core.ir.Assign object at 0x000000000E0F1908>],
             '$26binary_multiply.10': [<numba.core.ir.Assign object at 0x000000000E0DE0B8>],
             '$272build_tuple.17': [<numba.core.ir.Assign object at 0x000000000E0F1A90>],
             '$274binary_subscr.18': [<numba.core.ir.Assign object at 0x000000000E0F1B70>],
             '$276binary_multiply.19': [<numba.core.ir.Assign object at 0x000000000E0F1C50>],
             '$278inplace_add.20': [<numba.core.ir.Assign object at 0x000000000E0F1D30>],
             '$296binary_subtract.3': [<numba.core.ir.Assign object at 0x000000000E0F80F0>],
             '$2load_global.0': [<numba.core.ir.Assign object at 0x000000000E0CE748>],
             '$308load_global.7': [<numba.core.ir.Assign object at 0x000000000E0F84E0>],
             '$324load_global.13': [<numba.core.ir.Assign object at 0x000000000E0F8A58>],
             '$330binary_subtract.16': [<numba.core.ir.Assign object at 0x000000000E0F8C88>],
             '$334binary_subtract.18': [<numba.core.ir.Assign object at 0x000000000E0F8E48>],
             '$340binary_subtract.21': [<numba.core.ir.Assign object at 0x000000000E0FA0B8>],
             '$344binary_floor_divide.23': [<numba.core.ir.Assign object at 0x000000000E0FA240>],
             '$352load_global.1': [<numba.core.ir.Assign object at 0x000000000E0F8828>],
             '$356call_function.3': [<numba.core.ir.Assign object at 0x000000000E0F1E80>],
             '$358get_iter.4': [<numba.core.ir.Assign object at 0x000000000E0FA3C8>],
             '$360for_iter.2': [<numba.core.ir.Assign object at 0x000000000E0FA550>],
             '$360for_iter.3': [<numba.core.ir.Assign object at 0x000000000E0FA5F8>],
             '$360for_iter.4': [<numba.core.ir.Assign object at 0x000000000E0FA6A0>],
             '$372binary_multiply.7': [<numba.core.ir.Assign object at 0x000000000E0FABE0>],
             '$374binary_add.8': [<numba.core.ir.Assign object at 0x000000000E0FACC0>],
             '$376binary_subscr.9': [<numba.core.ir.Assign object at 0x000000000E0FADA0>],
             '$388binary_multiply.15': [<numba.core.ir.Assign object at 0x000000000E0FF208>],
             '$390binary_add.16': [<numba.core.ir.Assign object at 0x000000000E0FF2E8>],
             '$392binary_subscr.17': [<numba.core.ir.Assign object at 0x000000000E0FF3C8>],
             '$394binary_multiply.18': [<numba.core.ir.Assign object at 0x000000000E0FF4A8>],
             '$402load_global.2': [<numba.core.ir.Assign object at 0x000000000E0FA470>],
             '$406call_function.4': [<numba.core.ir.Assign object at 0x000000000E0FF6A0>],
             '$408get_iter.5': [<numba.core.ir.Assign object at 0x000000000E0FF780>],
             '$410for_iter.3': [<numba.core.ir.Assign object at 0x000000000E0FF940>],
             '$410for_iter.4': [<numba.core.ir.Assign object at 0x000000000E0FF9E8>],
             '$410for_iter.5': [<numba.core.ir.Assign object at 0x000000000E0FFA90>],
             '$420build_tuple.7': [<numba.core.ir.Assign object at 0x000000000E0FFEF0>],
             '$424binary_subscr.10': [<numba.core.ir.Assign object at 0x000000000E102128>],
             '$434binary_add.15': [<numba.core.ir.Assign object at 0x000000000E1024A8>],
             '$438binary_add.17': [<numba.core.ir.Assign object at 0x000000000E102668>],
             '$442build_tuple.19': [<numba.core.ir.Assign object at 0x000000000E1027F0>],
             '$444binary_subscr.20': [<numba.core.ir.Assign object at 0x000000000E1028D0>],
             '$446binary_multiply.21': [<numba.core.ir.Assign object at 0x000000000E1029B0>],
             '$448inplace_add.22': [<numba.core.ir.Assign object at 0x000000000E102A90>],
             '$470inplace_add.3': [<numba.core.ir.Assign object at 0x000000000E102E10>],
             '$480return_value.1': [<numba.core.ir.Assign object at 0x000000000E108198>],
             '$62load_attr.20': [<numba.core.ir.Assign object at 0x000000000E0DEE80>],
             '$72load_attr.24': [<numba.core.ir.Assign object at 0x000000000E0E22B0>],
             '$82load_attr.28': [<numba.core.ir.Assign object at 0x000000000E0E26A0>],
             '$92load_attr.32': [<numba.core.ir.Assign object at 0x000000000E0E2A90>],
             '$const12.4': [<numba.core.ir.Assign object at 0x000000000E0CEB38>],
             '$const166.21': [<numba.core.ir.Assign object at 0x000000000E0EA2E8>],
             '$const332.17': [<numba.core.ir.Assign object at 0x000000000E0F8D68>],
             '$const4.1': [<numba.core.ir.Assign object at 0x000000000E0CE828>],
             '$const436.16': [<numba.core.ir.Assign object at 0x000000000E102588>],
             '$const478.0': [<numba.core.ir.Assign object at 0x000000000E1080B8>],
             '$const64.21': [<numba.core.ir.Assign object at 0x000000000E0DEF60>],
             '$const74.25': [<numba.core.ir.Assign object at 0x000000000E0E2390>],
             '$const84.29': [<numba.core.ir.Assign object at 0x000000000E0E2780>],
             '$const94.33': [<numba.core.ir.Assign object at 0x000000000E0E2B70>],
             '$phi112.0': [<numba.core.ir.Assign object at 0x000000000E0DE860>],
             '$phi116.1': [<numba.core.ir.Assign object at 0x000000000E0E2F98>],
             '$phi194.1': [<numba.core.ir.Assign object at 0x000000000E0E7080>],
             '$phi196.2': [<numba.core.ir.Assign object at 0x000000000E0EAB38>],
             '$phi244.2': [<numba.core.ir.Assign object at 0x000000000E0EE4A8>],
             '$phi246.3': [<numba.core.ir.Assign object at 0x000000000E0EEF28>],
             '$phi360.1': [<numba.core.ir.Assign object at 0x000000000E0F8588>],
             '$phi362.2': [<numba.core.ir.Assign object at 0x000000000E0FA710>],
             '$phi410.2': [<numba.core.ir.Assign object at 0x000000000E0FF080>],
             '$phi412.3': [<numba.core.ir.Assign object at 0x000000000E0FFB00>],
             'eta': [<numba.core.ir.Assign object at 0x000000000E0DEAC8>,
                     <numba.core.ir.Assign object at 0x000000000E0E7FD0>,
                     <numba.core.ir.Assign object at 0x000000000E0F8908>],
             'frac': [<numba.core.ir.Assign object at 0x000000000E0DE630>,
                      <numba.core.ir.Assign object at 0x000000000E0E77B8>,
                      <numba.core.ir.Assign object at 0x000000000E0F8160>],
             'i': [<numba.core.ir.Assign object at 0x000000000E0EAC88>],
             'i_max': [<numba.core.ir.Assign object at 0x000000000E0EA860>],
             'index_frac': [<numba.core.ir.Assign object at 0x000000000E0DE7B8>,
                            <numba.core.ir.Assign object at 0x000000000E0E7A58>,
                            <numba.core.ir.Assign object at 0x000000000E0F8390>],
             'index_step': [<numba.core.ir.Assign object at 0x000000000E0DE198>],
             'interp_delta': [<numba.core.ir.Assign object at 0x000000000E0CE588>],
             'interp_win': [<numba.core.ir.Assign object at 0x000000000E0CE4E0>],
             'j': [<numba.core.ir.Assign object at 0x000000000E0F10B8>,
                   <numba.core.ir.Assign object at 0x000000000E0FFC18>],
             'k': [<numba.core.ir.Assign object at 0x000000000E0FA860>],
             'k_max': [<numba.core.ir.Assign object at 0x000000000E0FA320>],
             'n': [<numba.core.ir.Assign object at 0x000000000E0DE4A8>,
                   <numba.core.ir.Assign object at 0x000000000E0E7390>],
             'n_channels': [<numba.core.ir.Assign object at 0x000000000E108828>],
             'n_orig': [<numba.core.ir.Assign object at 0x000000000E108AC8>],
             'n_out': [<numba.core.ir.Assign object at 0x000000000E108B00>],
             'num_table': [<numba.core.ir.Assign object at 0x000000000E0CE630>],
             'nwin': [<numba.core.ir.Assign object at 0x000000000E108B70>],
             'offset': [<numba.core.ir.Assign object at 0x000000000E0DE940>,
                        <numba.core.ir.Assign object at 0x000000000E0E7D30>,
                        <numba.core.ir.Assign object at 0x000000000E0F8668>],
             'sample_ratio': [<numba.core.ir.Assign object at 0x000000000E0CE438>],
             'scale': [<numba.core.ir.Assign object at 0x000000000E0CE9B0>],
             't': [<numba.core.ir.Assign object at 0x000000000E0E7128>],
             'time_increment': [<numba.core.ir.Assign object at 0x000000000E0CECC0>],
             'time_register': [<numba.core.ir.Assign object at 0x000000000E0DE320>,
                               <numba.core.ir.Assign object at 0x000000000E102E80>],
             'weight': [<numba.core.ir.Assign object at 0x000000000E0DEC50>,
                        <numba.core.ir.Assign object at 0x000000000E0EE9B0>,
                        <numba.core.ir.Assign object at 0x000000000E0FF588>],
             'x': [<numba.core.ir.Assign object at 0x000000000E0CE2E8>],
             'y': [<numba.core.ir.Assign object at 0x000000000E0CE390>]})
2021-05-27 22:37:58,935 SSA violators {'offset', 'time_register', 'n', 'weight', 'j', 'index_frac', 'eta', 'frac'}
2021-05-27 22:37:58,935 Fix SSA violator on var offset
2021-05-27 22:37:58,935 ==== SSA block rewrite pass on 0
2021-05-27 22:37:58,935 Running <numba.core.ssa._FreshVarHandler object at 0x000000000A84BA20>
2021-05-27 22:37:58,935 on stmt: x = arg(0, name=x)
2021-05-27 22:37:58,935 on stmt: y = arg(1, name=y)
2021-05-27 22:37:58,935 on stmt: sample_ratio = arg(2, name=sample_ratio)
2021-05-27 22:37:58,935 on stmt: interp_win = arg(3, name=interp_win)
2021-05-27 22:37:58,935 on stmt: interp_delta = arg(4, name=interp_delta)
2021-05-27 22:37:58,935 on stmt: num_table = arg(5, name=num_table)
2021-05-27 22:37:58,935 on stmt: $2load_global.0 = global(min: <built-in function min>)
2021-05-27 22:37:58,935 on stmt: $const4.1 = const(float, 1.0)
2021-05-27 22:37:58,935 on stmt: scale = call $2load_global.0($const4.1, sample_ratio, func=$2load_global.0, args=[Var($const4.1, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None)
2021-05-27 22:37:58,935 on stmt: $const12.4 = const(float, 1.0)
2021-05-27 22:37:58,935 on stmt: time_increment = $const12.4 / sample_ratio
2021-05-27 22:37:58,935 on stmt: $20load_global.7 = global(int: <class 'int'>)
2021-05-27 22:37:58,935 on stmt: $26binary_multiply.10 = scale * num_table
2021-05-27 22:37:58,935 on stmt: index_step = call $20load_global.7($26binary_multiply.10, func=$20load_global.7, args=[Var($26binary_multiply.10, interpn.py:12)], kws=(), vararg=None)
2021-05-27 22:37:58,935 on stmt: time_register = const(float, 0.0)
2021-05-27 22:37:58,935 on stmt: n = const(int, 0)
2021-05-27 22:37:58,935 on stmt: frac = const(float, 0.0)
2021-05-27 22:37:58,935 on stmt: index_frac = const(float, 0.0)
2021-05-27 22:37:58,935 on stmt: offset = const(int, 0)
2021-05-27 22:37:58,935 first assign: offset
2021-05-27 22:37:58,935 replaced with: offset = const(int, 0)
2021-05-27 22:37:58,935 on stmt: eta = const(float, 0.0)
2021-05-27 22:37:58,935 on stmt: weight = const(float, 0.0)
2021-05-27 22:37:58,935 on stmt: $62load_attr.20 = getattr(value=interp_win, attr=shape)
2021-05-27 22:37:58,935 on stmt: $const64.21 = const(int, 0)
2021-05-27 22:37:58,935 on stmt: nwin = static_getitem(value=$62load_attr.20, index=0, index_var=$const64.21, fn=<built-in function getitem>)
2021-05-27 22:37:58,935 on stmt: $72load_attr.24 = getattr(value=x, attr=shape)
2021-05-27 22:37:58,935 on stmt: $const74.25 = const(int, 0)
2021-05-27 22:37:58,935 on stmt: n_orig = static_getitem(value=$72load_attr.24, index=0, index_var=$const74.25, fn=<built-in function getitem>)
2021-05-27 22:37:58,935 on stmt: $82load_attr.28 = getattr(value=y, attr=shape)
2021-05-27 22:37:58,935 on stmt: $const84.29 = const(int, 0)
2021-05-27 22:37:58,935 on stmt: n_out = static_getitem(value=$82load_attr.28, index=0, index_var=$const84.29, fn=<built-in function getitem>)
2021-05-27 22:37:58,935 on stmt: $92load_attr.32 = getattr(value=y, attr=shape)
2021-05-27 22:37:58,935 on stmt: $const94.33 = const(int, 1)
2021-05-27 22:37:58,935 on stmt: n_channels = static_getitem(value=$92load_attr.32, index=1, index_var=$const94.33, fn=<built-in function getitem>)
2021-05-27 22:37:58,935 on stmt: jump 100
2021-05-27 22:37:58,935 ==== SSA block rewrite pass on 100
2021-05-27 22:37:58,935 Running <numba.core.ssa._FreshVarHandler object at 0x000000000A84BA20>
2021-05-27 22:37:58,935 on stmt: $104load_global.0 = global(range: <class 'range'>)
2021-05-27 22:37:58,935 on stmt: $108call_function.2 = call $104load_global.0(n_out, func=$104load_global.0, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None)
2021-05-27 22:37:58,935 on stmt: $110get_iter.3 = getiter(value=$108call_function.2)
2021-05-27 22:37:58,935 on stmt: $phi112.0 = $110get_iter.3
2021-05-27 22:37:58,935 on stmt: jump 112
2021-05-27 22:37:58,935 ==== SSA block rewrite pass on 112
2021-05-27 22:37:58,935 Running <numba.core.ssa._FreshVarHandler object at 0x000000000A84BA20>
2021-05-27 22:37:58,935 on stmt: $112for_iter.1 = iternext(value=$phi112.0)
2021-05-27 22:37:58,935 on stmt: $112for_iter.2 = pair_first(value=$112for_iter.1)
2021-05-27 22:37:58,935 on stmt: $112for_iter.3 = pair_second(value=$112for_iter.1)
2021-05-27 22:37:58,935 on stmt: $phi116.1 = $112for_iter.2
2021-05-27 22:37:58,935 on stmt: branch $112for_iter.3, 116, 476
2021-05-27 22:37:58,935 ==== SSA block rewrite pass on 116
2021-05-27 22:37:58,935 Running <numba.core.ssa._FreshVarHandler object at 0x000000000A84BA20>
2021-05-27 22:37:58,935 on stmt: t = $phi116.1
2021-05-27 22:37:58,935 on stmt: $118load_global.2 = global(int: <class 'int'>)
2021-05-27 22:37:58,935 on stmt: n = call $118load_global.2(time_register, func=$118load_global.2, args=[Var(time_register, interpn.py:13)], kws=(), vararg=None)
2021-05-27 22:37:58,935 on stmt: $132binary_subtract.8 = time_register - n
2021-05-27 22:37:58,935 on stmt: frac = scale * $132binary_subtract.8
2021-05-27 22:37:58,935 on stmt: index_frac = frac * num_table
2021-05-27 22:37:58,935 on stmt: $146load_global.13 = global(int: <class 'int'>)
2021-05-27 22:37:58,935 on stmt: offset = call $146load_global.13(index_frac, func=$146load_global.13, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None)
2021-05-27 22:37:58,935 replaced with: offset.1 = call $146load_global.13(index_frac, func=$146load_global.13, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None)
2021-05-27 22:37:58,935 on stmt: eta = index_frac - offset
2021-05-27 22:37:58,935 on stmt: $162load_global.19 = global(min: <built-in function min>)
2021-05-27 22:37:58,935 on stmt: $const166.21 = const(int, 1)
2021-05-27 22:37:58,935 on stmt: $168binary_add.22 = n + $const166.21
2021-05-27 22:37:58,935 on stmt: $174binary_subtract.25 = nwin - offset
2021-05-27 22:37:58,935 on stmt: $178binary_floor_divide.27 = $174binary_subtract.25 // index_step
2021-05-27 22:37:58,935 on stmt: i_max = call $162load_global.19($168binary_add.22, $178binary_floor_divide.27, func=$162load_global.19, args=[Var($168binary_add.22, interpn.py:42), Var($178binary_floor_divide.27, interpn.py:42)], kws=(), vararg=None)
2021-05-27 22:37:58,935 on stmt: jump 184
2021-05-27 22:37:58,935 ==== SSA block rewrite pass on 184
2021-05-27 22:37:58,935 Running <numba.core.ssa._FreshVarHandler object at 0x000000000A84BA20>
2021-05-27 22:37:58,935 on stmt: $186load_global.1 = global(range: <class 'range'>)
2021-05-27 22:37:58,935 on stmt: $190call_function.3 = call $186load_global.1(i_max, func=$186load_global.1, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None)
2021-05-27 22:37:58,935 on stmt: $192get_iter.4 = getiter(value=$190call_function.3)
2021-05-27 22:37:58,935 on stmt: $phi194.1 = $192get_iter.4
2021-05-27 22:37:58,935 on stmt: jump 194
2021-05-27 22:37:58,935 ==== SSA block rewrite pass on 194
2021-05-27 22:37:58,935 Running <numba.core.ssa._FreshVarHandler object at 0x000000000A84BA20>
2021-05-27 22:37:58,935 on stmt: $194for_iter.2 = iternext(value=$phi194.1)
2021-05-27 22:37:58,935 on stmt: $194for_iter.3 = pair_first(value=$194for_iter.2)
2021-05-27 22:37:58,935 on stmt: $194for_iter.4 = pair_second(value=$194for_iter.2)
2021-05-27 22:37:58,935 on stmt: $phi196.2 = $194for_iter.3
2021-05-27 22:37:58,935 on stmt: branch $194for_iter.4, 196, 290
2021-05-27 22:37:58,935 ==== SSA block rewrite pass on 196
2021-05-27 22:37:58,935 Running <numba.core.ssa._FreshVarHandler object at 0x000000000A84BA20>
2021-05-27 22:37:58,935 on stmt: i = $phi196.2
2021-05-27 22:37:58,935 on stmt: $206binary_multiply.7 = i * index_step
2021-05-27 22:37:58,935 on stmt: $208binary_add.8 = offset + $206binary_multiply.7
2021-05-27 22:37:58,935 on stmt: $210binary_subscr.9 = getitem(value=interp_win, index=$208binary_add.8, fn=<built-in function getitem>)
2021-05-27 22:37:58,935 on stmt: $222binary_multiply.15 = i * index_step
2021-05-27 22:37:58,935 on stmt: $224binary_add.16 = offset + $222binary_multiply.15
2021-05-27 22:37:58,935 on stmt: $226binary_subscr.17 = getitem(value=interp_delta, index=$224binary_add.16, fn=<built-in function getitem>)
2021-05-27 22:37:58,935 on stmt: $228binary_multiply.18 = eta * $226binary_subscr.17
2021-05-27 22:37:58,935 on stmt: weight = $210binary_subscr.9 + $228binary_multiply.18
2021-05-27 22:37:58,935 on stmt: jump 234
2021-05-27 22:37:58,935 ==== SSA block rewrite pass on 234
2021-05-27 22:37:58,935 Running <numba.core.ssa._FreshVarHandler object at 0x000000000A84BA20>
2021-05-27 22:37:58,935 on stmt: $236load_global.2 = global(range: <class 'range'>)
2021-05-27 22:37:58,935 on stmt: $240call_function.4 = call $236load_global.2(n_channels, func=$236load_global.2, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-27 22:37:58,935 on stmt: $242get_iter.5 = getiter(value=$240call_function.4)
2021-05-27 22:37:58,935 on stmt: $phi244.2 = $242get_iter.5
2021-05-27 22:37:58,935 on stmt: jump 244
2021-05-27 22:37:58,935 ==== SSA block rewrite pass on 244
2021-05-27 22:37:58,935 Running <numba.core.ssa._FreshVarHandler object at 0x000000000A84BA20>
2021-05-27 22:37:58,935 on stmt: $244for_iter.3 = iternext(value=$phi244.2)
2021-05-27 22:37:58,935 on stmt: $244for_iter.4 = pair_first(value=$244for_iter.3)
2021-05-27 22:37:58,935 on stmt: $244for_iter.5 = pair_second(value=$244for_iter.3)
2021-05-27 22:37:58,935 on stmt: $phi246.3 = $244for_iter.4
2021-05-27 22:37:58,935 on stmt: branch $244for_iter.5, 246, 286
2021-05-27 22:37:58,935 ==== SSA block rewrite pass on 246
2021-05-27 22:37:58,935 Running <numba.core.ssa._FreshVarHandler object at 0x000000000A84BA20>
2021-05-27 22:37:58,935 on stmt: j = $phi246.3
2021-05-27 22:37:58,935 on stmt: $254build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-27 22:37:58,935 on stmt: $258binary_subscr.10 = getitem(value=y, index=$254build_tuple.7, fn=<built-in function getitem>)
2021-05-27 22:37:58,935 on stmt: $268binary_subtract.15 = n - i
2021-05-27 22:37:58,935 on stmt: $272build_tuple.17 = build_tuple(items=[Var($268binary_subtract.15, interpn.py:47), Var(j, interpn.py:46)])
2021-05-27 22:37:58,935 on stmt: $274binary_subscr.18 = getitem(value=x, index=$272build_tuple.17, fn=<built-in function getitem>)
2021-05-27 22:37:58,935 on stmt: $276binary_multiply.19 = weight * $274binary_subscr.18
2021-05-27 22:37:58,935 on stmt: $278inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$258binary_subscr.10, rhs=$276binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
2021-05-27 22:37:58,935 on stmt: y[$254build_tuple.7] = $278inplace_add.20
2021-05-27 22:37:58,935 on stmt: jump 244
2021-05-27 22:37:58,935 ==== SSA block rewrite pass on 286
2021-05-27 22:37:58,935 Running <numba.core.ssa._FreshVarHandler object at 0x000000000A84BA20>
2021-05-27 22:37:58,935 on stmt: jump 288
2021-05-27 22:37:58,935 ==== SSA block rewrite pass on 288
2021-05-27 22:37:58,935 Running <numba.core.ssa._FreshVarHandler object at 0x000000000A84BA20>
2021-05-27 22:37:58,935 on stmt: jump 194
2021-05-27 22:37:58,935 ==== SSA block rewrite pass on 290
2021-05-27 22:37:58,935 Running <numba.core.ssa._FreshVarHandler object at 0x000000000A84BA20>
2021-05-27 22:37:58,935 on stmt: jump 292
2021-05-27 22:37:58,935 ==== SSA block rewrite pass on 292
2021-05-27 22:37:58,935 Running <numba.core.ssa._FreshVarHandler object at 0x000000000A84BA20>
2021-05-27 22:37:58,935 on stmt: $296binary_subtract.3 = scale - frac
2021-05-27 22:37:58,935 on stmt: frac = $296binary_subtract.3
2021-05-27 22:37:58,935 on stmt: index_frac = frac * num_table
2021-05-27 22:37:58,935 on stmt: $308load_global.7 = global(int: <class 'int'>)
2021-05-27 22:37:58,935 on stmt: offset = call $308load_global.7(index_frac, func=$308load_global.7, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None)
2021-05-27 22:37:58,935 replaced with: offset.2 = call $308load_global.7(index_frac, func=$308load_global.7, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None)
2021-05-27 22:37:58,935 on stmt: eta = index_frac - offset
2021-05-27 22:37:58,935 on stmt: $324load_global.13 = global(min: <built-in function min>)
2021-05-27 22:37:58,935 on stmt: $330binary_subtract.16 = n_orig - n
2021-05-27 22:37:58,935 on stmt: $const332.17 = const(int, 1)
2021-05-27 22:37:58,935 on stmt: $334binary_subtract.18 = $330binary_subtract.16 - $const332.17
2021-05-27 22:37:58,935 on stmt: $340binary_subtract.21 = nwin - offset
2021-05-27 22:37:58,935 on stmt: $344binary_floor_divide.23 = $340binary_subtract.21 // index_step
2021-05-27 22:37:58,935 on stmt: k_max = call $324load_global.13($334binary_subtract.18, $344binary_floor_divide.23, func=$324load_global.13, args=[Var($334binary_subtract.18, interpn.py:60), Var($344binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None)
2021-05-27 22:37:58,935 on stmt: jump 350
2021-05-27 22:37:58,935 ==== SSA block rewrite pass on 350
2021-05-27 22:37:58,935 Running <numba.core.ssa._FreshVarHandler object at 0x000000000A84BA20>
2021-05-27 22:37:58,935 on stmt: $352load_global.1 = global(range: <class 'range'>)
2021-05-27 22:37:58,935 on stmt: $356call_function.3 = call $352load_global.1(k_max, func=$352load_global.1, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None)
2021-05-27 22:37:58,951 on stmt: $358get_iter.4 = getiter(value=$356call_function.3)
2021-05-27 22:37:58,951 on stmt: $phi360.1 = $358get_iter.4
2021-05-27 22:37:58,951 on stmt: jump 360
2021-05-27 22:37:58,951 ==== SSA block rewrite pass on 360
2021-05-27 22:37:58,951 Running <numba.core.ssa._FreshVarHandler object at 0x000000000A84BA20>
2021-05-27 22:37:58,951 on stmt: $360for_iter.2 = iternext(value=$phi360.1)
2021-05-27 22:37:58,951 on stmt: $360for_iter.3 = pair_first(value=$360for_iter.2)
2021-05-27 22:37:58,951 on stmt: $360for_iter.4 = pair_second(value=$360for_iter.2)
2021-05-27 22:37:58,951 on stmt: $phi362.2 = $360for_iter.3
2021-05-27 22:37:58,951 on stmt: branch $360for_iter.4, 362, 464
2021-05-27 22:37:58,951 ==== SSA block rewrite pass on 362
2021-05-27 22:37:58,951 Running <numba.core.ssa._FreshVarHandler object at 0x000000000A84BA20>
2021-05-27 22:37:58,951 on stmt: k = $phi362.2
2021-05-27 22:37:58,951 on stmt: $372binary_multiply.7 = k * index_step
2021-05-27 22:37:58,951 on stmt: $374binary_add.8 = offset + $372binary_multiply.7
2021-05-27 22:37:58,951 on stmt: $376binary_subscr.9 = getitem(value=interp_win, index=$374binary_add.8, fn=<built-in function getitem>)
2021-05-27 22:37:58,951 on stmt: $388binary_multiply.15 = k * index_step
2021-05-27 22:37:58,951 on stmt: $390binary_add.16 = offset + $388binary_multiply.15
2021-05-27 22:37:58,951 on stmt: $392binary_subscr.17 = getitem(value=interp_delta, index=$390binary_add.16, fn=<built-in function getitem>)
2021-05-27 22:37:58,951 on stmt: $394binary_multiply.18 = eta * $392binary_subscr.17
2021-05-27 22:37:58,951 on stmt: weight = $376binary_subscr.9 + $394binary_multiply.18
2021-05-27 22:37:58,951 on stmt: jump 400
2021-05-27 22:37:58,951 ==== SSA block rewrite pass on 400
2021-05-27 22:37:58,951 Running <numba.core.ssa._FreshVarHandler object at 0x000000000A84BA20>
2021-05-27 22:37:58,951 on stmt: $402load_global.2 = global(range: <class 'range'>)
2021-05-27 22:37:58,951 on stmt: $406call_function.4 = call $402load_global.2(n_channels, func=$402load_global.2, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-27 22:37:58,951 on stmt: $408get_iter.5 = getiter(value=$406call_function.4)
2021-05-27 22:37:58,951 on stmt: $phi410.2 = $408get_iter.5
2021-05-27 22:37:58,951 on stmt: jump 410
2021-05-27 22:37:58,951 ==== SSA block rewrite pass on 410
2021-05-27 22:37:58,951 Running <numba.core.ssa._FreshVarHandler object at 0x000000000A84BA20>
2021-05-27 22:37:58,951 on stmt: $410for_iter.3 = iternext(value=$phi410.2)
2021-05-27 22:37:58,951 on stmt: $410for_iter.4 = pair_first(value=$410for_iter.3)
2021-05-27 22:37:58,951 on stmt: $410for_iter.5 = pair_second(value=$410for_iter.3)
2021-05-27 22:37:58,951 on stmt: $phi412.3 = $410for_iter.4
2021-05-27 22:37:58,951 on stmt: branch $410for_iter.5, 412, 458
2021-05-27 22:37:58,951 ==== SSA block rewrite pass on 412
2021-05-27 22:37:58,951 Running <numba.core.ssa._FreshVarHandler object at 0x000000000A84BA20>
2021-05-27 22:37:58,951 on stmt: j = $phi412.3
2021-05-27 22:37:58,951 on stmt: $420build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-27 22:37:58,951 on stmt: $424binary_subscr.10 = getitem(value=y, index=$420build_tuple.7, fn=<built-in function getitem>)
2021-05-27 22:37:58,951 on stmt: $434binary_add.15 = n + k
2021-05-27 22:37:58,951 on stmt: $const436.16 = const(int, 1)
2021-05-27 22:37:58,951 on stmt: $438binary_add.17 = $434binary_add.15 + $const436.16
2021-05-27 22:37:58,951 on stmt: $442build_tuple.19 = build_tuple(items=[Var($438binary_add.17, interpn.py:64), Var(j, interpn.py:46)])
2021-05-27 22:37:58,951 on stmt: $444binary_subscr.20 = getitem(value=x, index=$442build_tuple.19, fn=<built-in function getitem>)
2021-05-27 22:37:58,951 on stmt: $446binary_multiply.21 = weight * $444binary_subscr.20
2021-05-27 22:37:58,951 on stmt: $448inplace_add.22 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$424binary_subscr.10, rhs=$446binary_multiply.21, static_lhs=Undefined, static_rhs=Undefined)
2021-05-27 22:37:58,951 on stmt: y[$420build_tuple.7] = $448inplace_add.22
2021-05-27 22:37:58,951 on stmt: jump 410
2021-05-27 22:37:58,951 ==== SSA block rewrite pass on 458
2021-05-27 22:37:58,951 Running <numba.core.ssa._FreshVarHandler object at 0x000000000A84BA20>
2021-05-27 22:37:58,951 on stmt: jump 460
2021-05-27 22:37:58,951 ==== SSA block rewrite pass on 460
2021-05-27 22:37:58,951 Running <numba.core.ssa._FreshVarHandler object at 0x000000000A84BA20>
2021-05-27 22:37:58,951 on stmt: jump 360
2021-05-27 22:37:58,951 ==== SSA block rewrite pass on 464
2021-05-27 22:37:58,951 Running <numba.core.ssa._FreshVarHandler object at 0x000000000A84BA20>
2021-05-27 22:37:58,951 on stmt: jump 466
2021-05-27 22:37:58,951 ==== SSA block rewrite pass on 466
2021-05-27 22:37:58,951 Running <numba.core.ssa._FreshVarHandler object at 0x000000000A84BA20>
2021-05-27 22:37:58,951 on stmt: $470inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
2021-05-27 22:37:58,951 on stmt: time_register = $470inplace_add.3
2021-05-27 22:37:58,951 on stmt: jump 112
2021-05-27 22:37:58,951 ==== SSA block rewrite pass on 476
2021-05-27 22:37:58,951 Running <numba.core.ssa._FreshVarHandler object at 0x000000000A84BA20>
2021-05-27 22:37:58,951 on stmt: jump 478
2021-05-27 22:37:58,951 ==== SSA block rewrite pass on 478
2021-05-27 22:37:58,951 Running <numba.core.ssa._FreshVarHandler object at 0x000000000A84BA20>
2021-05-27 22:37:58,951 on stmt: $const478.0 = const(NoneType, None)
2021-05-27 22:37:58,951 on stmt: $480return_value.1 = cast(value=$const478.0)
2021-05-27 22:37:58,951 on stmt: return $480return_value.1
2021-05-27 22:37:58,951 Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000000000E108F28>],
             116: [<numba.core.ir.Assign object at 0x000000000E1089E8>],
             292: [<numba.core.ir.Assign object at 0x000000000E108E48>]})
2021-05-27 22:37:58,951 ==== SSA block rewrite pass on 0
2021-05-27 22:37:58,951 Running <numba.core.ssa._FixSSAVars object at 0x000000000E08CD68>
2021-05-27 22:37:58,951 on stmt: x = arg(0, name=x)
2021-05-27 22:37:58,951 on stmt: y = arg(1, name=y)
2021-05-27 22:37:58,951 on stmt: sample_ratio = arg(2, name=sample_ratio)
2021-05-27 22:37:58,951 on stmt: interp_win = arg(3, name=interp_win)
2021-05-27 22:37:58,951 on stmt: interp_delta = arg(4, name=interp_delta)
2021-05-27 22:37:58,951 on stmt: num_table = arg(5, name=num_table)
2021-05-27 22:37:58,951 on stmt: $2load_global.0 = global(min: <built-in function min>)
2021-05-27 22:37:58,951 on stmt: $const4.1 = const(float, 1.0)
2021-05-27 22:37:58,951 on stmt: scale = call $2load_global.0($const4.1, sample_ratio, func=$2load_global.0, args=[Var($const4.1, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None)
2021-05-27 22:37:58,951 on stmt: $const12.4 = const(float, 1.0)
2021-05-27 22:37:58,951 on stmt: time_increment = $const12.4 / sample_ratio
2021-05-27 22:37:58,951 on stmt: $20load_global.7 = global(int: <class 'int'>)
2021-05-27 22:37:58,951 on stmt: $26binary_multiply.10 = scale * num_table
2021-05-27 22:37:58,951 on stmt: index_step = call $20load_global.7($26binary_multiply.10, func=$20load_global.7, args=[Var($26binary_multiply.10, interpn.py:12)], kws=(), vararg=None)
2021-05-27 22:37:58,951 on stmt: time_register = const(float, 0.0)
2021-05-27 22:37:58,951 on stmt: n = const(int, 0)
2021-05-27 22:37:58,951 on stmt: frac = const(float, 0.0)
2021-05-27 22:37:58,951 on stmt: index_frac = const(float, 0.0)
2021-05-27 22:37:58,951 on stmt: offset = const(int, 0)
2021-05-27 22:37:58,951 on stmt: eta = const(float, 0.0)
2021-05-27 22:37:58,951 on stmt: weight = const(float, 0.0)
2021-05-27 22:37:58,951 on stmt: $62load_attr.20 = getattr(value=interp_win, attr=shape)
2021-05-27 22:37:58,951 on stmt: $const64.21 = const(int, 0)
2021-05-27 22:37:58,951 on stmt: nwin = static_getitem(value=$62load_attr.20, index=0, index_var=$const64.21, fn=<built-in function getitem>)
2021-05-27 22:37:58,951 on stmt: $72load_attr.24 = getattr(value=x, attr=shape)
2021-05-27 22:37:58,951 on stmt: $const74.25 = const(int, 0)
2021-05-27 22:37:58,951 on stmt: n_orig = static_getitem(value=$72load_attr.24, index=0, index_var=$const74.25, fn=<built-in function getitem>)
2021-05-27 22:37:58,951 on stmt: $82load_attr.28 = getattr(value=y, attr=shape)
2021-05-27 22:37:58,951 on stmt: $const84.29 = const(int, 0)
2021-05-27 22:37:58,951 on stmt: n_out = static_getitem(value=$82load_attr.28, index=0, index_var=$const84.29, fn=<built-in function getitem>)
2021-05-27 22:37:58,951 on stmt: $92load_attr.32 = getattr(value=y, attr=shape)
2021-05-27 22:37:58,951 on stmt: $const94.33 = const(int, 1)
2021-05-27 22:37:58,951 on stmt: n_channels = static_getitem(value=$92load_attr.32, index=1, index_var=$const94.33, fn=<built-in function getitem>)
2021-05-27 22:37:58,951 on stmt: jump 100
2021-05-27 22:37:58,951 ==== SSA block rewrite pass on 100
2021-05-27 22:37:58,951 Running <numba.core.ssa._FixSSAVars object at 0x000000000E08CD68>
2021-05-27 22:37:58,951 on stmt: $104load_global.0 = global(range: <class 'range'>)
2021-05-27 22:37:58,951 on stmt: $108call_function.2 = call $104load_global.0(n_out, func=$104load_global.0, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None)
2021-05-27 22:37:58,951 on stmt: $110get_iter.3 = getiter(value=$108call_function.2)
2021-05-27 22:37:58,951 on stmt: $phi112.0 = $110get_iter.3
2021-05-27 22:37:58,951 on stmt: jump 112
2021-05-27 22:37:58,951 ==== SSA block rewrite pass on 112
2021-05-27 22:37:58,951 Running <numba.core.ssa._FixSSAVars object at 0x000000000E08CD68>
2021-05-27 22:37:58,951 on stmt: $112for_iter.1 = iternext(value=$phi112.0)
2021-05-27 22:37:58,951 on stmt: $112for_iter.2 = pair_first(value=$112for_iter.1)
2021-05-27 22:37:58,951 on stmt: $112for_iter.3 = pair_second(value=$112for_iter.1)
2021-05-27 22:37:58,951 on stmt: $phi116.1 = $112for_iter.2
2021-05-27 22:37:58,951 on stmt: branch $112for_iter.3, 116, 476
2021-05-27 22:37:58,951 ==== SSA block rewrite pass on 116
2021-05-27 22:37:58,951 Running <numba.core.ssa._FixSSAVars object at 0x000000000E08CD68>
2021-05-27 22:37:58,951 on stmt: t = $phi116.1
2021-05-27 22:37:58,951 on stmt: $118load_global.2 = global(int: <class 'int'>)
2021-05-27 22:37:58,951 on stmt: n = call $118load_global.2(time_register, func=$118load_global.2, args=[Var(time_register, interpn.py:13)], kws=(), vararg=None)
2021-05-27 22:37:58,951 on stmt: $132binary_subtract.8 = time_register - n
2021-05-27 22:37:58,951 on stmt: frac = scale * $132binary_subtract.8
2021-05-27 22:37:58,951 on stmt: index_frac = frac * num_table
2021-05-27 22:37:58,951 on stmt: $146load_global.13 = global(int: <class 'int'>)
2021-05-27 22:37:58,951 on stmt: offset.1 = call $146load_global.13(index_frac, func=$146load_global.13, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None)
2021-05-27 22:37:58,951 on stmt: eta = index_frac - offset
2021-05-27 22:37:58,951 find_def var='offset' stmt=eta = index_frac - offset
2021-05-27 22:37:58,951 replaced with: eta = index_frac - offset.1
2021-05-27 22:37:58,951 on stmt: $162load_global.19 = global(min: <built-in function min>)
2021-05-27 22:37:58,951 on stmt: $const166.21 = const(int, 1)
2021-05-27 22:37:58,951 on stmt: $168binary_add.22 = n + $const166.21
2021-05-27 22:37:58,951 on stmt: $174binary_subtract.25 = nwin - offset
2021-05-27 22:37:58,951 find_def var='offset' stmt=$174binary_subtract.25 = nwin - offset
2021-05-27 22:37:58,951 replaced with: $174binary_subtract.25 = nwin - offset.1
2021-05-27 22:37:58,951 on stmt: $178binary_floor_divide.27 = $174binary_subtract.25 // index_step
2021-05-27 22:37:58,951 on stmt: i_max = call $162load_global.19($168binary_add.22, $178binary_floor_divide.27, func=$162load_global.19, args=[Var($168binary_add.22, interpn.py:42), Var($178binary_floor_divide.27, interpn.py:42)], kws=(), vararg=None)
2021-05-27 22:37:58,951 on stmt: jump 184
2021-05-27 22:37:58,951 ==== SSA block rewrite pass on 184
2021-05-27 22:37:58,966 Running <numba.core.ssa._FixSSAVars object at 0x000000000E08CD68>
2021-05-27 22:37:58,966 on stmt: $186load_global.1 = global(range: <class 'range'>)
2021-05-27 22:37:58,966 on stmt: $190call_function.3 = call $186load_global.1(i_max, func=$186load_global.1, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None)
2021-05-27 22:37:58,966 on stmt: $192get_iter.4 = getiter(value=$190call_function.3)
2021-05-27 22:37:58,966 on stmt: $phi194.1 = $192get_iter.4
2021-05-27 22:37:58,966 on stmt: jump 194
2021-05-27 22:37:58,966 ==== SSA block rewrite pass on 194
2021-05-27 22:37:58,966 Running <numba.core.ssa._FixSSAVars object at 0x000000000E08CD68>
2021-05-27 22:37:58,966 on stmt: $194for_iter.2 = iternext(value=$phi194.1)
2021-05-27 22:37:58,966 on stmt: $194for_iter.3 = pair_first(value=$194for_iter.2)
2021-05-27 22:37:58,966 on stmt: $194for_iter.4 = pair_second(value=$194for_iter.2)
2021-05-27 22:37:58,966 on stmt: $phi196.2 = $194for_iter.3
2021-05-27 22:37:58,966 on stmt: branch $194for_iter.4, 196, 290
2021-05-27 22:37:58,966 ==== SSA block rewrite pass on 196
2021-05-27 22:37:58,966 Running <numba.core.ssa._FixSSAVars object at 0x000000000E08CD68>
2021-05-27 22:37:58,966 on stmt: i = $phi196.2
2021-05-27 22:37:58,966 on stmt: $206binary_multiply.7 = i * index_step
2021-05-27 22:37:58,966 on stmt: $208binary_add.8 = offset + $206binary_multiply.7
2021-05-27 22:37:58,966 find_def var='offset' stmt=$208binary_add.8 = offset + $206binary_multiply.7
2021-05-27 22:37:58,966 find_def_from_top label 196
2021-05-27 22:37:58,966 idom 194 from label 196
2021-05-27 22:37:58,966 find_def_from_bottom label 194
2021-05-27 22:37:58,966 find_def_from_top label 194
2021-05-27 22:37:58,966 idom 184 from label 194
2021-05-27 22:37:58,966 find_def_from_bottom label 184
2021-05-27 22:37:58,966 find_def_from_top label 184
2021-05-27 22:37:58,966 idom 116 from label 184
2021-05-27 22:37:58,966 find_def_from_bottom label 116
2021-05-27 22:37:58,966 replaced with: $208binary_add.8 = offset.1 + $206binary_multiply.7
2021-05-27 22:37:58,966 on stmt: $210binary_subscr.9 = getitem(value=interp_win, index=$208binary_add.8, fn=<built-in function getitem>)
2021-05-27 22:37:58,966 on stmt: $222binary_multiply.15 = i * index_step
2021-05-27 22:37:58,966 on stmt: $224binary_add.16 = offset + $222binary_multiply.15
2021-05-27 22:37:58,966 find_def var='offset' stmt=$224binary_add.16 = offset + $222binary_multiply.15
2021-05-27 22:37:58,966 find_def_from_top label 196
2021-05-27 22:37:58,966 idom 194 from label 196
2021-05-27 22:37:58,966 find_def_from_bottom label 194
2021-05-27 22:37:58,966 find_def_from_top label 194
2021-05-27 22:37:58,966 idom 184 from label 194
2021-05-27 22:37:58,966 find_def_from_bottom label 184
2021-05-27 22:37:58,966 find_def_from_top label 184
2021-05-27 22:37:58,966 idom 116 from label 184
2021-05-27 22:37:58,966 find_def_from_bottom label 116
2021-05-27 22:37:58,966 replaced with: $224binary_add.16 = offset.1 + $222binary_multiply.15
2021-05-27 22:37:58,966 on stmt: $226binary_subscr.17 = getitem(value=interp_delta, index=$224binary_add.16, fn=<built-in function getitem>)
2021-05-27 22:37:58,966 on stmt: $228binary_multiply.18 = eta * $226binary_subscr.17
2021-05-27 22:37:58,966 on stmt: weight = $210binary_subscr.9 + $228binary_multiply.18
2021-05-27 22:37:58,966 on stmt: jump 234
2021-05-27 22:37:58,966 ==== SSA block rewrite pass on 234
2021-05-27 22:37:58,966 Running <numba.core.ssa._FixSSAVars object at 0x000000000E08CD68>
2021-05-27 22:37:58,966 on stmt: $236load_global.2 = global(range: <class 'range'>)
2021-05-27 22:37:58,966 on stmt: $240call_function.4 = call $236load_global.2(n_channels, func=$236load_global.2, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-27 22:37:58,966 on stmt: $242get_iter.5 = getiter(value=$240call_function.4)
2021-05-27 22:37:58,966 on stmt: $phi244.2 = $242get_iter.5
2021-05-27 22:37:58,966 on stmt: jump 244
2021-05-27 22:37:58,966 ==== SSA block rewrite pass on 244
2021-05-27 22:37:58,966 Running <numba.core.ssa._FixSSAVars object at 0x000000000E08CD68>
2021-05-27 22:37:58,966 on stmt: $244for_iter.3 = iternext(value=$phi244.2)
2021-05-27 22:37:58,966 on stmt: $244for_iter.4 = pair_first(value=$244for_iter.3)
2021-05-27 22:37:58,966 on stmt: $244for_iter.5 = pair_second(value=$244for_iter.3)
2021-05-27 22:37:58,966 on stmt: $phi246.3 = $244for_iter.4
2021-05-27 22:37:58,966 on stmt: branch $244for_iter.5, 246, 286
2021-05-27 22:37:58,966 ==== SSA block rewrite pass on 246
2021-05-27 22:37:58,966 Running <numba.core.ssa._FixSSAVars object at 0x000000000E08CD68>
2021-05-27 22:37:58,966 on stmt: j = $phi246.3
2021-05-27 22:37:58,966 on stmt: $254build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-27 22:37:58,966 on stmt: $258binary_subscr.10 = getitem(value=y, index=$254build_tuple.7, fn=<built-in function getitem>)
2021-05-27 22:37:58,966 on stmt: $268binary_subtract.15 = n - i
2021-05-27 22:37:58,966 on stmt: $272build_tuple.17 = build_tuple(items=[Var($268binary_subtract.15, interpn.py:47), Var(j, interpn.py:46)])
2021-05-27 22:37:58,966 on stmt: $274binary_subscr.18 = getitem(value=x, index=$272build_tuple.17, fn=<built-in function getitem>)
2021-05-27 22:37:58,966 on stmt: $276binary_multiply.19 = weight * $274binary_subscr.18
2021-05-27 22:37:58,966 on stmt: $278inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$258binary_subscr.10, rhs=$276binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
2021-05-27 22:37:58,966 on stmt: y[$254build_tuple.7] = $278inplace_add.20
2021-05-27 22:37:58,966 on stmt: jump 244
2021-05-27 22:37:58,966 ==== SSA block rewrite pass on 286
2021-05-27 22:37:58,966 Running <numba.core.ssa._FixSSAVars object at 0x000000000E08CD68>
2021-05-27 22:37:58,966 on stmt: jump 288
2021-05-27 22:37:58,966 ==== SSA block rewrite pass on 288
2021-05-27 22:37:58,966 Running <numba.core.ssa._FixSSAVars object at 0x000000000E08CD68>
2021-05-27 22:37:58,966 on stmt: jump 194
2021-05-27 22:37:58,966 ==== SSA block rewrite pass on 290
2021-05-27 22:37:58,966 Running <numba.core.ssa._FixSSAVars object at 0x000000000E08CD68>
2021-05-27 22:37:58,966 on stmt: jump 292
2021-05-27 22:37:58,966 ==== SSA block rewrite pass on 292
2021-05-27 22:37:58,966 Running <numba.core.ssa._FixSSAVars object at 0x000000000E08CD68>
2021-05-27 22:37:58,966 on stmt: $296binary_subtract.3 = scale - frac
2021-05-27 22:37:58,966 on stmt: frac = $296binary_subtract.3
2021-05-27 22:37:58,966 on stmt: index_frac = frac * num_table
2021-05-27 22:37:58,966 on stmt: $308load_global.7 = global(int: <class 'int'>)
2021-05-27 22:37:58,966 on stmt: offset.2 = call $308load_global.7(index_frac, func=$308load_global.7, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None)
2021-05-27 22:37:58,966 on stmt: eta = index_frac - offset
2021-05-27 22:37:58,966 find_def var='offset' stmt=eta = index_frac - offset
2021-05-27 22:37:58,966 replaced with: eta = index_frac - offset.2
2021-05-27 22:37:58,966 on stmt: $324load_global.13 = global(min: <built-in function min>)
2021-05-27 22:37:58,966 on stmt: $330binary_subtract.16 = n_orig - n
2021-05-27 22:37:58,966 on stmt: $const332.17 = const(int, 1)
2021-05-27 22:37:58,966 on stmt: $334binary_subtract.18 = $330binary_subtract.16 - $const332.17
2021-05-27 22:37:58,966 on stmt: $340binary_subtract.21 = nwin - offset
2021-05-27 22:37:58,966 find_def var='offset' stmt=$340binary_subtract.21 = nwin - offset
2021-05-27 22:37:58,966 replaced with: $340binary_subtract.21 = nwin - offset.2
2021-05-27 22:37:58,966 on stmt: $344binary_floor_divide.23 = $340binary_subtract.21 // index_step
2021-05-27 22:37:58,966 on stmt: k_max = call $324load_global.13($334binary_subtract.18, $344binary_floor_divide.23, func=$324load_global.13, args=[Var($334binary_subtract.18, interpn.py:60), Var($344binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None)
2021-05-27 22:37:58,966 on stmt: jump 350
2021-05-27 22:37:58,966 ==== SSA block rewrite pass on 350
2021-05-27 22:37:58,966 Running <numba.core.ssa._FixSSAVars object at 0x000000000E08CD68>
2021-05-27 22:37:58,966 on stmt: $352load_global.1 = global(range: <class 'range'>)
2021-05-27 22:37:58,966 on stmt: $356call_function.3 = call $352load_global.1(k_max, func=$352load_global.1, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None)
2021-05-27 22:37:58,966 on stmt: $358get_iter.4 = getiter(value=$356call_function.3)
2021-05-27 22:37:58,966 on stmt: $phi360.1 = $358get_iter.4
2021-05-27 22:37:58,966 on stmt: jump 360
2021-05-27 22:37:58,966 ==== SSA block rewrite pass on 360
2021-05-27 22:37:58,966 Running <numba.core.ssa._FixSSAVars object at 0x000000000E08CD68>
2021-05-27 22:37:58,966 on stmt: $360for_iter.2 = iternext(value=$phi360.1)
2021-05-27 22:37:58,966 on stmt: $360for_iter.3 = pair_first(value=$360for_iter.2)
2021-05-27 22:37:58,966 on stmt: $360for_iter.4 = pair_second(value=$360for_iter.2)
2021-05-27 22:37:58,966 on stmt: $phi362.2 = $360for_iter.3
2021-05-27 22:37:58,966 on stmt: branch $360for_iter.4, 362, 464
2021-05-27 22:37:58,966 ==== SSA block rewrite pass on 362
2021-05-27 22:37:58,966 Running <numba.core.ssa._FixSSAVars object at 0x000000000E08CD68>
2021-05-27 22:37:58,966 on stmt: k = $phi362.2
2021-05-27 22:37:58,966 on stmt: $372binary_multiply.7 = k * index_step
2021-05-27 22:37:58,966 on stmt: $374binary_add.8 = offset + $372binary_multiply.7
2021-05-27 22:37:58,966 find_def var='offset' stmt=$374binary_add.8 = offset + $372binary_multiply.7
2021-05-27 22:37:58,966 find_def_from_top label 362
2021-05-27 22:37:58,966 idom 360 from label 362
2021-05-27 22:37:58,966 find_def_from_bottom label 360
2021-05-27 22:37:58,966 find_def_from_top label 360
2021-05-27 22:37:58,966 idom 350 from label 360
2021-05-27 22:37:58,966 find_def_from_bottom label 350
2021-05-27 22:37:58,966 find_def_from_top label 350
2021-05-27 22:37:58,966 idom 292 from label 350
2021-05-27 22:37:58,966 find_def_from_bottom label 292
2021-05-27 22:37:58,966 replaced with: $374binary_add.8 = offset.2 + $372binary_multiply.7
2021-05-27 22:37:58,966 on stmt: $376binary_subscr.9 = getitem(value=interp_win, index=$374binary_add.8, fn=<built-in function getitem>)
2021-05-27 22:37:58,966 on stmt: $388binary_multiply.15 = k * index_step
2021-05-27 22:37:58,966 on stmt: $390binary_add.16 = offset + $388binary_multiply.15
2021-05-27 22:37:58,966 find_def var='offset' stmt=$390binary_add.16 = offset + $388binary_multiply.15
2021-05-27 22:37:58,966 find_def_from_top label 362
2021-05-27 22:37:58,966 idom 360 from label 362
2021-05-27 22:37:58,966 find_def_from_bottom label 360
2021-05-27 22:37:58,966 find_def_from_top label 360
2021-05-27 22:37:58,966 idom 350 from label 360
2021-05-27 22:37:58,966 find_def_from_bottom label 350
2021-05-27 22:37:58,966 find_def_from_top label 350
2021-05-27 22:37:58,966 idom 292 from label 350
2021-05-27 22:37:58,966 find_def_from_bottom label 292
2021-05-27 22:37:58,966 replaced with: $390binary_add.16 = offset.2 + $388binary_multiply.15
2021-05-27 22:37:58,966 on stmt: $392binary_subscr.17 = getitem(value=interp_delta, index=$390binary_add.16, fn=<built-in function getitem>)
2021-05-27 22:37:58,982 on stmt: $394binary_multiply.18 = eta * $392binary_subscr.17
2021-05-27 22:37:58,982 on stmt: weight = $376binary_subscr.9 + $394binary_multiply.18
2021-05-27 22:37:58,982 on stmt: jump 400
2021-05-27 22:37:58,982 ==== SSA block rewrite pass on 400
2021-05-27 22:37:58,982 Running <numba.core.ssa._FixSSAVars object at 0x000000000E08CD68>
2021-05-27 22:37:58,982 on stmt: $402load_global.2 = global(range: <class 'range'>)
2021-05-27 22:37:58,982 on stmt: $406call_function.4 = call $402load_global.2(n_channels, func=$402load_global.2, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-27 22:37:58,982 on stmt: $408get_iter.5 = getiter(value=$406call_function.4)
2021-05-27 22:37:58,982 on stmt: $phi410.2 = $408get_iter.5
2021-05-27 22:37:58,982 on stmt: jump 410
2021-05-27 22:37:58,982 ==== SSA block rewrite pass on 410
2021-05-27 22:37:58,982 Running <numba.core.ssa._FixSSAVars object at 0x000000000E08CD68>
2021-05-27 22:37:58,982 on stmt: $410for_iter.3 = iternext(value=$phi410.2)
2021-05-27 22:37:58,982 on stmt: $410for_iter.4 = pair_first(value=$410for_iter.3)
2021-05-27 22:37:58,982 on stmt: $410for_iter.5 = pair_second(value=$410for_iter.3)
2021-05-27 22:37:58,982 on stmt: $phi412.3 = $410for_iter.4
2021-05-27 22:37:58,982 on stmt: branch $410for_iter.5, 412, 458
2021-05-27 22:37:58,982 ==== SSA block rewrite pass on 412
2021-05-27 22:37:58,982 Running <numba.core.ssa._FixSSAVars object at 0x000000000E08CD68>
2021-05-27 22:37:58,982 on stmt: j = $phi412.3
2021-05-27 22:37:58,982 on stmt: $420build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-27 22:37:58,982 on stmt: $424binary_subscr.10 = getitem(value=y, index=$420build_tuple.7, fn=<built-in function getitem>)
2021-05-27 22:37:58,982 on stmt: $434binary_add.15 = n + k
2021-05-27 22:37:58,982 on stmt: $const436.16 = const(int, 1)
2021-05-27 22:37:58,982 on stmt: $438binary_add.17 = $434binary_add.15 + $const436.16
2021-05-27 22:37:58,982 on stmt: $442build_tuple.19 = build_tuple(items=[Var($438binary_add.17, interpn.py:64), Var(j, interpn.py:46)])
2021-05-27 22:37:58,982 on stmt: $444binary_subscr.20 = getitem(value=x, index=$442build_tuple.19, fn=<built-in function getitem>)
2021-05-27 22:37:58,982 on stmt: $446binary_multiply.21 = weight * $444binary_subscr.20
2021-05-27 22:37:58,982 on stmt: $448inplace_add.22 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$424binary_subscr.10, rhs=$446binary_multiply.21, static_lhs=Undefined, static_rhs=Undefined)
2021-05-27 22:37:58,982 on stmt: y[$420build_tuple.7] = $448inplace_add.22
2021-05-27 22:37:58,982 on stmt: jump 410
2021-05-27 22:37:58,982 ==== SSA block rewrite pass on 458
2021-05-27 22:37:58,982 Running <numba.core.ssa._FixSSAVars object at 0x000000000E08CD68>
2021-05-27 22:37:58,982 on stmt: jump 460
2021-05-27 22:37:58,982 ==== SSA block rewrite pass on 460
2021-05-27 22:37:58,982 Running <numba.core.ssa._FixSSAVars object at 0x000000000E08CD68>
2021-05-27 22:37:58,982 on stmt: jump 360
2021-05-27 22:37:58,982 ==== SSA block rewrite pass on 464
2021-05-27 22:37:58,982 Running <numba.core.ssa._FixSSAVars object at 0x000000000E08CD68>
2021-05-27 22:37:58,982 on stmt: jump 466
2021-05-27 22:37:58,982 ==== SSA block rewrite pass on 466
2021-05-27 22:37:58,982 Running <numba.core.ssa._FixSSAVars object at 0x000000000E08CD68>
2021-05-27 22:37:58,982 on stmt: $470inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
2021-05-27 22:37:58,982 on stmt: time_register = $470inplace_add.3
2021-05-27 22:37:58,982 on stmt: jump 112
2021-05-27 22:37:58,982 ==== SSA block rewrite pass on 476
2021-05-27 22:37:58,982 Running <numba.core.ssa._FixSSAVars object at 0x000000000E08CD68>
2021-05-27 22:37:58,982 on stmt: jump 478
2021-05-27 22:37:58,982 ==== SSA block rewrite pass on 478
2021-05-27 22:37:58,982 Running <numba.core.ssa._FixSSAVars object at 0x000000000E08CD68>
2021-05-27 22:37:58,982 on stmt: $const478.0 = const(NoneType, None)
2021-05-27 22:37:58,982 on stmt: $480return_value.1 = cast(value=$const478.0)
2021-05-27 22:37:58,982 on stmt: return $480return_value.1
2021-05-27 22:37:58,982 Fix SSA violator on var time_register
2021-05-27 22:37:58,982 ==== SSA block rewrite pass on 0
2021-05-27 22:37:58,982 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E108DD8>
2021-05-27 22:37:58,982 on stmt: x = arg(0, name=x)
2021-05-27 22:37:58,982 on stmt: y = arg(1, name=y)
2021-05-27 22:37:58,982 on stmt: sample_ratio = arg(2, name=sample_ratio)
2021-05-27 22:37:58,982 on stmt: interp_win = arg(3, name=interp_win)
2021-05-27 22:37:58,982 on stmt: interp_delta = arg(4, name=interp_delta)
2021-05-27 22:37:58,982 on stmt: num_table = arg(5, name=num_table)
2021-05-27 22:37:58,982 on stmt: $2load_global.0 = global(min: <built-in function min>)
2021-05-27 22:37:58,982 on stmt: $const4.1 = const(float, 1.0)
2021-05-27 22:37:58,982 on stmt: scale = call $2load_global.0($const4.1, sample_ratio, func=$2load_global.0, args=[Var($const4.1, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None)
2021-05-27 22:37:58,982 on stmt: $const12.4 = const(float, 1.0)
2021-05-27 22:37:58,982 on stmt: time_increment = $const12.4 / sample_ratio
2021-05-27 22:37:58,982 on stmt: $20load_global.7 = global(int: <class 'int'>)
2021-05-27 22:37:58,982 on stmt: $26binary_multiply.10 = scale * num_table
2021-05-27 22:37:58,982 on stmt: index_step = call $20load_global.7($26binary_multiply.10, func=$20load_global.7, args=[Var($26binary_multiply.10, interpn.py:12)], kws=(), vararg=None)
2021-05-27 22:37:58,982 on stmt: time_register = const(float, 0.0)
2021-05-27 22:37:58,982 first assign: time_register
2021-05-27 22:37:58,982 replaced with: time_register = const(float, 0.0)
2021-05-27 22:37:58,982 on stmt: n = const(int, 0)
2021-05-27 22:37:58,982 on stmt: frac = const(float, 0.0)
2021-05-27 22:37:58,982 on stmt: index_frac = const(float, 0.0)
2021-05-27 22:37:58,982 on stmt: offset = const(int, 0)
2021-05-27 22:37:58,982 on stmt: eta = const(float, 0.0)
2021-05-27 22:37:58,982 on stmt: weight = const(float, 0.0)
2021-05-27 22:37:58,982 on stmt: $62load_attr.20 = getattr(value=interp_win, attr=shape)
2021-05-27 22:37:58,982 on stmt: $const64.21 = const(int, 0)
2021-05-27 22:37:58,982 on stmt: nwin = static_getitem(value=$62load_attr.20, index=0, index_var=$const64.21, fn=<built-in function getitem>)
2021-05-27 22:37:58,982 on stmt: $72load_attr.24 = getattr(value=x, attr=shape)
2021-05-27 22:37:58,982 on stmt: $const74.25 = const(int, 0)
2021-05-27 22:37:58,982 on stmt: n_orig = static_getitem(value=$72load_attr.24, index=0, index_var=$const74.25, fn=<built-in function getitem>)
2021-05-27 22:37:58,982 on stmt: $82load_attr.28 = getattr(value=y, attr=shape)
2021-05-27 22:37:58,982 on stmt: $const84.29 = const(int, 0)
2021-05-27 22:37:58,982 on stmt: n_out = static_getitem(value=$82load_attr.28, index=0, index_var=$const84.29, fn=<built-in function getitem>)
2021-05-27 22:37:58,982 on stmt: $92load_attr.32 = getattr(value=y, attr=shape)
2021-05-27 22:37:58,982 on stmt: $const94.33 = const(int, 1)
2021-05-27 22:37:58,982 on stmt: n_channels = static_getitem(value=$92load_attr.32, index=1, index_var=$const94.33, fn=<built-in function getitem>)
2021-05-27 22:37:58,982 on stmt: jump 100
2021-05-27 22:37:58,982 ==== SSA block rewrite pass on 100
2021-05-27 22:37:58,982 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E108DD8>
2021-05-27 22:37:58,982 on stmt: $104load_global.0 = global(range: <class 'range'>)
2021-05-27 22:37:58,982 on stmt: $108call_function.2 = call $104load_global.0(n_out, func=$104load_global.0, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None)
2021-05-27 22:37:58,982 on stmt: $110get_iter.3 = getiter(value=$108call_function.2)
2021-05-27 22:37:58,982 on stmt: $phi112.0 = $110get_iter.3
2021-05-27 22:37:58,982 on stmt: jump 112
2021-05-27 22:37:58,982 ==== SSA block rewrite pass on 112
2021-05-27 22:37:58,982 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E108DD8>
2021-05-27 22:37:58,982 on stmt: $112for_iter.1 = iternext(value=$phi112.0)
2021-05-27 22:37:58,982 on stmt: $112for_iter.2 = pair_first(value=$112for_iter.1)
2021-05-27 22:37:58,982 on stmt: $112for_iter.3 = pair_second(value=$112for_iter.1)
2021-05-27 22:37:58,982 on stmt: $phi116.1 = $112for_iter.2
2021-05-27 22:37:58,982 on stmt: branch $112for_iter.3, 116, 476
2021-05-27 22:37:58,982 ==== SSA block rewrite pass on 116
2021-05-27 22:37:58,982 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E108DD8>
2021-05-27 22:37:58,982 on stmt: t = $phi116.1
2021-05-27 22:37:58,982 on stmt: $118load_global.2 = global(int: <class 'int'>)
2021-05-27 22:37:58,982 on stmt: n = call $118load_global.2(time_register, func=$118load_global.2, args=[Var(time_register, interpn.py:13)], kws=(), vararg=None)
2021-05-27 22:37:58,982 on stmt: $132binary_subtract.8 = time_register - n
2021-05-27 22:37:58,982 on stmt: frac = scale * $132binary_subtract.8
2021-05-27 22:37:58,982 on stmt: index_frac = frac * num_table
2021-05-27 22:37:58,982 on stmt: $146load_global.13 = global(int: <class 'int'>)
2021-05-27 22:37:58,982 on stmt: offset.1 = call $146load_global.13(index_frac, func=$146load_global.13, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None)
2021-05-27 22:37:58,982 on stmt: eta = index_frac - offset.1
2021-05-27 22:37:58,982 on stmt: $162load_global.19 = global(min: <built-in function min>)
2021-05-27 22:37:58,982 on stmt: $const166.21 = const(int, 1)
2021-05-27 22:37:58,982 on stmt: $168binary_add.22 = n + $const166.21
2021-05-27 22:37:58,982 on stmt: $174binary_subtract.25 = nwin - offset.1
2021-05-27 22:37:58,982 on stmt: $178binary_floor_divide.27 = $174binary_subtract.25 // index_step
2021-05-27 22:37:58,982 on stmt: i_max = call $162load_global.19($168binary_add.22, $178binary_floor_divide.27, func=$162load_global.19, args=[Var($168binary_add.22, interpn.py:42), Var($178binary_floor_divide.27, interpn.py:42)], kws=(), vararg=None)
2021-05-27 22:37:58,982 on stmt: jump 184
2021-05-27 22:37:58,982 ==== SSA block rewrite pass on 184
2021-05-27 22:37:58,982 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E108DD8>
2021-05-27 22:37:58,982 on stmt: $186load_global.1 = global(range: <class 'range'>)
2021-05-27 22:37:58,982 on stmt: $190call_function.3 = call $186load_global.1(i_max, func=$186load_global.1, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None)
2021-05-27 22:37:58,982 on stmt: $192get_iter.4 = getiter(value=$190call_function.3)
2021-05-27 22:37:58,982 on stmt: $phi194.1 = $192get_iter.4
2021-05-27 22:37:58,982 on stmt: jump 194
2021-05-27 22:37:58,982 ==== SSA block rewrite pass on 194
2021-05-27 22:37:58,982 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E108DD8>
2021-05-27 22:37:58,982 on stmt: $194for_iter.2 = iternext(value=$phi194.1)
2021-05-27 22:37:58,982 on stmt: $194for_iter.3 = pair_first(value=$194for_iter.2)
2021-05-27 22:37:58,982 on stmt: $194for_iter.4 = pair_second(value=$194for_iter.2)
2021-05-27 22:37:58,982 on stmt: $phi196.2 = $194for_iter.3
2021-05-27 22:37:58,982 on stmt: branch $194for_iter.4, 196, 290
2021-05-27 22:37:58,982 ==== SSA block rewrite pass on 196
2021-05-27 22:37:58,982 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E108DD8>
2021-05-27 22:37:58,982 on stmt: i = $phi196.2
2021-05-27 22:37:58,982 on stmt: $206binary_multiply.7 = i * index_step
2021-05-27 22:37:58,982 on stmt: $208binary_add.8 = offset.1 + $206binary_multiply.7
2021-05-27 22:37:58,982 on stmt: $210binary_subscr.9 = getitem(value=interp_win, index=$208binary_add.8, fn=<built-in function getitem>)
2021-05-27 22:37:58,982 on stmt: $222binary_multiply.15 = i * index_step
2021-05-27 22:37:58,982 on stmt: $224binary_add.16 = offset.1 + $222binary_multiply.15
2021-05-27 22:37:58,982 on stmt: $226binary_subscr.17 = getitem(value=interp_delta, index=$224binary_add.16, fn=<built-in function getitem>)
2021-05-27 22:37:58,982 on stmt: $228binary_multiply.18 = eta * $226binary_subscr.17
2021-05-27 22:37:58,982 on stmt: weight = $210binary_subscr.9 + $228binary_multiply.18
2021-05-27 22:37:58,982 on stmt: jump 234
2021-05-27 22:37:58,982 ==== SSA block rewrite pass on 234
2021-05-27 22:37:58,982 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E108DD8>
2021-05-27 22:37:58,982 on stmt: $236load_global.2 = global(range: <class 'range'>)
2021-05-27 22:37:58,982 on stmt: $240call_function.4 = call $236load_global.2(n_channels, func=$236load_global.2, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-27 22:37:58,982 on stmt: $242get_iter.5 = getiter(value=$240call_function.4)
2021-05-27 22:37:58,982 on stmt: $phi244.2 = $242get_iter.5
2021-05-27 22:37:58,982 on stmt: jump 244
2021-05-27 22:37:58,982 ==== SSA block rewrite pass on 244
2021-05-27 22:37:58,982 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E108DD8>
2021-05-27 22:37:58,982 on stmt: $244for_iter.3 = iternext(value=$phi244.2)
2021-05-27 22:37:58,982 on stmt: $244for_iter.4 = pair_first(value=$244for_iter.3)
2021-05-27 22:37:58,982 on stmt: $244for_iter.5 = pair_second(value=$244for_iter.3)
2021-05-27 22:37:58,982 on stmt: $phi246.3 = $244for_iter.4
2021-05-27 22:37:58,982 on stmt: branch $244for_iter.5, 246, 286
2021-05-27 22:37:58,982 ==== SSA block rewrite pass on 246
2021-05-27 22:37:58,982 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E108DD8>
2021-05-27 22:37:58,982 on stmt: j = $phi246.3
2021-05-27 22:37:58,982 on stmt: $254build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-27 22:37:58,982 on stmt: $258binary_subscr.10 = getitem(value=y, index=$254build_tuple.7, fn=<built-in function getitem>)
2021-05-27 22:37:58,982 on stmt: $268binary_subtract.15 = n - i
2021-05-27 22:37:58,982 on stmt: $272build_tuple.17 = build_tuple(items=[Var($268binary_subtract.15, interpn.py:47), Var(j, interpn.py:46)])
2021-05-27 22:37:58,982 on stmt: $274binary_subscr.18 = getitem(value=x, index=$272build_tuple.17, fn=<built-in function getitem>)
2021-05-27 22:37:58,982 on stmt: $276binary_multiply.19 = weight * $274binary_subscr.18
2021-05-27 22:37:58,998 on stmt: $278inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$258binary_subscr.10, rhs=$276binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
2021-05-27 22:37:58,998 on stmt: y[$254build_tuple.7] = $278inplace_add.20
2021-05-27 22:37:58,998 on stmt: jump 244
2021-05-27 22:37:58,998 ==== SSA block rewrite pass on 286
2021-05-27 22:37:58,999 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E108DD8>
2021-05-27 22:37:58,999 on stmt: jump 288
2021-05-27 22:37:58,999 ==== SSA block rewrite pass on 288
2021-05-27 22:37:58,999 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E108DD8>
2021-05-27 22:37:58,999 on stmt: jump 194
2021-05-27 22:37:58,999 ==== SSA block rewrite pass on 290
2021-05-27 22:37:58,999 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E108DD8>
2021-05-27 22:37:58,999 on stmt: jump 292
2021-05-27 22:37:58,999 ==== SSA block rewrite pass on 292
2021-05-27 22:37:58,999 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E108DD8>
2021-05-27 22:37:59,000 on stmt: $296binary_subtract.3 = scale - frac
2021-05-27 22:37:59,000 on stmt: frac = $296binary_subtract.3
2021-05-27 22:37:59,000 on stmt: index_frac = frac * num_table
2021-05-27 22:37:59,000 on stmt: $308load_global.7 = global(int: <class 'int'>)
2021-05-27 22:37:59,000 on stmt: offset.2 = call $308load_global.7(index_frac, func=$308load_global.7, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None)
2021-05-27 22:37:59,000 on stmt: eta = index_frac - offset.2
2021-05-27 22:37:59,000 on stmt: $324load_global.13 = global(min: <built-in function min>)
2021-05-27 22:37:59,000 on stmt: $330binary_subtract.16 = n_orig - n
2021-05-27 22:37:59,000 on stmt: $const332.17 = const(int, 1)
2021-05-27 22:37:59,000 on stmt: $334binary_subtract.18 = $330binary_subtract.16 - $const332.17
2021-05-27 22:37:59,001 on stmt: $340binary_subtract.21 = nwin - offset.2
2021-05-27 22:37:59,001 on stmt: $344binary_floor_divide.23 = $340binary_subtract.21 // index_step
2021-05-27 22:37:59,001 on stmt: k_max = call $324load_global.13($334binary_subtract.18, $344binary_floor_divide.23, func=$324load_global.13, args=[Var($334binary_subtract.18, interpn.py:60), Var($344binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None)
2021-05-27 22:37:59,001 on stmt: jump 350
2021-05-27 22:37:59,001 ==== SSA block rewrite pass on 350
2021-05-27 22:37:59,001 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E108DD8>
2021-05-27 22:37:59,001 on stmt: $352load_global.1 = global(range: <class 'range'>)
2021-05-27 22:37:59,002 on stmt: $356call_function.3 = call $352load_global.1(k_max, func=$352load_global.1, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None)
2021-05-27 22:37:59,002 on stmt: $358get_iter.4 = getiter(value=$356call_function.3)
2021-05-27 22:37:59,002 on stmt: $phi360.1 = $358get_iter.4
2021-05-27 22:37:59,002 on stmt: jump 360
2021-05-27 22:37:59,002 ==== SSA block rewrite pass on 360
2021-05-27 22:37:59,003 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E108DD8>
2021-05-27 22:37:59,003 on stmt: $360for_iter.2 = iternext(value=$phi360.1)
2021-05-27 22:37:59,003 on stmt: $360for_iter.3 = pair_first(value=$360for_iter.2)
2021-05-27 22:37:59,003 on stmt: $360for_iter.4 = pair_second(value=$360for_iter.2)
2021-05-27 22:37:59,004 on stmt: $phi362.2 = $360for_iter.3
2021-05-27 22:37:59,004 on stmt: branch $360for_iter.4, 362, 464
2021-05-27 22:37:59,004 ==== SSA block rewrite pass on 362
2021-05-27 22:37:59,004 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E108DD8>
2021-05-27 22:37:59,004 on stmt: k = $phi362.2
2021-05-27 22:37:59,004 on stmt: $372binary_multiply.7 = k * index_step
2021-05-27 22:37:59,004 on stmt: $374binary_add.8 = offset.2 + $372binary_multiply.7
2021-05-27 22:37:59,005 on stmt: $376binary_subscr.9 = getitem(value=interp_win, index=$374binary_add.8, fn=<built-in function getitem>)
2021-05-27 22:37:59,005 on stmt: $388binary_multiply.15 = k * index_step
2021-05-27 22:37:59,005 on stmt: $390binary_add.16 = offset.2 + $388binary_multiply.15
2021-05-27 22:37:59,005 on stmt: $392binary_subscr.17 = getitem(value=interp_delta, index=$390binary_add.16, fn=<built-in function getitem>)
2021-05-27 22:37:59,005 on stmt: $394binary_multiply.18 = eta * $392binary_subscr.17
2021-05-27 22:37:59,005 on stmt: weight = $376binary_subscr.9 + $394binary_multiply.18
2021-05-27 22:37:59,006 on stmt: jump 400
2021-05-27 22:37:59,006 ==== SSA block rewrite pass on 400
2021-05-27 22:37:59,006 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E108DD8>
2021-05-27 22:37:59,006 on stmt: $402load_global.2 = global(range: <class 'range'>)
2021-05-27 22:37:59,006 on stmt: $406call_function.4 = call $402load_global.2(n_channels, func=$402load_global.2, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-27 22:37:59,006 on stmt: $408get_iter.5 = getiter(value=$406call_function.4)
2021-05-27 22:37:59,006 on stmt: $phi410.2 = $408get_iter.5
2021-05-27 22:37:59,007 on stmt: jump 410
2021-05-27 22:37:59,007 ==== SSA block rewrite pass on 410
2021-05-27 22:37:59,007 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E108DD8>
2021-05-27 22:37:59,007 on stmt: $410for_iter.3 = iternext(value=$phi410.2)
2021-05-27 22:37:59,007 on stmt: $410for_iter.4 = pair_first(value=$410for_iter.3)
2021-05-27 22:37:59,007 on stmt: $410for_iter.5 = pair_second(value=$410for_iter.3)
2021-05-27 22:37:59,007 on stmt: $phi412.3 = $410for_iter.4
2021-05-27 22:37:59,007 on stmt: branch $410for_iter.5, 412, 458
2021-05-27 22:37:59,007 ==== SSA block rewrite pass on 412
2021-05-27 22:37:59,007 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E108DD8>
2021-05-27 22:37:59,007 on stmt: j = $phi412.3
2021-05-27 22:37:59,007 on stmt: $420build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-27 22:37:59,008 on stmt: $424binary_subscr.10 = getitem(value=y, index=$420build_tuple.7, fn=<built-in function getitem>)
2021-05-27 22:37:59,008 on stmt: $434binary_add.15 = n + k
2021-05-27 22:37:59,008 on stmt: $const436.16 = const(int, 1)
2021-05-27 22:37:59,008 on stmt: $438binary_add.17 = $434binary_add.15 + $const436.16
2021-05-27 22:37:59,008 on stmt: $442build_tuple.19 = build_tuple(items=[Var($438binary_add.17, interpn.py:64), Var(j, interpn.py:46)])
2021-05-27 22:37:59,008 on stmt: $444binary_subscr.20 = getitem(value=x, index=$442build_tuple.19, fn=<built-in function getitem>)
2021-05-27 22:37:59,008 on stmt: $446binary_multiply.21 = weight * $444binary_subscr.20
2021-05-27 22:37:59,009 on stmt: $448inplace_add.22 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$424binary_subscr.10, rhs=$446binary_multiply.21, static_lhs=Undefined, static_rhs=Undefined)
2021-05-27 22:37:59,009 on stmt: y[$420build_tuple.7] = $448inplace_add.22
2021-05-27 22:37:59,009 on stmt: jump 410
2021-05-27 22:37:59,009 ==== SSA block rewrite pass on 458
2021-05-27 22:37:59,009 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E108DD8>
2021-05-27 22:37:59,009 on stmt: jump 460
2021-05-27 22:37:59,009 ==== SSA block rewrite pass on 460
2021-05-27 22:37:59,010 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E108DD8>
2021-05-27 22:37:59,010 on stmt: jump 360
2021-05-27 22:37:59,010 ==== SSA block rewrite pass on 464
2021-05-27 22:37:59,010 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E108DD8>
2021-05-27 22:37:59,010 on stmt: jump 466
2021-05-27 22:37:59,010 ==== SSA block rewrite pass on 466
2021-05-27 22:37:59,010 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E108DD8>
2021-05-27 22:37:59,010 on stmt: $470inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
2021-05-27 22:37:59,010 on stmt: time_register = $470inplace_add.3
2021-05-27 22:37:59,010 replaced with: time_register.1 = $470inplace_add.3
2021-05-27 22:37:59,010 on stmt: jump 112
2021-05-27 22:37:59,010 ==== SSA block rewrite pass on 476
2021-05-27 22:37:59,011 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E108DD8>
2021-05-27 22:37:59,011 on stmt: jump 478
2021-05-27 22:37:59,011 ==== SSA block rewrite pass on 478
2021-05-27 22:37:59,011 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E108DD8>
2021-05-27 22:37:59,011 on stmt: $const478.0 = const(NoneType, None)
2021-05-27 22:37:59,011 on stmt: $480return_value.1 = cast(value=$const478.0)
2021-05-27 22:37:59,011 on stmt: return $480return_value.1
2021-05-27 22:37:59,011 Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000000000E108A90>],
             466: [<numba.core.ir.Assign object at 0x000000000E1602B0>]})
2021-05-27 22:37:59,012 ==== SSA block rewrite pass on 0
2021-05-27 22:37:59,012 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11CEF0>
2021-05-27 22:37:59,012 on stmt: x = arg(0, name=x)
2021-05-27 22:37:59,012 on stmt: y = arg(1, name=y)
2021-05-27 22:37:59,012 on stmt: sample_ratio = arg(2, name=sample_ratio)
2021-05-27 22:37:59,012 on stmt: interp_win = arg(3, name=interp_win)
2021-05-27 22:37:59,013 on stmt: interp_delta = arg(4, name=interp_delta)
2021-05-27 22:37:59,013 on stmt: num_table = arg(5, name=num_table)
2021-05-27 22:37:59,013 on stmt: $2load_global.0 = global(min: <built-in function min>)
2021-05-27 22:37:59,013 on stmt: $const4.1 = const(float, 1.0)
2021-05-27 22:37:59,013 on stmt: scale = call $2load_global.0($const4.1, sample_ratio, func=$2load_global.0, args=[Var($const4.1, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None)
2021-05-27 22:37:59,013 on stmt: $const12.4 = const(float, 1.0)
2021-05-27 22:37:59,013 on stmt: time_increment = $const12.4 / sample_ratio
2021-05-27 22:37:59,013 on stmt: $20load_global.7 = global(int: <class 'int'>)
2021-05-27 22:37:59,013 on stmt: $26binary_multiply.10 = scale * num_table
2021-05-27 22:37:59,013 on stmt: index_step = call $20load_global.7($26binary_multiply.10, func=$20load_global.7, args=[Var($26binary_multiply.10, interpn.py:12)], kws=(), vararg=None)
2021-05-27 22:37:59,014 on stmt: time_register = const(float, 0.0)
2021-05-27 22:37:59,014 on stmt: n = const(int, 0)
2021-05-27 22:37:59,014 on stmt: frac = const(float, 0.0)
2021-05-27 22:37:59,014 on stmt: index_frac = const(float, 0.0)
2021-05-27 22:37:59,014 on stmt: offset = const(int, 0)
2021-05-27 22:37:59,014 on stmt: eta = const(float, 0.0)
2021-05-27 22:37:59,014 on stmt: weight = const(float, 0.0)
2021-05-27 22:37:59,014 on stmt: $62load_attr.20 = getattr(value=interp_win, attr=shape)
2021-05-27 22:37:59,014 on stmt: $const64.21 = const(int, 0)
2021-05-27 22:37:59,014 on stmt: nwin = static_getitem(value=$62load_attr.20, index=0, index_var=$const64.21, fn=<built-in function getitem>)
2021-05-27 22:37:59,014 on stmt: $72load_attr.24 = getattr(value=x, attr=shape)
2021-05-27 22:37:59,015 on stmt: $const74.25 = const(int, 0)
2021-05-27 22:37:59,015 on stmt: n_orig = static_getitem(value=$72load_attr.24, index=0, index_var=$const74.25, fn=<built-in function getitem>)
2021-05-27 22:37:59,015 on stmt: $82load_attr.28 = getattr(value=y, attr=shape)
2021-05-27 22:37:59,015 on stmt: $const84.29 = const(int, 0)
2021-05-27 22:37:59,015 on stmt: n_out = static_getitem(value=$82load_attr.28, index=0, index_var=$const84.29, fn=<built-in function getitem>)
2021-05-27 22:37:59,015 on stmt: $92load_attr.32 = getattr(value=y, attr=shape)
2021-05-27 22:37:59,015 on stmt: $const94.33 = const(int, 1)
2021-05-27 22:37:59,015 on stmt: n_channels = static_getitem(value=$92load_attr.32, index=1, index_var=$const94.33, fn=<built-in function getitem>)
2021-05-27 22:37:59,015 on stmt: jump 100
2021-05-27 22:37:59,015 ==== SSA block rewrite pass on 100
2021-05-27 22:37:59,016 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11CEF0>
2021-05-27 22:37:59,016 on stmt: $104load_global.0 = global(range: <class 'range'>)
2021-05-27 22:37:59,016 on stmt: $108call_function.2 = call $104load_global.0(n_out, func=$104load_global.0, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None)
2021-05-27 22:37:59,016 on stmt: $110get_iter.3 = getiter(value=$108call_function.2)
2021-05-27 22:37:59,016 on stmt: $phi112.0 = $110get_iter.3
2021-05-27 22:37:59,016 on stmt: jump 112
2021-05-27 22:37:59,016 ==== SSA block rewrite pass on 112
2021-05-27 22:37:59,016 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11CEF0>
2021-05-27 22:37:59,016 on stmt: $112for_iter.1 = iternext(value=$phi112.0)
2021-05-27 22:37:59,016 on stmt: $112for_iter.2 = pair_first(value=$112for_iter.1)
2021-05-27 22:37:59,016 on stmt: $112for_iter.3 = pair_second(value=$112for_iter.1)
2021-05-27 22:37:59,016 on stmt: $phi116.1 = $112for_iter.2
2021-05-27 22:37:59,017 on stmt: branch $112for_iter.3, 116, 476
2021-05-27 22:37:59,017 ==== SSA block rewrite pass on 116
2021-05-27 22:37:59,017 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11CEF0>
2021-05-27 22:37:59,017 on stmt: t = $phi116.1
2021-05-27 22:37:59,017 on stmt: $118load_global.2 = global(int: <class 'int'>)
2021-05-27 22:37:59,017 on stmt: n = call $118load_global.2(time_register, func=$118load_global.2, args=[Var(time_register, interpn.py:13)], kws=(), vararg=None)
2021-05-27 22:37:59,017 find_def var='time_register' stmt=n = call $118load_global.2(time_register, func=$118load_global.2, args=[Var(time_register, interpn.py:13)], kws=(), vararg=None)
2021-05-27 22:37:59,018 find_def_from_top label 116
2021-05-27 22:37:59,018 idom 112 from label 116
2021-05-27 22:37:59,018 find_def_from_bottom label 112
2021-05-27 22:37:59,018 find_def_from_top label 112
2021-05-27 22:37:59,018 insert phi node time_register.2 = phi(incoming_values=[], incoming_blocks=[]) at 112
2021-05-27 22:37:59,018 find_def_from_bottom label 466
2021-05-27 22:37:59,018 incoming_def time_register.1 = $470inplace_add.3
2021-05-27 22:37:59,018 find_def_from_bottom label 100
2021-05-27 22:37:59,018 find_def_from_top label 100
2021-05-27 22:37:59,018 idom 0 from label 100
2021-05-27 22:37:59,019 find_def_from_bottom label 0
2021-05-27 22:37:59,019 incoming_def time_register = const(float, 0.0)
2021-05-27 22:37:59,019 replaced with: n = call $118load_global.2(time_register.2, func=$118load_global.2, args=[Var(time_register.2, interpn.py:27)], kws=(), vararg=None)
2021-05-27 22:37:59,019 on stmt: $132binary_subtract.8 = time_register - n
2021-05-27 22:37:59,019 find_def var='time_register' stmt=$132binary_subtract.8 = time_register - n
2021-05-27 22:37:59,020 find_def_from_top label 116
2021-05-27 22:37:59,020 idom 112 from label 116
2021-05-27 22:37:59,020 find_def_from_bottom label 112
2021-05-27 22:37:59,020 replaced with: $132binary_subtract.8 = time_register.2 - n
2021-05-27 22:37:59,020 on stmt: frac = scale * $132binary_subtract.8
2021-05-27 22:37:59,020 on stmt: index_frac = frac * num_table
2021-05-27 22:37:59,021 on stmt: $146load_global.13 = global(int: <class 'int'>)
2021-05-27 22:37:59,021 on stmt: offset.1 = call $146load_global.13(index_frac, func=$146load_global.13, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None)
2021-05-27 22:37:59,021 on stmt: eta = index_frac - offset.1
2021-05-27 22:37:59,021 on stmt: $162load_global.19 = global(min: <built-in function min>)
2021-05-27 22:37:59,021 on stmt: $const166.21 = const(int, 1)
2021-05-27 22:37:59,021 on stmt: $168binary_add.22 = n + $const166.21
2021-05-27 22:37:59,022 on stmt: $174binary_subtract.25 = nwin - offset.1
2021-05-27 22:37:59,022 on stmt: $178binary_floor_divide.27 = $174binary_subtract.25 // index_step
2021-05-27 22:37:59,022 on stmt: i_max = call $162load_global.19($168binary_add.22, $178binary_floor_divide.27, func=$162load_global.19, args=[Var($168binary_add.22, interpn.py:42), Var($178binary_floor_divide.27, interpn.py:42)], kws=(), vararg=None)
2021-05-27 22:37:59,022 on stmt: jump 184
2021-05-27 22:37:59,022 ==== SSA block rewrite pass on 184
2021-05-27 22:37:59,022 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11CEF0>
2021-05-27 22:37:59,022 on stmt: $186load_global.1 = global(range: <class 'range'>)
2021-05-27 22:37:59,022 on stmt: $190call_function.3 = call $186load_global.1(i_max, func=$186load_global.1, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None)
2021-05-27 22:37:59,022 on stmt: $192get_iter.4 = getiter(value=$190call_function.3)
2021-05-27 22:37:59,023 on stmt: $phi194.1 = $192get_iter.4
2021-05-27 22:37:59,023 on stmt: jump 194
2021-05-27 22:37:59,023 ==== SSA block rewrite pass on 194
2021-05-27 22:37:59,023 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11CEF0>
2021-05-27 22:37:59,023 on stmt: $194for_iter.2 = iternext(value=$phi194.1)
2021-05-27 22:37:59,023 on stmt: $194for_iter.3 = pair_first(value=$194for_iter.2)
2021-05-27 22:37:59,023 on stmt: $194for_iter.4 = pair_second(value=$194for_iter.2)
2021-05-27 22:37:59,023 on stmt: $phi196.2 = $194for_iter.3
2021-05-27 22:37:59,023 on stmt: branch $194for_iter.4, 196, 290
2021-05-27 22:37:59,023 ==== SSA block rewrite pass on 196
2021-05-27 22:37:59,023 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11CEF0>
2021-05-27 22:37:59,024 on stmt: i = $phi196.2
2021-05-27 22:37:59,024 on stmt: $206binary_multiply.7 = i * index_step
2021-05-27 22:37:59,024 on stmt: $208binary_add.8 = offset.1 + $206binary_multiply.7
2021-05-27 22:37:59,024 on stmt: $210binary_subscr.9 = getitem(value=interp_win, index=$208binary_add.8, fn=<built-in function getitem>)
2021-05-27 22:37:59,024 on stmt: $222binary_multiply.15 = i * index_step
2021-05-27 22:37:59,024 on stmt: $224binary_add.16 = offset.1 + $222binary_multiply.15
2021-05-27 22:37:59,024 on stmt: $226binary_subscr.17 = getitem(value=interp_delta, index=$224binary_add.16, fn=<built-in function getitem>)
2021-05-27 22:37:59,024 on stmt: $228binary_multiply.18 = eta * $226binary_subscr.17
2021-05-27 22:37:59,024 on stmt: weight = $210binary_subscr.9 + $228binary_multiply.18
2021-05-27 22:37:59,024 on stmt: jump 234
2021-05-27 22:37:59,024 ==== SSA block rewrite pass on 234
2021-05-27 22:37:59,025 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11CEF0>
2021-05-27 22:37:59,025 on stmt: $236load_global.2 = global(range: <class 'range'>)
2021-05-27 22:37:59,025 on stmt: $240call_function.4 = call $236load_global.2(n_channels, func=$236load_global.2, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-27 22:37:59,025 on stmt: $242get_iter.5 = getiter(value=$240call_function.4)
2021-05-27 22:37:59,025 on stmt: $phi244.2 = $242get_iter.5
2021-05-27 22:37:59,025 on stmt: jump 244
2021-05-27 22:37:59,025 ==== SSA block rewrite pass on 244
2021-05-27 22:37:59,025 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11CEF0>
2021-05-27 22:37:59,025 on stmt: $244for_iter.3 = iternext(value=$phi244.2)
2021-05-27 22:37:59,025 on stmt: $244for_iter.4 = pair_first(value=$244for_iter.3)
2021-05-27 22:37:59,026 on stmt: $244for_iter.5 = pair_second(value=$244for_iter.3)
2021-05-27 22:37:59,026 on stmt: $phi246.3 = $244for_iter.4
2021-05-27 22:37:59,026 on stmt: branch $244for_iter.5, 246, 286
2021-05-27 22:37:59,026 ==== SSA block rewrite pass on 246
2021-05-27 22:37:59,026 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11CEF0>
2021-05-27 22:37:59,026 on stmt: j = $phi246.3
2021-05-27 22:37:59,026 on stmt: $254build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-27 22:37:59,026 on stmt: $258binary_subscr.10 = getitem(value=y, index=$254build_tuple.7, fn=<built-in function getitem>)
2021-05-27 22:37:59,026 on stmt: $268binary_subtract.15 = n - i
2021-05-27 22:37:59,027 on stmt: $272build_tuple.17 = build_tuple(items=[Var($268binary_subtract.15, interpn.py:47), Var(j, interpn.py:46)])
2021-05-27 22:37:59,027 on stmt: $274binary_subscr.18 = getitem(value=x, index=$272build_tuple.17, fn=<built-in function getitem>)
2021-05-27 22:37:59,027 on stmt: $276binary_multiply.19 = weight * $274binary_subscr.18
2021-05-27 22:37:59,027 on stmt: $278inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$258binary_subscr.10, rhs=$276binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
2021-05-27 22:37:59,027 on stmt: y[$254build_tuple.7] = $278inplace_add.20
2021-05-27 22:37:59,027 on stmt: jump 244
2021-05-27 22:37:59,027 ==== SSA block rewrite pass on 286
2021-05-27 22:37:59,027 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11CEF0>
2021-05-27 22:37:59,027 on stmt: jump 288
2021-05-27 22:37:59,027 ==== SSA block rewrite pass on 288
2021-05-27 22:37:59,028 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11CEF0>
2021-05-27 22:37:59,028 on stmt: jump 194
2021-05-27 22:37:59,028 ==== SSA block rewrite pass on 290
2021-05-27 22:37:59,028 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11CEF0>
2021-05-27 22:37:59,028 on stmt: jump 292
2021-05-27 22:37:59,028 ==== SSA block rewrite pass on 292
2021-05-27 22:37:59,028 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11CEF0>
2021-05-27 22:37:59,028 on stmt: $296binary_subtract.3 = scale - frac
2021-05-27 22:37:59,028 on stmt: frac = $296binary_subtract.3
2021-05-27 22:37:59,028 on stmt: index_frac = frac * num_table
2021-05-27 22:37:59,028 on stmt: $308load_global.7 = global(int: <class 'int'>)
2021-05-27 22:37:59,028 on stmt: offset.2 = call $308load_global.7(index_frac, func=$308load_global.7, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None)
2021-05-27 22:37:59,029 on stmt: eta = index_frac - offset.2
2021-05-27 22:37:59,029 on stmt: $324load_global.13 = global(min: <built-in function min>)
2021-05-27 22:37:59,029 on stmt: $330binary_subtract.16 = n_orig - n
2021-05-27 22:37:59,029 on stmt: $const332.17 = const(int, 1)
2021-05-27 22:37:59,029 on stmt: $334binary_subtract.18 = $330binary_subtract.16 - $const332.17
2021-05-27 22:37:59,029 on stmt: $340binary_subtract.21 = nwin - offset.2
2021-05-27 22:37:59,029 on stmt: $344binary_floor_divide.23 = $340binary_subtract.21 // index_step
2021-05-27 22:37:59,029 on stmt: k_max = call $324load_global.13($334binary_subtract.18, $344binary_floor_divide.23, func=$324load_global.13, args=[Var($334binary_subtract.18, interpn.py:60), Var($344binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None)
2021-05-27 22:37:59,029 on stmt: jump 350
2021-05-27 22:37:59,029 ==== SSA block rewrite pass on 350
2021-05-27 22:37:59,030 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11CEF0>
2021-05-27 22:37:59,030 on stmt: $352load_global.1 = global(range: <class 'range'>)
2021-05-27 22:37:59,030 on stmt: $356call_function.3 = call $352load_global.1(k_max, func=$352load_global.1, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None)
2021-05-27 22:37:59,030 on stmt: $358get_iter.4 = getiter(value=$356call_function.3)
2021-05-27 22:37:59,030 on stmt: $phi360.1 = $358get_iter.4
2021-05-27 22:37:59,030 on stmt: jump 360
2021-05-27 22:37:59,030 ==== SSA block rewrite pass on 360
2021-05-27 22:37:59,030 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11CEF0>
2021-05-27 22:37:59,030 on stmt: $360for_iter.2 = iternext(value=$phi360.1)
2021-05-27 22:37:59,030 on stmt: $360for_iter.3 = pair_first(value=$360for_iter.2)
2021-05-27 22:37:59,030 on stmt: $360for_iter.4 = pair_second(value=$360for_iter.2)
2021-05-27 22:37:59,031 on stmt: $phi362.2 = $360for_iter.3
2021-05-27 22:37:59,031 on stmt: branch $360for_iter.4, 362, 464
2021-05-27 22:37:59,031 ==== SSA block rewrite pass on 362
2021-05-27 22:37:59,031 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11CEF0>
2021-05-27 22:37:59,031 on stmt: k = $phi362.2
2021-05-27 22:37:59,031 on stmt: $372binary_multiply.7 = k * index_step
2021-05-27 22:37:59,031 on stmt: $374binary_add.8 = offset.2 + $372binary_multiply.7
2021-05-27 22:37:59,031 on stmt: $376binary_subscr.9 = getitem(value=interp_win, index=$374binary_add.8, fn=<built-in function getitem>)
2021-05-27 22:37:59,031 on stmt: $388binary_multiply.15 = k * index_step
2021-05-27 22:37:59,031 on stmt: $390binary_add.16 = offset.2 + $388binary_multiply.15
2021-05-27 22:37:59,031 on stmt: $392binary_subscr.17 = getitem(value=interp_delta, index=$390binary_add.16, fn=<built-in function getitem>)
2021-05-27 22:37:59,032 on stmt: $394binary_multiply.18 = eta * $392binary_subscr.17
2021-05-27 22:37:59,032 on stmt: weight = $376binary_subscr.9 + $394binary_multiply.18
2021-05-27 22:37:59,032 on stmt: jump 400
2021-05-27 22:37:59,032 ==== SSA block rewrite pass on 400
2021-05-27 22:37:59,032 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11CEF0>
2021-05-27 22:37:59,032 on stmt: $402load_global.2 = global(range: <class 'range'>)
2021-05-27 22:37:59,032 on stmt: $406call_function.4 = call $402load_global.2(n_channels, func=$402load_global.2, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-27 22:37:59,032 on stmt: $408get_iter.5 = getiter(value=$406call_function.4)
2021-05-27 22:37:59,032 on stmt: $phi410.2 = $408get_iter.5
2021-05-27 22:37:59,032 on stmt: jump 410
2021-05-27 22:37:59,032 ==== SSA block rewrite pass on 410
2021-05-27 22:37:59,033 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11CEF0>
2021-05-27 22:37:59,033 on stmt: $410for_iter.3 = iternext(value=$phi410.2)
2021-05-27 22:37:59,033 on stmt: $410for_iter.4 = pair_first(value=$410for_iter.3)
2021-05-27 22:37:59,033 on stmt: $410for_iter.5 = pair_second(value=$410for_iter.3)
2021-05-27 22:37:59,033 on stmt: $phi412.3 = $410for_iter.4
2021-05-27 22:37:59,033 on stmt: branch $410for_iter.5, 412, 458
2021-05-27 22:37:59,033 ==== SSA block rewrite pass on 412
2021-05-27 22:37:59,033 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11CEF0>
2021-05-27 22:37:59,033 on stmt: j = $phi412.3
2021-05-27 22:37:59,033 on stmt: $420build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-27 22:37:59,033 on stmt: $424binary_subscr.10 = getitem(value=y, index=$420build_tuple.7, fn=<built-in function getitem>)
2021-05-27 22:37:59,033 on stmt: $434binary_add.15 = n + k
2021-05-27 22:37:59,034 on stmt: $const436.16 = const(int, 1)
2021-05-27 22:37:59,034 on stmt: $438binary_add.17 = $434binary_add.15 + $const436.16
2021-05-27 22:37:59,034 on stmt: $442build_tuple.19 = build_tuple(items=[Var($438binary_add.17, interpn.py:64), Var(j, interpn.py:46)])
2021-05-27 22:37:59,034 on stmt: $444binary_subscr.20 = getitem(value=x, index=$442build_tuple.19, fn=<built-in function getitem>)
2021-05-27 22:37:59,034 on stmt: $446binary_multiply.21 = weight * $444binary_subscr.20
2021-05-27 22:37:59,034 on stmt: $448inplace_add.22 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$424binary_subscr.10, rhs=$446binary_multiply.21, static_lhs=Undefined, static_rhs=Undefined)
2021-05-27 22:37:59,034 on stmt: y[$420build_tuple.7] = $448inplace_add.22
2021-05-27 22:37:59,034 on stmt: jump 410
2021-05-27 22:37:59,035 ==== SSA block rewrite pass on 458
2021-05-27 22:37:59,035 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11CEF0>
2021-05-27 22:37:59,035 on stmt: jump 460
2021-05-27 22:37:59,035 ==== SSA block rewrite pass on 460
2021-05-27 22:37:59,035 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11CEF0>
2021-05-27 22:37:59,035 on stmt: jump 360
2021-05-27 22:37:59,035 ==== SSA block rewrite pass on 464
2021-05-27 22:37:59,035 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11CEF0>
2021-05-27 22:37:59,035 on stmt: jump 466
2021-05-27 22:37:59,035 ==== SSA block rewrite pass on 466
2021-05-27 22:37:59,035 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11CEF0>
2021-05-27 22:37:59,035 on stmt: $470inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
2021-05-27 22:37:59,036 find_def var='time_register' stmt=$470inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
2021-05-27 22:37:59,036 find_def_from_top label 466
2021-05-27 22:37:59,036 idom 464 from label 466
2021-05-27 22:37:59,036 find_def_from_bottom label 464
2021-05-27 22:37:59,036 find_def_from_top label 464
2021-05-27 22:37:59,036 idom 360 from label 464
2021-05-27 22:37:59,036 find_def_from_bottom label 360
2021-05-27 22:37:59,036 find_def_from_top label 360
2021-05-27 22:37:59,036 idom 350 from label 360
2021-05-27 22:37:59,036 find_def_from_bottom label 350
2021-05-27 22:37:59,036 find_def_from_top label 350
2021-05-27 22:37:59,036 idom 292 from label 350
2021-05-27 22:37:59,037 find_def_from_bottom label 292
2021-05-27 22:37:59,037 find_def_from_top label 292
2021-05-27 22:37:59,037 idom 290 from label 292
2021-05-27 22:37:59,037 find_def_from_bottom label 290
2021-05-27 22:37:59,037 find_def_from_top label 290
2021-05-27 22:37:59,037 idom 194 from label 290
2021-05-27 22:37:59,037 find_def_from_bottom label 194
2021-05-27 22:37:59,037 find_def_from_top label 194
2021-05-27 22:37:59,037 idom 184 from label 194
2021-05-27 22:37:59,037 find_def_from_bottom label 184
2021-05-27 22:37:59,037 find_def_from_top label 184
2021-05-27 22:37:59,037 idom 116 from label 184
2021-05-27 22:37:59,037 find_def_from_bottom label 116
2021-05-27 22:37:59,038 find_def_from_top label 116
2021-05-27 22:37:59,038 idom 112 from label 116
2021-05-27 22:37:59,038 find_def_from_bottom label 112
2021-05-27 22:37:59,038 replaced with: $470inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register.2, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
2021-05-27 22:37:59,038 on stmt: time_register.1 = $470inplace_add.3
2021-05-27 22:37:59,038 on stmt: jump 112
2021-05-27 22:37:59,038 ==== SSA block rewrite pass on 476
2021-05-27 22:37:59,038 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11CEF0>
2021-05-27 22:37:59,038 on stmt: jump 478
2021-05-27 22:37:59,038 ==== SSA block rewrite pass on 478
2021-05-27 22:37:59,038 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11CEF0>
2021-05-27 22:37:59,038 on stmt: $const478.0 = const(NoneType, None)
2021-05-27 22:37:59,039 on stmt: $480return_value.1 = cast(value=$const478.0)
2021-05-27 22:37:59,039 on stmt: return $480return_value.1
2021-05-27 22:37:59,039 Fix SSA violator on var n
2021-05-27 22:37:59,039 ==== SSA block rewrite pass on 0
2021-05-27 22:37:59,039 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E08C8D0>
2021-05-27 22:37:59,039 on stmt: x = arg(0, name=x)
2021-05-27 22:37:59,039 on stmt: y = arg(1, name=y)
2021-05-27 22:37:59,039 on stmt: sample_ratio = arg(2, name=sample_ratio)
2021-05-27 22:37:59,039 on stmt: interp_win = arg(3, name=interp_win)
2021-05-27 22:37:59,039 on stmt: interp_delta = arg(4, name=interp_delta)
2021-05-27 22:37:59,039 on stmt: num_table = arg(5, name=num_table)
2021-05-27 22:37:59,039 on stmt: $2load_global.0 = global(min: <built-in function min>)
2021-05-27 22:37:59,040 on stmt: $const4.1 = const(float, 1.0)
2021-05-27 22:37:59,040 on stmt: scale = call $2load_global.0($const4.1, sample_ratio, func=$2load_global.0, args=[Var($const4.1, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None)
2021-05-27 22:37:59,040 on stmt: $const12.4 = const(float, 1.0)
2021-05-27 22:37:59,040 on stmt: time_increment = $const12.4 / sample_ratio
2021-05-27 22:37:59,040 on stmt: $20load_global.7 = global(int: <class 'int'>)
2021-05-27 22:37:59,040 on stmt: $26binary_multiply.10 = scale * num_table
2021-05-27 22:37:59,040 on stmt: index_step = call $20load_global.7($26binary_multiply.10, func=$20load_global.7, args=[Var($26binary_multiply.10, interpn.py:12)], kws=(), vararg=None)
2021-05-27 22:37:59,040 on stmt: time_register = const(float, 0.0)
2021-05-27 22:37:59,040 on stmt: n = const(int, 0)
2021-05-27 22:37:59,040 first assign: n
2021-05-27 22:37:59,040 replaced with: n = const(int, 0)
2021-05-27 22:37:59,041 on stmt: frac = const(float, 0.0)
2021-05-27 22:37:59,041 on stmt: index_frac = const(float, 0.0)
2021-05-27 22:37:59,041 on stmt: offset = const(int, 0)
2021-05-27 22:37:59,041 on stmt: eta = const(float, 0.0)
2021-05-27 22:37:59,041 on stmt: weight = const(float, 0.0)
2021-05-27 22:37:59,041 on stmt: $62load_attr.20 = getattr(value=interp_win, attr=shape)
2021-05-27 22:37:59,041 on stmt: $const64.21 = const(int, 0)
2021-05-27 22:37:59,041 on stmt: nwin = static_getitem(value=$62load_attr.20, index=0, index_var=$const64.21, fn=<built-in function getitem>)
2021-05-27 22:37:59,041 on stmt: $72load_attr.24 = getattr(value=x, attr=shape)
2021-05-27 22:37:59,041 on stmt: $const74.25 = const(int, 0)
2021-05-27 22:37:59,041 on stmt: n_orig = static_getitem(value=$72load_attr.24, index=0, index_var=$const74.25, fn=<built-in function getitem>)
2021-05-27 22:37:59,041 on stmt: $82load_attr.28 = getattr(value=y, attr=shape)
2021-05-27 22:37:59,042 on stmt: $const84.29 = const(int, 0)
2021-05-27 22:37:59,042 on stmt: n_out = static_getitem(value=$82load_attr.28, index=0, index_var=$const84.29, fn=<built-in function getitem>)
2021-05-27 22:37:59,042 on stmt: $92load_attr.32 = getattr(value=y, attr=shape)
2021-05-27 22:37:59,042 on stmt: $const94.33 = const(int, 1)
2021-05-27 22:37:59,042 on stmt: n_channels = static_getitem(value=$92load_attr.32, index=1, index_var=$const94.33, fn=<built-in function getitem>)
2021-05-27 22:37:59,042 on stmt: jump 100
2021-05-27 22:37:59,042 ==== SSA block rewrite pass on 100
2021-05-27 22:37:59,042 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E08C8D0>
2021-05-27 22:37:59,042 on stmt: $104load_global.0 = global(range: <class 'range'>)
2021-05-27 22:37:59,042 on stmt: $108call_function.2 = call $104load_global.0(n_out, func=$104load_global.0, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None)
2021-05-27 22:37:59,042 on stmt: $110get_iter.3 = getiter(value=$108call_function.2)
2021-05-27 22:37:59,043 on stmt: $phi112.0 = $110get_iter.3
2021-05-27 22:37:59,043 on stmt: jump 112
2021-05-27 22:37:59,043 ==== SSA block rewrite pass on 112
2021-05-27 22:37:59,043 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E08C8D0>
2021-05-27 22:37:59,043 on stmt: time_register.2 = phi(incoming_values=[Var(time_register.1, interpn.py:67), Var(time_register, interpn.py:13)], incoming_blocks=[466, 100])
2021-05-27 22:37:59,043 on stmt: $112for_iter.1 = iternext(value=$phi112.0)
2021-05-27 22:37:59,043 on stmt: $112for_iter.2 = pair_first(value=$112for_iter.1)
2021-05-27 22:37:59,043 on stmt: $112for_iter.3 = pair_second(value=$112for_iter.1)
2021-05-27 22:37:59,043 on stmt: $phi116.1 = $112for_iter.2
2021-05-27 22:37:59,043 on stmt: branch $112for_iter.3, 116, 476
2021-05-27 22:37:59,043 ==== SSA block rewrite pass on 116
2021-05-27 22:37:59,043 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E08C8D0>
2021-05-27 22:37:59,044 on stmt: t = $phi116.1
2021-05-27 22:37:59,044 on stmt: $118load_global.2 = global(int: <class 'int'>)
2021-05-27 22:37:59,044 on stmt: n = call $118load_global.2(time_register.2, func=$118load_global.2, args=[Var(time_register.2, interpn.py:27)], kws=(), vararg=None)
2021-05-27 22:37:59,044 replaced with: n.1 = call $118load_global.2(time_register.2, func=$118load_global.2, args=[Var(time_register.2, interpn.py:27)], kws=(), vararg=None)
2021-05-27 22:37:59,044 on stmt: $132binary_subtract.8 = time_register.2 - n
2021-05-27 22:37:59,044 on stmt: frac = scale * $132binary_subtract.8
2021-05-27 22:37:59,044 on stmt: index_frac = frac * num_table
2021-05-27 22:37:59,044 on stmt: $146load_global.13 = global(int: <class 'int'>)
2021-05-27 22:37:59,044 on stmt: offset.1 = call $146load_global.13(index_frac, func=$146load_global.13, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None)
2021-05-27 22:37:59,044 on stmt: eta = index_frac - offset.1
2021-05-27 22:37:59,045 on stmt: $162load_global.19 = global(min: <built-in function min>)
2021-05-27 22:37:59,045 on stmt: $const166.21 = const(int, 1)
2021-05-27 22:37:59,045 on stmt: $168binary_add.22 = n + $const166.21
2021-05-27 22:37:59,045 on stmt: $174binary_subtract.25 = nwin - offset.1
2021-05-27 22:37:59,045 on stmt: $178binary_floor_divide.27 = $174binary_subtract.25 // index_step
2021-05-27 22:37:59,045 on stmt: i_max = call $162load_global.19($168binary_add.22, $178binary_floor_divide.27, func=$162load_global.19, args=[Var($168binary_add.22, interpn.py:42), Var($178binary_floor_divide.27, interpn.py:42)], kws=(), vararg=None)
2021-05-27 22:37:59,045 on stmt: jump 184
2021-05-27 22:37:59,045 ==== SSA block rewrite pass on 184
2021-05-27 22:37:59,045 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E08C8D0>
2021-05-27 22:37:59,045 on stmt: $186load_global.1 = global(range: <class 'range'>)
2021-05-27 22:37:59,045 on stmt: $190call_function.3 = call $186load_global.1(i_max, func=$186load_global.1, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None)
2021-05-27 22:37:59,045 on stmt: $192get_iter.4 = getiter(value=$190call_function.3)
2021-05-27 22:37:59,045 on stmt: $phi194.1 = $192get_iter.4
2021-05-27 22:37:59,045 on stmt: jump 194
2021-05-27 22:37:59,045 ==== SSA block rewrite pass on 194
2021-05-27 22:37:59,045 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E08C8D0>
2021-05-27 22:37:59,045 on stmt: $194for_iter.2 = iternext(value=$phi194.1)
2021-05-27 22:37:59,045 on stmt: $194for_iter.3 = pair_first(value=$194for_iter.2)
2021-05-27 22:37:59,045 on stmt: $194for_iter.4 = pair_second(value=$194for_iter.2)
2021-05-27 22:37:59,045 on stmt: $phi196.2 = $194for_iter.3
2021-05-27 22:37:59,045 on stmt: branch $194for_iter.4, 196, 290
2021-05-27 22:37:59,045 ==== SSA block rewrite pass on 196
2021-05-27 22:37:59,045 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E08C8D0>
2021-05-27 22:37:59,045 on stmt: i = $phi196.2
2021-05-27 22:37:59,045 on stmt: $206binary_multiply.7 = i * index_step
2021-05-27 22:37:59,045 on stmt: $208binary_add.8 = offset.1 + $206binary_multiply.7
2021-05-27 22:37:59,045 on stmt: $210binary_subscr.9 = getitem(value=interp_win, index=$208binary_add.8, fn=<built-in function getitem>)
2021-05-27 22:37:59,045 on stmt: $222binary_multiply.15 = i * index_step
2021-05-27 22:37:59,045 on stmt: $224binary_add.16 = offset.1 + $222binary_multiply.15
2021-05-27 22:37:59,045 on stmt: $226binary_subscr.17 = getitem(value=interp_delta, index=$224binary_add.16, fn=<built-in function getitem>)
2021-05-27 22:37:59,045 on stmt: $228binary_multiply.18 = eta * $226binary_subscr.17
2021-05-27 22:37:59,045 on stmt: weight = $210binary_subscr.9 + $228binary_multiply.18
2021-05-27 22:37:59,045 on stmt: jump 234
2021-05-27 22:37:59,045 ==== SSA block rewrite pass on 234
2021-05-27 22:37:59,045 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E08C8D0>
2021-05-27 22:37:59,045 on stmt: $236load_global.2 = global(range: <class 'range'>)
2021-05-27 22:37:59,045 on stmt: $240call_function.4 = call $236load_global.2(n_channels, func=$236load_global.2, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-27 22:37:59,045 on stmt: $242get_iter.5 = getiter(value=$240call_function.4)
2021-05-27 22:37:59,045 on stmt: $phi244.2 = $242get_iter.5
2021-05-27 22:37:59,045 on stmt: jump 244
2021-05-27 22:37:59,045 ==== SSA block rewrite pass on 244
2021-05-27 22:37:59,045 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E08C8D0>
2021-05-27 22:37:59,045 on stmt: $244for_iter.3 = iternext(value=$phi244.2)
2021-05-27 22:37:59,045 on stmt: $244for_iter.4 = pair_first(value=$244for_iter.3)
2021-05-27 22:37:59,045 on stmt: $244for_iter.5 = pair_second(value=$244for_iter.3)
2021-05-27 22:37:59,045 on stmt: $phi246.3 = $244for_iter.4
2021-05-27 22:37:59,045 on stmt: branch $244for_iter.5, 246, 286
2021-05-27 22:37:59,045 ==== SSA block rewrite pass on 246
2021-05-27 22:37:59,045 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E08C8D0>
2021-05-27 22:37:59,045 on stmt: j = $phi246.3
2021-05-27 22:37:59,045 on stmt: $254build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-27 22:37:59,045 on stmt: $258binary_subscr.10 = getitem(value=y, index=$254build_tuple.7, fn=<built-in function getitem>)
2021-05-27 22:37:59,045 on stmt: $268binary_subtract.15 = n - i
2021-05-27 22:37:59,045 on stmt: $272build_tuple.17 = build_tuple(items=[Var($268binary_subtract.15, interpn.py:47), Var(j, interpn.py:46)])
2021-05-27 22:37:59,045 on stmt: $274binary_subscr.18 = getitem(value=x, index=$272build_tuple.17, fn=<built-in function getitem>)
2021-05-27 22:37:59,045 on stmt: $276binary_multiply.19 = weight * $274binary_subscr.18
2021-05-27 22:37:59,045 on stmt: $278inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$258binary_subscr.10, rhs=$276binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
2021-05-27 22:37:59,045 on stmt: y[$254build_tuple.7] = $278inplace_add.20
2021-05-27 22:37:59,045 on stmt: jump 244
2021-05-27 22:37:59,045 ==== SSA block rewrite pass on 286
2021-05-27 22:37:59,045 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E08C8D0>
2021-05-27 22:37:59,045 on stmt: jump 288
2021-05-27 22:37:59,045 ==== SSA block rewrite pass on 288
2021-05-27 22:37:59,045 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E08C8D0>
2021-05-27 22:37:59,045 on stmt: jump 194
2021-05-27 22:37:59,045 ==== SSA block rewrite pass on 290
2021-05-27 22:37:59,045 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E08C8D0>
2021-05-27 22:37:59,045 on stmt: jump 292
2021-05-27 22:37:59,045 ==== SSA block rewrite pass on 292
2021-05-27 22:37:59,045 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E08C8D0>
2021-05-27 22:37:59,045 on stmt: $296binary_subtract.3 = scale - frac
2021-05-27 22:37:59,045 on stmt: frac = $296binary_subtract.3
2021-05-27 22:37:59,045 on stmt: index_frac = frac * num_table
2021-05-27 22:37:59,045 on stmt: $308load_global.7 = global(int: <class 'int'>)
2021-05-27 22:37:59,045 on stmt: offset.2 = call $308load_global.7(index_frac, func=$308load_global.7, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None)
2021-05-27 22:37:59,045 on stmt: eta = index_frac - offset.2
2021-05-27 22:37:59,045 on stmt: $324load_global.13 = global(min: <built-in function min>)
2021-05-27 22:37:59,045 on stmt: $330binary_subtract.16 = n_orig - n
2021-05-27 22:37:59,045 on stmt: $const332.17 = const(int, 1)
2021-05-27 22:37:59,045 on stmt: $334binary_subtract.18 = $330binary_subtract.16 - $const332.17
2021-05-27 22:37:59,045 on stmt: $340binary_subtract.21 = nwin - offset.2
2021-05-27 22:37:59,045 on stmt: $344binary_floor_divide.23 = $340binary_subtract.21 // index_step
2021-05-27 22:37:59,045 on stmt: k_max = call $324load_global.13($334binary_subtract.18, $344binary_floor_divide.23, func=$324load_global.13, args=[Var($334binary_subtract.18, interpn.py:60), Var($344binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None)
2021-05-27 22:37:59,045 on stmt: jump 350
2021-05-27 22:37:59,045 ==== SSA block rewrite pass on 350
2021-05-27 22:37:59,045 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E08C8D0>
2021-05-27 22:37:59,045 on stmt: $352load_global.1 = global(range: <class 'range'>)
2021-05-27 22:37:59,045 on stmt: $356call_function.3 = call $352load_global.1(k_max, func=$352load_global.1, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None)
2021-05-27 22:37:59,045 on stmt: $358get_iter.4 = getiter(value=$356call_function.3)
2021-05-27 22:37:59,045 on stmt: $phi360.1 = $358get_iter.4
2021-05-27 22:37:59,045 on stmt: jump 360
2021-05-27 22:37:59,045 ==== SSA block rewrite pass on 360
2021-05-27 22:37:59,045 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E08C8D0>
2021-05-27 22:37:59,045 on stmt: $360for_iter.2 = iternext(value=$phi360.1)
2021-05-27 22:37:59,045 on stmt: $360for_iter.3 = pair_first(value=$360for_iter.2)
2021-05-27 22:37:59,045 on stmt: $360for_iter.4 = pair_second(value=$360for_iter.2)
2021-05-27 22:37:59,045 on stmt: $phi362.2 = $360for_iter.3
2021-05-27 22:37:59,045 on stmt: branch $360for_iter.4, 362, 464
2021-05-27 22:37:59,045 ==== SSA block rewrite pass on 362
2021-05-27 22:37:59,045 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E08C8D0>
2021-05-27 22:37:59,045 on stmt: k = $phi362.2
2021-05-27 22:37:59,045 on stmt: $372binary_multiply.7 = k * index_step
2021-05-27 22:37:59,045 on stmt: $374binary_add.8 = offset.2 + $372binary_multiply.7
2021-05-27 22:37:59,045 on stmt: $376binary_subscr.9 = getitem(value=interp_win, index=$374binary_add.8, fn=<built-in function getitem>)
2021-05-27 22:37:59,045 on stmt: $388binary_multiply.15 = k * index_step
2021-05-27 22:37:59,045 on stmt: $390binary_add.16 = offset.2 + $388binary_multiply.15
2021-05-27 22:37:59,045 on stmt: $392binary_subscr.17 = getitem(value=interp_delta, index=$390binary_add.16, fn=<built-in function getitem>)
2021-05-27 22:37:59,045 on stmt: $394binary_multiply.18 = eta * $392binary_subscr.17
2021-05-27 22:37:59,045 on stmt: weight = $376binary_subscr.9 + $394binary_multiply.18
2021-05-27 22:37:59,045 on stmt: jump 400
2021-05-27 22:37:59,045 ==== SSA block rewrite pass on 400
2021-05-27 22:37:59,045 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E08C8D0>
2021-05-27 22:37:59,045 on stmt: $402load_global.2 = global(range: <class 'range'>)
2021-05-27 22:37:59,045 on stmt: $406call_function.4 = call $402load_global.2(n_channels, func=$402load_global.2, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-27 22:37:59,045 on stmt: $408get_iter.5 = getiter(value=$406call_function.4)
2021-05-27 22:37:59,045 on stmt: $phi410.2 = $408get_iter.5
2021-05-27 22:37:59,045 on stmt: jump 410
2021-05-27 22:37:59,045 ==== SSA block rewrite pass on 410
2021-05-27 22:37:59,045 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E08C8D0>
2021-05-27 22:37:59,045 on stmt: $410for_iter.3 = iternext(value=$phi410.2)
2021-05-27 22:37:59,045 on stmt: $410for_iter.4 = pair_first(value=$410for_iter.3)
2021-05-27 22:37:59,045 on stmt: $410for_iter.5 = pair_second(value=$410for_iter.3)
2021-05-27 22:37:59,045 on stmt: $phi412.3 = $410for_iter.4
2021-05-27 22:37:59,045 on stmt: branch $410for_iter.5, 412, 458
2021-05-27 22:37:59,045 ==== SSA block rewrite pass on 412
2021-05-27 22:37:59,045 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E08C8D0>
2021-05-27 22:37:59,045 on stmt: j = $phi412.3
2021-05-27 22:37:59,045 on stmt: $420build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-27 22:37:59,045 on stmt: $424binary_subscr.10 = getitem(value=y, index=$420build_tuple.7, fn=<built-in function getitem>)
2021-05-27 22:37:59,045 on stmt: $434binary_add.15 = n + k
2021-05-27 22:37:59,045 on stmt: $const436.16 = const(int, 1)
2021-05-27 22:37:59,045 on stmt: $438binary_add.17 = $434binary_add.15 + $const436.16
2021-05-27 22:37:59,045 on stmt: $442build_tuple.19 = build_tuple(items=[Var($438binary_add.17, interpn.py:64), Var(j, interpn.py:46)])
2021-05-27 22:37:59,045 on stmt: $444binary_subscr.20 = getitem(value=x, index=$442build_tuple.19, fn=<built-in function getitem>)
2021-05-27 22:37:59,045 on stmt: $446binary_multiply.21 = weight * $444binary_subscr.20
2021-05-27 22:37:59,045 on stmt: $448inplace_add.22 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$424binary_subscr.10, rhs=$446binary_multiply.21, static_lhs=Undefined, static_rhs=Undefined)
2021-05-27 22:37:59,045 on stmt: y[$420build_tuple.7] = $448inplace_add.22
2021-05-27 22:37:59,045 on stmt: jump 410
2021-05-27 22:37:59,045 ==== SSA block rewrite pass on 458
2021-05-27 22:37:59,045 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E08C8D0>
2021-05-27 22:37:59,045 on stmt: jump 460
2021-05-27 22:37:59,045 ==== SSA block rewrite pass on 460
2021-05-27 22:37:59,045 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E08C8D0>
2021-05-27 22:37:59,045 on stmt: jump 360
2021-05-27 22:37:59,045 ==== SSA block rewrite pass on 464
2021-05-27 22:37:59,045 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E08C8D0>
2021-05-27 22:37:59,045 on stmt: jump 466
2021-05-27 22:37:59,045 ==== SSA block rewrite pass on 466
2021-05-27 22:37:59,045 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E08C8D0>
2021-05-27 22:37:59,045 on stmt: $470inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register.2, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
2021-05-27 22:37:59,045 on stmt: time_register.1 = $470inplace_add.3
2021-05-27 22:37:59,045 on stmt: jump 112
2021-05-27 22:37:59,045 ==== SSA block rewrite pass on 476
2021-05-27 22:37:59,045 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E08C8D0>
2021-05-27 22:37:59,045 on stmt: jump 478
2021-05-27 22:37:59,045 ==== SSA block rewrite pass on 478
2021-05-27 22:37:59,045 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E08C8D0>
2021-05-27 22:37:59,045 on stmt: $const478.0 = const(NoneType, None)
2021-05-27 22:37:59,045 on stmt: $480return_value.1 = cast(value=$const478.0)
2021-05-27 22:37:59,045 on stmt: return $480return_value.1
2021-05-27 22:37:59,045 Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000000000A84BA20>],
             116: [<numba.core.ir.Assign object at 0x000000000E08C860>]})
2021-05-27 22:37:59,045 ==== SSA block rewrite pass on 0
2021-05-27 22:37:59,045 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C7B8>
2021-05-27 22:37:59,045 on stmt: x = arg(0, name=x)
2021-05-27 22:37:59,045 on stmt: y = arg(1, name=y)
2021-05-27 22:37:59,045 on stmt: sample_ratio = arg(2, name=sample_ratio)
2021-05-27 22:37:59,045 on stmt: interp_win = arg(3, name=interp_win)
2021-05-27 22:37:59,045 on stmt: interp_delta = arg(4, name=interp_delta)
2021-05-27 22:37:59,045 on stmt: num_table = arg(5, name=num_table)
2021-05-27 22:37:59,045 on stmt: $2load_global.0 = global(min: <built-in function min>)
2021-05-27 22:37:59,045 on stmt: $const4.1 = const(float, 1.0)
2021-05-27 22:37:59,045 on stmt: scale = call $2load_global.0($const4.1, sample_ratio, func=$2load_global.0, args=[Var($const4.1, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None)
2021-05-27 22:37:59,045 on stmt: $const12.4 = const(float, 1.0)
2021-05-27 22:37:59,045 on stmt: time_increment = $const12.4 / sample_ratio
2021-05-27 22:37:59,045 on stmt: $20load_global.7 = global(int: <class 'int'>)
2021-05-27 22:37:59,045 on stmt: $26binary_multiply.10 = scale * num_table
2021-05-27 22:37:59,045 on stmt: index_step = call $20load_global.7($26binary_multiply.10, func=$20load_global.7, args=[Var($26binary_multiply.10, interpn.py:12)], kws=(), vararg=None)
2021-05-27 22:37:59,060 on stmt: time_register = const(float, 0.0)
2021-05-27 22:37:59,060 on stmt: n = const(int, 0)
2021-05-27 22:37:59,060 on stmt: frac = const(float, 0.0)
2021-05-27 22:37:59,060 on stmt: index_frac = const(float, 0.0)
2021-05-27 22:37:59,060 on stmt: offset = const(int, 0)
2021-05-27 22:37:59,060 on stmt: eta = const(float, 0.0)
2021-05-27 22:37:59,060 on stmt: weight = const(float, 0.0)
2021-05-27 22:37:59,060 on stmt: $62load_attr.20 = getattr(value=interp_win, attr=shape)
2021-05-27 22:37:59,060 on stmt: $const64.21 = const(int, 0)
2021-05-27 22:37:59,060 on stmt: nwin = static_getitem(value=$62load_attr.20, index=0, index_var=$const64.21, fn=<built-in function getitem>)
2021-05-27 22:37:59,060 on stmt: $72load_attr.24 = getattr(value=x, attr=shape)
2021-05-27 22:37:59,060 on stmt: $const74.25 = const(int, 0)
2021-05-27 22:37:59,060 on stmt: n_orig = static_getitem(value=$72load_attr.24, index=0, index_var=$const74.25, fn=<built-in function getitem>)
2021-05-27 22:37:59,060 on stmt: $82load_attr.28 = getattr(value=y, attr=shape)
2021-05-27 22:37:59,060 on stmt: $const84.29 = const(int, 0)
2021-05-27 22:37:59,060 on stmt: n_out = static_getitem(value=$82load_attr.28, index=0, index_var=$const84.29, fn=<built-in function getitem>)
2021-05-27 22:37:59,060 on stmt: $92load_attr.32 = getattr(value=y, attr=shape)
2021-05-27 22:37:59,060 on stmt: $const94.33 = const(int, 1)
2021-05-27 22:37:59,060 on stmt: n_channels = static_getitem(value=$92load_attr.32, index=1, index_var=$const94.33, fn=<built-in function getitem>)
2021-05-27 22:37:59,060 on stmt: jump 100
2021-05-27 22:37:59,060 ==== SSA block rewrite pass on 100
2021-05-27 22:37:59,060 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C7B8>
2021-05-27 22:37:59,060 on stmt: $104load_global.0 = global(range: <class 'range'>)
2021-05-27 22:37:59,060 on stmt: $108call_function.2 = call $104load_global.0(n_out, func=$104load_global.0, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None)
2021-05-27 22:37:59,060 on stmt: $110get_iter.3 = getiter(value=$108call_function.2)
2021-05-27 22:37:59,060 on stmt: $phi112.0 = $110get_iter.3
2021-05-27 22:37:59,060 on stmt: jump 112
2021-05-27 22:37:59,060 ==== SSA block rewrite pass on 112
2021-05-27 22:37:59,060 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C7B8>
2021-05-27 22:37:59,060 on stmt: time_register.2 = phi(incoming_values=[Var(time_register.1, interpn.py:67), Var(time_register, interpn.py:13)], incoming_blocks=[466, 100])
2021-05-27 22:37:59,060 on stmt: $112for_iter.1 = iternext(value=$phi112.0)
2021-05-27 22:37:59,060 on stmt: $112for_iter.2 = pair_first(value=$112for_iter.1)
2021-05-27 22:37:59,060 on stmt: $112for_iter.3 = pair_second(value=$112for_iter.1)
2021-05-27 22:37:59,060 on stmt: $phi116.1 = $112for_iter.2
2021-05-27 22:37:59,060 on stmt: branch $112for_iter.3, 116, 476
2021-05-27 22:37:59,060 ==== SSA block rewrite pass on 116
2021-05-27 22:37:59,060 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C7B8>
2021-05-27 22:37:59,060 on stmt: t = $phi116.1
2021-05-27 22:37:59,060 on stmt: $118load_global.2 = global(int: <class 'int'>)
2021-05-27 22:37:59,060 on stmt: n.1 = call $118load_global.2(time_register.2, func=$118load_global.2, args=[Var(time_register.2, interpn.py:27)], kws=(), vararg=None)
2021-05-27 22:37:59,060 on stmt: $132binary_subtract.8 = time_register.2 - n
2021-05-27 22:37:59,060 find_def var='n' stmt=$132binary_subtract.8 = time_register.2 - n
2021-05-27 22:37:59,060 replaced with: $132binary_subtract.8 = time_register.2 - n.1
2021-05-27 22:37:59,060 on stmt: frac = scale * $132binary_subtract.8
2021-05-27 22:37:59,060 on stmt: index_frac = frac * num_table
2021-05-27 22:37:59,060 on stmt: $146load_global.13 = global(int: <class 'int'>)
2021-05-27 22:37:59,060 on stmt: offset.1 = call $146load_global.13(index_frac, func=$146load_global.13, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None)
2021-05-27 22:37:59,060 on stmt: eta = index_frac - offset.1
2021-05-27 22:37:59,060 on stmt: $162load_global.19 = global(min: <built-in function min>)
2021-05-27 22:37:59,060 on stmt: $const166.21 = const(int, 1)
2021-05-27 22:37:59,060 on stmt: $168binary_add.22 = n + $const166.21
2021-05-27 22:37:59,060 find_def var='n' stmt=$168binary_add.22 = n + $const166.21
2021-05-27 22:37:59,060 replaced with: $168binary_add.22 = n.1 + $const166.21
2021-05-27 22:37:59,060 on stmt: $174binary_subtract.25 = nwin - offset.1
2021-05-27 22:37:59,060 on stmt: $178binary_floor_divide.27 = $174binary_subtract.25 // index_step
2021-05-27 22:37:59,060 on stmt: i_max = call $162load_global.19($168binary_add.22, $178binary_floor_divide.27, func=$162load_global.19, args=[Var($168binary_add.22, interpn.py:42), Var($178binary_floor_divide.27, interpn.py:42)], kws=(), vararg=None)
2021-05-27 22:37:59,060 on stmt: jump 184
2021-05-27 22:37:59,060 ==== SSA block rewrite pass on 184
2021-05-27 22:37:59,060 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C7B8>
2021-05-27 22:37:59,060 on stmt: $186load_global.1 = global(range: <class 'range'>)
2021-05-27 22:37:59,060 on stmt: $190call_function.3 = call $186load_global.1(i_max, func=$186load_global.1, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None)
2021-05-27 22:37:59,060 on stmt: $192get_iter.4 = getiter(value=$190call_function.3)
2021-05-27 22:37:59,060 on stmt: $phi194.1 = $192get_iter.4
2021-05-27 22:37:59,060 on stmt: jump 194
2021-05-27 22:37:59,060 ==== SSA block rewrite pass on 194
2021-05-27 22:37:59,060 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C7B8>
2021-05-27 22:37:59,060 on stmt: $194for_iter.2 = iternext(value=$phi194.1)
2021-05-27 22:37:59,060 on stmt: $194for_iter.3 = pair_first(value=$194for_iter.2)
2021-05-27 22:37:59,060 on stmt: $194for_iter.4 = pair_second(value=$194for_iter.2)
2021-05-27 22:37:59,060 on stmt: $phi196.2 = $194for_iter.3
2021-05-27 22:37:59,060 on stmt: branch $194for_iter.4, 196, 290
2021-05-27 22:37:59,060 ==== SSA block rewrite pass on 196
2021-05-27 22:37:59,060 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C7B8>
2021-05-27 22:37:59,060 on stmt: i = $phi196.2
2021-05-27 22:37:59,060 on stmt: $206binary_multiply.7 = i * index_step
2021-05-27 22:37:59,060 on stmt: $208binary_add.8 = offset.1 + $206binary_multiply.7
2021-05-27 22:37:59,060 on stmt: $210binary_subscr.9 = getitem(value=interp_win, index=$208binary_add.8, fn=<built-in function getitem>)
2021-05-27 22:37:59,060 on stmt: $222binary_multiply.15 = i * index_step
2021-05-27 22:37:59,060 on stmt: $224binary_add.16 = offset.1 + $222binary_multiply.15
2021-05-27 22:37:59,060 on stmt: $226binary_subscr.17 = getitem(value=interp_delta, index=$224binary_add.16, fn=<built-in function getitem>)
2021-05-27 22:37:59,060 on stmt: $228binary_multiply.18 = eta * $226binary_subscr.17
2021-05-27 22:37:59,060 on stmt: weight = $210binary_subscr.9 + $228binary_multiply.18
2021-05-27 22:37:59,060 on stmt: jump 234
2021-05-27 22:37:59,060 ==== SSA block rewrite pass on 234
2021-05-27 22:37:59,060 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C7B8>
2021-05-27 22:37:59,060 on stmt: $236load_global.2 = global(range: <class 'range'>)
2021-05-27 22:37:59,060 on stmt: $240call_function.4 = call $236load_global.2(n_channels, func=$236load_global.2, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-27 22:37:59,060 on stmt: $242get_iter.5 = getiter(value=$240call_function.4)
2021-05-27 22:37:59,060 on stmt: $phi244.2 = $242get_iter.5
2021-05-27 22:37:59,060 on stmt: jump 244
2021-05-27 22:37:59,060 ==== SSA block rewrite pass on 244
2021-05-27 22:37:59,060 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C7B8>
2021-05-27 22:37:59,060 on stmt: $244for_iter.3 = iternext(value=$phi244.2)
2021-05-27 22:37:59,060 on stmt: $244for_iter.4 = pair_first(value=$244for_iter.3)
2021-05-27 22:37:59,060 on stmt: $244for_iter.5 = pair_second(value=$244for_iter.3)
2021-05-27 22:37:59,060 on stmt: $phi246.3 = $244for_iter.4
2021-05-27 22:37:59,060 on stmt: branch $244for_iter.5, 246, 286
2021-05-27 22:37:59,060 ==== SSA block rewrite pass on 246
2021-05-27 22:37:59,060 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C7B8>
2021-05-27 22:37:59,060 on stmt: j = $phi246.3
2021-05-27 22:37:59,060 on stmt: $254build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-27 22:37:59,060 on stmt: $258binary_subscr.10 = getitem(value=y, index=$254build_tuple.7, fn=<built-in function getitem>)
2021-05-27 22:37:59,060 on stmt: $268binary_subtract.15 = n - i
2021-05-27 22:37:59,060 find_def var='n' stmt=$268binary_subtract.15 = n - i
2021-05-27 22:37:59,060 find_def_from_top label 246
2021-05-27 22:37:59,060 idom 244 from label 246
2021-05-27 22:37:59,060 find_def_from_bottom label 244
2021-05-27 22:37:59,060 find_def_from_top label 244
2021-05-27 22:37:59,060 idom 234 from label 244
2021-05-27 22:37:59,060 find_def_from_bottom label 234
2021-05-27 22:37:59,060 find_def_from_top label 234
2021-05-27 22:37:59,060 idom 196 from label 234
2021-05-27 22:37:59,060 find_def_from_bottom label 196
2021-05-27 22:37:59,060 find_def_from_top label 196
2021-05-27 22:37:59,060 idom 194 from label 196
2021-05-27 22:37:59,060 find_def_from_bottom label 194
2021-05-27 22:37:59,060 find_def_from_top label 194
2021-05-27 22:37:59,060 idom 184 from label 194
2021-05-27 22:37:59,060 find_def_from_bottom label 184
2021-05-27 22:37:59,060 find_def_from_top label 184
2021-05-27 22:37:59,060 idom 116 from label 184
2021-05-27 22:37:59,060 find_def_from_bottom label 116
2021-05-27 22:37:59,060 replaced with: $268binary_subtract.15 = n.1 - i
2021-05-27 22:37:59,060 on stmt: $272build_tuple.17 = build_tuple(items=[Var($268binary_subtract.15, interpn.py:47), Var(j, interpn.py:46)])
2021-05-27 22:37:59,060 on stmt: $274binary_subscr.18 = getitem(value=x, index=$272build_tuple.17, fn=<built-in function getitem>)
2021-05-27 22:37:59,060 on stmt: $276binary_multiply.19 = weight * $274binary_subscr.18
2021-05-27 22:37:59,060 on stmt: $278inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$258binary_subscr.10, rhs=$276binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
2021-05-27 22:37:59,060 on stmt: y[$254build_tuple.7] = $278inplace_add.20
2021-05-27 22:37:59,060 on stmt: jump 244
2021-05-27 22:37:59,060 ==== SSA block rewrite pass on 286
2021-05-27 22:37:59,060 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C7B8>
2021-05-27 22:37:59,060 on stmt: jump 288
2021-05-27 22:37:59,060 ==== SSA block rewrite pass on 288
2021-05-27 22:37:59,060 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C7B8>
2021-05-27 22:37:59,060 on stmt: jump 194
2021-05-27 22:37:59,060 ==== SSA block rewrite pass on 290
2021-05-27 22:37:59,060 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C7B8>
2021-05-27 22:37:59,060 on stmt: jump 292
2021-05-27 22:37:59,060 ==== SSA block rewrite pass on 292
2021-05-27 22:37:59,060 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C7B8>
2021-05-27 22:37:59,060 on stmt: $296binary_subtract.3 = scale - frac
2021-05-27 22:37:59,060 on stmt: frac = $296binary_subtract.3
2021-05-27 22:37:59,060 on stmt: index_frac = frac * num_table
2021-05-27 22:37:59,060 on stmt: $308load_global.7 = global(int: <class 'int'>)
2021-05-27 22:37:59,060 on stmt: offset.2 = call $308load_global.7(index_frac, func=$308load_global.7, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None)
2021-05-27 22:37:59,060 on stmt: eta = index_frac - offset.2
2021-05-27 22:37:59,060 on stmt: $324load_global.13 = global(min: <built-in function min>)
2021-05-27 22:37:59,060 on stmt: $330binary_subtract.16 = n_orig - n
2021-05-27 22:37:59,060 find_def var='n' stmt=$330binary_subtract.16 = n_orig - n
2021-05-27 22:37:59,060 find_def_from_top label 292
2021-05-27 22:37:59,060 idom 290 from label 292
2021-05-27 22:37:59,060 find_def_from_bottom label 290
2021-05-27 22:37:59,060 find_def_from_top label 290
2021-05-27 22:37:59,060 idom 194 from label 290
2021-05-27 22:37:59,060 find_def_from_bottom label 194
2021-05-27 22:37:59,060 find_def_from_top label 194
2021-05-27 22:37:59,060 idom 184 from label 194
2021-05-27 22:37:59,060 find_def_from_bottom label 184
2021-05-27 22:37:59,060 find_def_from_top label 184
2021-05-27 22:37:59,060 idom 116 from label 184
2021-05-27 22:37:59,060 find_def_from_bottom label 116
2021-05-27 22:37:59,060 replaced with: $330binary_subtract.16 = n_orig - n.1
2021-05-27 22:37:59,060 on stmt: $const332.17 = const(int, 1)
2021-05-27 22:37:59,060 on stmt: $334binary_subtract.18 = $330binary_subtract.16 - $const332.17
2021-05-27 22:37:59,060 on stmt: $340binary_subtract.21 = nwin - offset.2
2021-05-27 22:37:59,060 on stmt: $344binary_floor_divide.23 = $340binary_subtract.21 // index_step
2021-05-27 22:37:59,076 on stmt: k_max = call $324load_global.13($334binary_subtract.18, $344binary_floor_divide.23, func=$324load_global.13, args=[Var($334binary_subtract.18, interpn.py:60), Var($344binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None)
2021-05-27 22:37:59,076 on stmt: jump 350
2021-05-27 22:37:59,076 ==== SSA block rewrite pass on 350
2021-05-27 22:37:59,076 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C7B8>
2021-05-27 22:37:59,076 on stmt: $352load_global.1 = global(range: <class 'range'>)
2021-05-27 22:37:59,076 on stmt: $356call_function.3 = call $352load_global.1(k_max, func=$352load_global.1, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None)
2021-05-27 22:37:59,076 on stmt: $358get_iter.4 = getiter(value=$356call_function.3)
2021-05-27 22:37:59,076 on stmt: $phi360.1 = $358get_iter.4
2021-05-27 22:37:59,076 on stmt: jump 360
2021-05-27 22:37:59,076 ==== SSA block rewrite pass on 360
2021-05-27 22:37:59,076 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C7B8>
2021-05-27 22:37:59,076 on stmt: $360for_iter.2 = iternext(value=$phi360.1)
2021-05-27 22:37:59,076 on stmt: $360for_iter.3 = pair_first(value=$360for_iter.2)
2021-05-27 22:37:59,076 on stmt: $360for_iter.4 = pair_second(value=$360for_iter.2)
2021-05-27 22:37:59,076 on stmt: $phi362.2 = $360for_iter.3
2021-05-27 22:37:59,076 on stmt: branch $360for_iter.4, 362, 464
2021-05-27 22:37:59,076 ==== SSA block rewrite pass on 362
2021-05-27 22:37:59,076 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C7B8>
2021-05-27 22:37:59,076 on stmt: k = $phi362.2
2021-05-27 22:37:59,076 on stmt: $372binary_multiply.7 = k * index_step
2021-05-27 22:37:59,076 on stmt: $374binary_add.8 = offset.2 + $372binary_multiply.7
2021-05-27 22:37:59,076 on stmt: $376binary_subscr.9 = getitem(value=interp_win, index=$374binary_add.8, fn=<built-in function getitem>)
2021-05-27 22:37:59,076 on stmt: $388binary_multiply.15 = k * index_step
2021-05-27 22:37:59,076 on stmt: $390binary_add.16 = offset.2 + $388binary_multiply.15
2021-05-27 22:37:59,076 on stmt: $392binary_subscr.17 = getitem(value=interp_delta, index=$390binary_add.16, fn=<built-in function getitem>)
2021-05-27 22:37:59,076 on stmt: $394binary_multiply.18 = eta * $392binary_subscr.17
2021-05-27 22:37:59,076 on stmt: weight = $376binary_subscr.9 + $394binary_multiply.18
2021-05-27 22:37:59,076 on stmt: jump 400
2021-05-27 22:37:59,076 ==== SSA block rewrite pass on 400
2021-05-27 22:37:59,076 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C7B8>
2021-05-27 22:37:59,076 on stmt: $402load_global.2 = global(range: <class 'range'>)
2021-05-27 22:37:59,076 on stmt: $406call_function.4 = call $402load_global.2(n_channels, func=$402load_global.2, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-27 22:37:59,076 on stmt: $408get_iter.5 = getiter(value=$406call_function.4)
2021-05-27 22:37:59,076 on stmt: $phi410.2 = $408get_iter.5
2021-05-27 22:37:59,076 on stmt: jump 410
2021-05-27 22:37:59,076 ==== SSA block rewrite pass on 410
2021-05-27 22:37:59,076 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C7B8>
2021-05-27 22:37:59,076 on stmt: $410for_iter.3 = iternext(value=$phi410.2)
2021-05-27 22:37:59,076 on stmt: $410for_iter.4 = pair_first(value=$410for_iter.3)
2021-05-27 22:37:59,076 on stmt: $410for_iter.5 = pair_second(value=$410for_iter.3)
2021-05-27 22:37:59,076 on stmt: $phi412.3 = $410for_iter.4
2021-05-27 22:37:59,076 on stmt: branch $410for_iter.5, 412, 458
2021-05-27 22:37:59,076 ==== SSA block rewrite pass on 412
2021-05-27 22:37:59,076 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C7B8>
2021-05-27 22:37:59,076 on stmt: j = $phi412.3
2021-05-27 22:37:59,076 on stmt: $420build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-27 22:37:59,076 on stmt: $424binary_subscr.10 = getitem(value=y, index=$420build_tuple.7, fn=<built-in function getitem>)
2021-05-27 22:37:59,076 on stmt: $434binary_add.15 = n + k
2021-05-27 22:37:59,076 find_def var='n' stmt=$434binary_add.15 = n + k
2021-05-27 22:37:59,076 find_def_from_top label 412
2021-05-27 22:37:59,076 idom 410 from label 412
2021-05-27 22:37:59,076 find_def_from_bottom label 410
2021-05-27 22:37:59,076 find_def_from_top label 410
2021-05-27 22:37:59,076 idom 400 from label 410
2021-05-27 22:37:59,076 find_def_from_bottom label 400
2021-05-27 22:37:59,076 find_def_from_top label 400
2021-05-27 22:37:59,076 idom 362 from label 400
2021-05-27 22:37:59,076 find_def_from_bottom label 362
2021-05-27 22:37:59,076 find_def_from_top label 362
2021-05-27 22:37:59,076 idom 360 from label 362
2021-05-27 22:37:59,076 find_def_from_bottom label 360
2021-05-27 22:37:59,076 find_def_from_top label 360
2021-05-27 22:37:59,076 idom 350 from label 360
2021-05-27 22:37:59,076 find_def_from_bottom label 350
2021-05-27 22:37:59,076 find_def_from_top label 350
2021-05-27 22:37:59,076 idom 292 from label 350
2021-05-27 22:37:59,076 find_def_from_bottom label 292
2021-05-27 22:37:59,076 find_def_from_top label 292
2021-05-27 22:37:59,076 idom 290 from label 292
2021-05-27 22:37:59,076 find_def_from_bottom label 290
2021-05-27 22:37:59,076 find_def_from_top label 290
2021-05-27 22:37:59,076 idom 194 from label 290
2021-05-27 22:37:59,076 find_def_from_bottom label 194
2021-05-27 22:37:59,076 find_def_from_top label 194
2021-05-27 22:37:59,076 idom 184 from label 194
2021-05-27 22:37:59,076 find_def_from_bottom label 184
2021-05-27 22:37:59,076 find_def_from_top label 184
2021-05-27 22:37:59,076 idom 116 from label 184
2021-05-27 22:37:59,076 find_def_from_bottom label 116
2021-05-27 22:37:59,076 replaced with: $434binary_add.15 = n.1 + k
2021-05-27 22:37:59,076 on stmt: $const436.16 = const(int, 1)
2021-05-27 22:37:59,076 on stmt: $438binary_add.17 = $434binary_add.15 + $const436.16
2021-05-27 22:37:59,076 on stmt: $442build_tuple.19 = build_tuple(items=[Var($438binary_add.17, interpn.py:64), Var(j, interpn.py:46)])
2021-05-27 22:37:59,076 on stmt: $444binary_subscr.20 = getitem(value=x, index=$442build_tuple.19, fn=<built-in function getitem>)
2021-05-27 22:37:59,076 on stmt: $446binary_multiply.21 = weight * $444binary_subscr.20
2021-05-27 22:37:59,076 on stmt: $448inplace_add.22 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$424binary_subscr.10, rhs=$446binary_multiply.21, static_lhs=Undefined, static_rhs=Undefined)
2021-05-27 22:37:59,076 on stmt: y[$420build_tuple.7] = $448inplace_add.22
2021-05-27 22:37:59,076 on stmt: jump 410
2021-05-27 22:37:59,076 ==== SSA block rewrite pass on 458
2021-05-27 22:37:59,076 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C7B8>
2021-05-27 22:37:59,076 on stmt: jump 460
2021-05-27 22:37:59,076 ==== SSA block rewrite pass on 460
2021-05-27 22:37:59,076 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C7B8>
2021-05-27 22:37:59,076 on stmt: jump 360
2021-05-27 22:37:59,076 ==== SSA block rewrite pass on 464
2021-05-27 22:37:59,076 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C7B8>
2021-05-27 22:37:59,076 on stmt: jump 466
2021-05-27 22:37:59,076 ==== SSA block rewrite pass on 466
2021-05-27 22:37:59,076 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C7B8>
2021-05-27 22:37:59,076 on stmt: $470inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register.2, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
2021-05-27 22:37:59,076 on stmt: time_register.1 = $470inplace_add.3
2021-05-27 22:37:59,076 on stmt: jump 112
2021-05-27 22:37:59,076 ==== SSA block rewrite pass on 476
2021-05-27 22:37:59,076 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C7B8>
2021-05-27 22:37:59,076 on stmt: jump 478
2021-05-27 22:37:59,076 ==== SSA block rewrite pass on 478
2021-05-27 22:37:59,076 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C7B8>
2021-05-27 22:37:59,076 on stmt: $const478.0 = const(NoneType, None)
2021-05-27 22:37:59,076 on stmt: $480return_value.1 = cast(value=$const478.0)
2021-05-27 22:37:59,076 on stmt: return $480return_value.1
2021-05-27 22:37:59,076 Fix SSA violator on var weight
2021-05-27 22:37:59,076 ==== SSA block rewrite pass on 0
2021-05-27 22:37:59,076 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E077860>
2021-05-27 22:37:59,076 on stmt: x = arg(0, name=x)
2021-05-27 22:37:59,076 on stmt: y = arg(1, name=y)
2021-05-27 22:37:59,076 on stmt: sample_ratio = arg(2, name=sample_ratio)
2021-05-27 22:37:59,076 on stmt: interp_win = arg(3, name=interp_win)
2021-05-27 22:37:59,076 on stmt: interp_delta = arg(4, name=interp_delta)
2021-05-27 22:37:59,076 on stmt: num_table = arg(5, name=num_table)
2021-05-27 22:37:59,076 on stmt: $2load_global.0 = global(min: <built-in function min>)
2021-05-27 22:37:59,076 on stmt: $const4.1 = const(float, 1.0)
2021-05-27 22:37:59,076 on stmt: scale = call $2load_global.0($const4.1, sample_ratio, func=$2load_global.0, args=[Var($const4.1, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None)
2021-05-27 22:37:59,076 on stmt: $const12.4 = const(float, 1.0)
2021-05-27 22:37:59,076 on stmt: time_increment = $const12.4 / sample_ratio
2021-05-27 22:37:59,076 on stmt: $20load_global.7 = global(int: <class 'int'>)
2021-05-27 22:37:59,076 on stmt: $26binary_multiply.10 = scale * num_table
2021-05-27 22:37:59,076 on stmt: index_step = call $20load_global.7($26binary_multiply.10, func=$20load_global.7, args=[Var($26binary_multiply.10, interpn.py:12)], kws=(), vararg=None)
2021-05-27 22:37:59,076 on stmt: time_register = const(float, 0.0)
2021-05-27 22:37:59,076 on stmt: n = const(int, 0)
2021-05-27 22:37:59,076 on stmt: frac = const(float, 0.0)
2021-05-27 22:37:59,076 on stmt: index_frac = const(float, 0.0)
2021-05-27 22:37:59,076 on stmt: offset = const(int, 0)
2021-05-27 22:37:59,076 on stmt: eta = const(float, 0.0)
2021-05-27 22:37:59,076 on stmt: weight = const(float, 0.0)
2021-05-27 22:37:59,076 first assign: weight
2021-05-27 22:37:59,076 replaced with: weight = const(float, 0.0)
2021-05-27 22:37:59,076 on stmt: $62load_attr.20 = getattr(value=interp_win, attr=shape)
2021-05-27 22:37:59,076 on stmt: $const64.21 = const(int, 0)
2021-05-27 22:37:59,076 on stmt: nwin = static_getitem(value=$62load_attr.20, index=0, index_var=$const64.21, fn=<built-in function getitem>)
2021-05-27 22:37:59,076 on stmt: $72load_attr.24 = getattr(value=x, attr=shape)
2021-05-27 22:37:59,076 on stmt: $const74.25 = const(int, 0)
2021-05-27 22:37:59,076 on stmt: n_orig = static_getitem(value=$72load_attr.24, index=0, index_var=$const74.25, fn=<built-in function getitem>)
2021-05-27 22:37:59,076 on stmt: $82load_attr.28 = getattr(value=y, attr=shape)
2021-05-27 22:37:59,076 on stmt: $const84.29 = const(int, 0)
2021-05-27 22:37:59,076 on stmt: n_out = static_getitem(value=$82load_attr.28, index=0, index_var=$const84.29, fn=<built-in function getitem>)
2021-05-27 22:37:59,076 on stmt: $92load_attr.32 = getattr(value=y, attr=shape)
2021-05-27 22:37:59,076 on stmt: $const94.33 = const(int, 1)
2021-05-27 22:37:59,076 on stmt: n_channels = static_getitem(value=$92load_attr.32, index=1, index_var=$const94.33, fn=<built-in function getitem>)
2021-05-27 22:37:59,076 on stmt: jump 100
2021-05-27 22:37:59,076 ==== SSA block rewrite pass on 100
2021-05-27 22:37:59,076 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E077860>
2021-05-27 22:37:59,076 on stmt: $104load_global.0 = global(range: <class 'range'>)
2021-05-27 22:37:59,076 on stmt: $108call_function.2 = call $104load_global.0(n_out, func=$104load_global.0, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None)
2021-05-27 22:37:59,076 on stmt: $110get_iter.3 = getiter(value=$108call_function.2)
2021-05-27 22:37:59,076 on stmt: $phi112.0 = $110get_iter.3
2021-05-27 22:37:59,076 on stmt: jump 112
2021-05-27 22:37:59,076 ==== SSA block rewrite pass on 112
2021-05-27 22:37:59,076 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E077860>
2021-05-27 22:37:59,076 on stmt: time_register.2 = phi(incoming_values=[Var(time_register.1, interpn.py:67), Var(time_register, interpn.py:13)], incoming_blocks=[466, 100])
2021-05-27 22:37:59,076 on stmt: $112for_iter.1 = iternext(value=$phi112.0)
2021-05-27 22:37:59,076 on stmt: $112for_iter.2 = pair_first(value=$112for_iter.1)
2021-05-27 22:37:59,076 on stmt: $112for_iter.3 = pair_second(value=$112for_iter.1)
2021-05-27 22:37:59,076 on stmt: $phi116.1 = $112for_iter.2
2021-05-27 22:37:59,076 on stmt: branch $112for_iter.3, 116, 476
2021-05-27 22:37:59,076 ==== SSA block rewrite pass on 116
2021-05-27 22:37:59,076 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E077860>
2021-05-27 22:37:59,076 on stmt: t = $phi116.1
2021-05-27 22:37:59,076 on stmt: $118load_global.2 = global(int: <class 'int'>)
2021-05-27 22:37:59,076 on stmt: n.1 = call $118load_global.2(time_register.2, func=$118load_global.2, args=[Var(time_register.2, interpn.py:27)], kws=(), vararg=None)
2021-05-27 22:37:59,076 on stmt: $132binary_subtract.8 = time_register.2 - n.1
2021-05-27 22:37:59,076 on stmt: frac = scale * $132binary_subtract.8
2021-05-27 22:37:59,076 on stmt: index_frac = frac * num_table
2021-05-27 22:37:59,076 on stmt: $146load_global.13 = global(int: <class 'int'>)
2021-05-27 22:37:59,076 on stmt: offset.1 = call $146load_global.13(index_frac, func=$146load_global.13, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None)
2021-05-27 22:37:59,076 on stmt: eta = index_frac - offset.1
2021-05-27 22:37:59,076 on stmt: $162load_global.19 = global(min: <built-in function min>)
2021-05-27 22:37:59,076 on stmt: $const166.21 = const(int, 1)
2021-05-27 22:37:59,076 on stmt: $168binary_add.22 = n.1 + $const166.21
2021-05-27 22:37:59,076 on stmt: $174binary_subtract.25 = nwin - offset.1
2021-05-27 22:37:59,076 on stmt: $178binary_floor_divide.27 = $174binary_subtract.25 // index_step
2021-05-27 22:37:59,076 on stmt: i_max = call $162load_global.19($168binary_add.22, $178binary_floor_divide.27, func=$162load_global.19, args=[Var($168binary_add.22, interpn.py:42), Var($178binary_floor_divide.27, interpn.py:42)], kws=(), vararg=None)
2021-05-27 22:37:59,076 on stmt: jump 184
2021-05-27 22:37:59,091 ==== SSA block rewrite pass on 184
2021-05-27 22:37:59,091 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E077860>
2021-05-27 22:37:59,091 on stmt: $186load_global.1 = global(range: <class 'range'>)
2021-05-27 22:37:59,091 on stmt: $190call_function.3 = call $186load_global.1(i_max, func=$186load_global.1, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None)
2021-05-27 22:37:59,091 on stmt: $192get_iter.4 = getiter(value=$190call_function.3)
2021-05-27 22:37:59,091 on stmt: $phi194.1 = $192get_iter.4
2021-05-27 22:37:59,091 on stmt: jump 194
2021-05-27 22:37:59,091 ==== SSA block rewrite pass on 194
2021-05-27 22:37:59,092 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E077860>
2021-05-27 22:37:59,092 on stmt: $194for_iter.2 = iternext(value=$phi194.1)
2021-05-27 22:37:59,092 on stmt: $194for_iter.3 = pair_first(value=$194for_iter.2)
2021-05-27 22:37:59,092 on stmt: $194for_iter.4 = pair_second(value=$194for_iter.2)
2021-05-27 22:37:59,092 on stmt: $phi196.2 = $194for_iter.3
2021-05-27 22:37:59,092 on stmt: branch $194for_iter.4, 196, 290
2021-05-27 22:37:59,092 ==== SSA block rewrite pass on 196
2021-05-27 22:37:59,092 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E077860>
2021-05-27 22:37:59,093 on stmt: i = $phi196.2
2021-05-27 22:37:59,093 on stmt: $206binary_multiply.7 = i * index_step
2021-05-27 22:37:59,093 on stmt: $208binary_add.8 = offset.1 + $206binary_multiply.7
2021-05-27 22:37:59,093 on stmt: $210binary_subscr.9 = getitem(value=interp_win, index=$208binary_add.8, fn=<built-in function getitem>)
2021-05-27 22:37:59,093 on stmt: $222binary_multiply.15 = i * index_step
2021-05-27 22:37:59,093 on stmt: $224binary_add.16 = offset.1 + $222binary_multiply.15
2021-05-27 22:37:59,093 on stmt: $226binary_subscr.17 = getitem(value=interp_delta, index=$224binary_add.16, fn=<built-in function getitem>)
2021-05-27 22:37:59,093 on stmt: $228binary_multiply.18 = eta * $226binary_subscr.17
2021-05-27 22:37:59,093 on stmt: weight = $210binary_subscr.9 + $228binary_multiply.18
2021-05-27 22:37:59,093 replaced with: weight.1 = $210binary_subscr.9 + $228binary_multiply.18
2021-05-27 22:37:59,094 on stmt: jump 234
2021-05-27 22:37:59,094 ==== SSA block rewrite pass on 234
2021-05-27 22:37:59,094 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E077860>
2021-05-27 22:37:59,094 on stmt: $236load_global.2 = global(range: <class 'range'>)
2021-05-27 22:37:59,094 on stmt: $240call_function.4 = call $236load_global.2(n_channels, func=$236load_global.2, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-27 22:37:59,094 on stmt: $242get_iter.5 = getiter(value=$240call_function.4)
2021-05-27 22:37:59,094 on stmt: $phi244.2 = $242get_iter.5
2021-05-27 22:37:59,094 on stmt: jump 244
2021-05-27 22:37:59,094 ==== SSA block rewrite pass on 244
2021-05-27 22:37:59,094 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E077860>
2021-05-27 22:37:59,094 on stmt: $244for_iter.3 = iternext(value=$phi244.2)
2021-05-27 22:37:59,094 on stmt: $244for_iter.4 = pair_first(value=$244for_iter.3)
2021-05-27 22:37:59,095 on stmt: $244for_iter.5 = pair_second(value=$244for_iter.3)
2021-05-27 22:37:59,095 on stmt: $phi246.3 = $244for_iter.4
2021-05-27 22:37:59,095 on stmt: branch $244for_iter.5, 246, 286
2021-05-27 22:37:59,095 ==== SSA block rewrite pass on 246
2021-05-27 22:37:59,095 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E077860>
2021-05-27 22:37:59,095 on stmt: j = $phi246.3
2021-05-27 22:37:59,095 on stmt: $254build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-27 22:37:59,095 on stmt: $258binary_subscr.10 = getitem(value=y, index=$254build_tuple.7, fn=<built-in function getitem>)
2021-05-27 22:37:59,095 on stmt: $268binary_subtract.15 = n.1 - i
2021-05-27 22:37:59,095 on stmt: $272build_tuple.17 = build_tuple(items=[Var($268binary_subtract.15, interpn.py:47), Var(j, interpn.py:46)])
2021-05-27 22:37:59,095 on stmt: $274binary_subscr.18 = getitem(value=x, index=$272build_tuple.17, fn=<built-in function getitem>)
2021-05-27 22:37:59,096 on stmt: $276binary_multiply.19 = weight * $274binary_subscr.18
2021-05-27 22:37:59,096 on stmt: $278inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$258binary_subscr.10, rhs=$276binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
2021-05-27 22:37:59,096 on stmt: y[$254build_tuple.7] = $278inplace_add.20
2021-05-27 22:37:59,096 on stmt: jump 244
2021-05-27 22:37:59,096 ==== SSA block rewrite pass on 286
2021-05-27 22:37:59,096 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E077860>
2021-05-27 22:37:59,096 on stmt: jump 288
2021-05-27 22:37:59,096 ==== SSA block rewrite pass on 288
2021-05-27 22:37:59,096 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E077860>
2021-05-27 22:37:59,096 on stmt: jump 194
2021-05-27 22:37:59,096 ==== SSA block rewrite pass on 290
2021-05-27 22:37:59,096 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E077860>
2021-05-27 22:37:59,096 on stmt: jump 292
2021-05-27 22:37:59,097 ==== SSA block rewrite pass on 292
2021-05-27 22:37:59,097 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E077860>
2021-05-27 22:37:59,097 on stmt: $296binary_subtract.3 = scale - frac
2021-05-27 22:37:59,097 on stmt: frac = $296binary_subtract.3
2021-05-27 22:37:59,097 on stmt: index_frac = frac * num_table
2021-05-27 22:37:59,097 on stmt: $308load_global.7 = global(int: <class 'int'>)
2021-05-27 22:37:59,097 on stmt: offset.2 = call $308load_global.7(index_frac, func=$308load_global.7, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None)
2021-05-27 22:37:59,097 on stmt: eta = index_frac - offset.2
2021-05-27 22:37:59,097 on stmt: $324load_global.13 = global(min: <built-in function min>)
2021-05-27 22:37:59,097 on stmt: $330binary_subtract.16 = n_orig - n.1
2021-05-27 22:37:59,097 on stmt: $const332.17 = const(int, 1)
2021-05-27 22:37:59,098 on stmt: $334binary_subtract.18 = $330binary_subtract.16 - $const332.17
2021-05-27 22:37:59,098 on stmt: $340binary_subtract.21 = nwin - offset.2
2021-05-27 22:37:59,098 on stmt: $344binary_floor_divide.23 = $340binary_subtract.21 // index_step
2021-05-27 22:37:59,098 on stmt: k_max = call $324load_global.13($334binary_subtract.18, $344binary_floor_divide.23, func=$324load_global.13, args=[Var($334binary_subtract.18, interpn.py:60), Var($344binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None)
2021-05-27 22:37:59,098 on stmt: jump 350
2021-05-27 22:37:59,098 ==== SSA block rewrite pass on 350
2021-05-27 22:37:59,098 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E077860>
2021-05-27 22:37:59,098 on stmt: $352load_global.1 = global(range: <class 'range'>)
2021-05-27 22:37:59,098 on stmt: $356call_function.3 = call $352load_global.1(k_max, func=$352load_global.1, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None)
2021-05-27 22:37:59,098 on stmt: $358get_iter.4 = getiter(value=$356call_function.3)
2021-05-27 22:37:59,098 on stmt: $phi360.1 = $358get_iter.4
2021-05-27 22:37:59,099 on stmt: jump 360
2021-05-27 22:37:59,099 ==== SSA block rewrite pass on 360
2021-05-27 22:37:59,099 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E077860>
2021-05-27 22:37:59,099 on stmt: $360for_iter.2 = iternext(value=$phi360.1)
2021-05-27 22:37:59,099 on stmt: $360for_iter.3 = pair_first(value=$360for_iter.2)
2021-05-27 22:37:59,099 on stmt: $360for_iter.4 = pair_second(value=$360for_iter.2)
2021-05-27 22:37:59,099 on stmt: $phi362.2 = $360for_iter.3
2021-05-27 22:37:59,099 on stmt: branch $360for_iter.4, 362, 464
2021-05-27 22:37:59,099 ==== SSA block rewrite pass on 362
2021-05-27 22:37:59,099 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E077860>
2021-05-27 22:37:59,099 on stmt: k = $phi362.2
2021-05-27 22:37:59,099 on stmt: $372binary_multiply.7 = k * index_step
2021-05-27 22:37:59,099 on stmt: $374binary_add.8 = offset.2 + $372binary_multiply.7
2021-05-27 22:37:59,100 on stmt: $376binary_subscr.9 = getitem(value=interp_win, index=$374binary_add.8, fn=<built-in function getitem>)
2021-05-27 22:37:59,100 on stmt: $388binary_multiply.15 = k * index_step
2021-05-27 22:37:59,100 on stmt: $390binary_add.16 = offset.2 + $388binary_multiply.15
2021-05-27 22:37:59,100 on stmt: $392binary_subscr.17 = getitem(value=interp_delta, index=$390binary_add.16, fn=<built-in function getitem>)
2021-05-27 22:37:59,100 on stmt: $394binary_multiply.18 = eta * $392binary_subscr.17
2021-05-27 22:37:59,100 on stmt: weight = $376binary_subscr.9 + $394binary_multiply.18
2021-05-27 22:37:59,100 replaced with: weight.2 = $376binary_subscr.9 + $394binary_multiply.18
2021-05-27 22:37:59,100 on stmt: jump 400
2021-05-27 22:37:59,100 ==== SSA block rewrite pass on 400
2021-05-27 22:37:59,100 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E077860>
2021-05-27 22:37:59,100 on stmt: $402load_global.2 = global(range: <class 'range'>)
2021-05-27 22:37:59,101 on stmt: $406call_function.4 = call $402load_global.2(n_channels, func=$402load_global.2, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-27 22:37:59,101 on stmt: $408get_iter.5 = getiter(value=$406call_function.4)
2021-05-27 22:37:59,101 on stmt: $phi410.2 = $408get_iter.5
2021-05-27 22:37:59,101 on stmt: jump 410
2021-05-27 22:37:59,101 ==== SSA block rewrite pass on 410
2021-05-27 22:37:59,101 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E077860>
2021-05-27 22:37:59,101 on stmt: $410for_iter.3 = iternext(value=$phi410.2)
2021-05-27 22:37:59,101 on stmt: $410for_iter.4 = pair_first(value=$410for_iter.3)
2021-05-27 22:37:59,101 on stmt: $410for_iter.5 = pair_second(value=$410for_iter.3)
2021-05-27 22:37:59,101 on stmt: $phi412.3 = $410for_iter.4
2021-05-27 22:37:59,101 on stmt: branch $410for_iter.5, 412, 458
2021-05-27 22:37:59,101 ==== SSA block rewrite pass on 412
2021-05-27 22:37:59,102 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E077860>
2021-05-27 22:37:59,102 on stmt: j = $phi412.3
2021-05-27 22:37:59,102 on stmt: $420build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-27 22:37:59,102 on stmt: $424binary_subscr.10 = getitem(value=y, index=$420build_tuple.7, fn=<built-in function getitem>)
2021-05-27 22:37:59,102 on stmt: $434binary_add.15 = n.1 + k
2021-05-27 22:37:59,102 on stmt: $const436.16 = const(int, 1)
2021-05-27 22:37:59,102 on stmt: $438binary_add.17 = $434binary_add.15 + $const436.16
2021-05-27 22:37:59,102 on stmt: $442build_tuple.19 = build_tuple(items=[Var($438binary_add.17, interpn.py:64), Var(j, interpn.py:46)])
2021-05-27 22:37:59,102 on stmt: $444binary_subscr.20 = getitem(value=x, index=$442build_tuple.19, fn=<built-in function getitem>)
2021-05-27 22:37:59,102 on stmt: $446binary_multiply.21 = weight * $444binary_subscr.20
2021-05-27 22:37:59,102 on stmt: $448inplace_add.22 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$424binary_subscr.10, rhs=$446binary_multiply.21, static_lhs=Undefined, static_rhs=Undefined)
2021-05-27 22:37:59,103 on stmt: y[$420build_tuple.7] = $448inplace_add.22
2021-05-27 22:37:59,103 on stmt: jump 410
2021-05-27 22:37:59,103 ==== SSA block rewrite pass on 458
2021-05-27 22:37:59,103 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E077860>
2021-05-27 22:37:59,103 on stmt: jump 460
2021-05-27 22:37:59,103 ==== SSA block rewrite pass on 460
2021-05-27 22:37:59,103 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E077860>
2021-05-27 22:37:59,103 on stmt: jump 360
2021-05-27 22:37:59,103 ==== SSA block rewrite pass on 464
2021-05-27 22:37:59,103 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E077860>
2021-05-27 22:37:59,103 on stmt: jump 466
2021-05-27 22:37:59,103 ==== SSA block rewrite pass on 466
2021-05-27 22:37:59,103 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E077860>
2021-05-27 22:37:59,104 on stmt: $470inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register.2, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
2021-05-27 22:37:59,104 on stmt: time_register.1 = $470inplace_add.3
2021-05-27 22:37:59,104 on stmt: jump 112
2021-05-27 22:37:59,104 ==== SSA block rewrite pass on 476
2021-05-27 22:37:59,104 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E077860>
2021-05-27 22:37:59,104 on stmt: jump 478
2021-05-27 22:37:59,104 ==== SSA block rewrite pass on 478
2021-05-27 22:37:59,104 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E077860>
2021-05-27 22:37:59,104 on stmt: $const478.0 = const(NoneType, None)
2021-05-27 22:37:59,104 on stmt: $480return_value.1 = cast(value=$const478.0)
2021-05-27 22:37:59,104 on stmt: return $480return_value.1
2021-05-27 22:37:59,105 Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000000000E08CEF0>],
             196: [<numba.core.ir.Assign object at 0x000000000E108EB8>],
             362: [<numba.core.ir.Assign object at 0x000000000E11CF98>]})
2021-05-27 22:37:59,105 ==== SSA block rewrite pass on 0
2021-05-27 22:37:59,105 Running <numba.core.ssa._FixSSAVars object at 0x000000000E077860>
2021-05-27 22:37:59,105 on stmt: x = arg(0, name=x)
2021-05-27 22:37:59,105 on stmt: y = arg(1, name=y)
2021-05-27 22:37:59,106 on stmt: sample_ratio = arg(2, name=sample_ratio)
2021-05-27 22:37:59,106 on stmt: interp_win = arg(3, name=interp_win)
2021-05-27 22:37:59,106 on stmt: interp_delta = arg(4, name=interp_delta)
2021-05-27 22:37:59,106 on stmt: num_table = arg(5, name=num_table)
2021-05-27 22:37:59,106 on stmt: $2load_global.0 = global(min: <built-in function min>)
2021-05-27 22:37:59,106 on stmt: $const4.1 = const(float, 1.0)
2021-05-27 22:37:59,106 on stmt: scale = call $2load_global.0($const4.1, sample_ratio, func=$2load_global.0, args=[Var($const4.1, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None)
2021-05-27 22:37:59,106 on stmt: $const12.4 = const(float, 1.0)
2021-05-27 22:37:59,106 on stmt: time_increment = $const12.4 / sample_ratio
2021-05-27 22:37:59,106 on stmt: $20load_global.7 = global(int: <class 'int'>)
2021-05-27 22:37:59,106 on stmt: $26binary_multiply.10 = scale * num_table
2021-05-27 22:37:59,107 on stmt: index_step = call $20load_global.7($26binary_multiply.10, func=$20load_global.7, args=[Var($26binary_multiply.10, interpn.py:12)], kws=(), vararg=None)
2021-05-27 22:37:59,107 on stmt: time_register = const(float, 0.0)
2021-05-27 22:37:59,107 on stmt: n = const(int, 0)
2021-05-27 22:37:59,107 on stmt: frac = const(float, 0.0)
2021-05-27 22:37:59,107 on stmt: index_frac = const(float, 0.0)
2021-05-27 22:37:59,107 on stmt: offset = const(int, 0)
2021-05-27 22:37:59,107 on stmt: eta = const(float, 0.0)
2021-05-27 22:37:59,107 on stmt: weight = const(float, 0.0)
2021-05-27 22:37:59,107 on stmt: $62load_attr.20 = getattr(value=interp_win, attr=shape)
2021-05-27 22:37:59,107 on stmt: $const64.21 = const(int, 0)
2021-05-27 22:37:59,107 on stmt: nwin = static_getitem(value=$62load_attr.20, index=0, index_var=$const64.21, fn=<built-in function getitem>)
2021-05-27 22:37:59,108 on stmt: $72load_attr.24 = getattr(value=x, attr=shape)
2021-05-27 22:37:59,108 on stmt: $const74.25 = const(int, 0)
2021-05-27 22:37:59,108 on stmt: n_orig = static_getitem(value=$72load_attr.24, index=0, index_var=$const74.25, fn=<built-in function getitem>)
2021-05-27 22:37:59,108 on stmt: $82load_attr.28 = getattr(value=y, attr=shape)
2021-05-27 22:37:59,108 on stmt: $const84.29 = const(int, 0)
2021-05-27 22:37:59,108 on stmt: n_out = static_getitem(value=$82load_attr.28, index=0, index_var=$const84.29, fn=<built-in function getitem>)
2021-05-27 22:37:59,108 on stmt: $92load_attr.32 = getattr(value=y, attr=shape)
2021-05-27 22:37:59,108 on stmt: $const94.33 = const(int, 1)
2021-05-27 22:37:59,108 on stmt: n_channels = static_getitem(value=$92load_attr.32, index=1, index_var=$const94.33, fn=<built-in function getitem>)
2021-05-27 22:37:59,108 on stmt: jump 100
2021-05-27 22:37:59,108 ==== SSA block rewrite pass on 100
2021-05-27 22:37:59,109 Running <numba.core.ssa._FixSSAVars object at 0x000000000E077860>
2021-05-27 22:37:59,109 on stmt: $104load_global.0 = global(range: <class 'range'>)
2021-05-27 22:37:59,109 on stmt: $108call_function.2 = call $104load_global.0(n_out, func=$104load_global.0, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None)
2021-05-27 22:37:59,109 on stmt: $110get_iter.3 = getiter(value=$108call_function.2)
2021-05-27 22:37:59,109 on stmt: $phi112.0 = $110get_iter.3
2021-05-27 22:37:59,109 on stmt: jump 112
2021-05-27 22:37:59,109 ==== SSA block rewrite pass on 112
2021-05-27 22:37:59,109 Running <numba.core.ssa._FixSSAVars object at 0x000000000E077860>
2021-05-27 22:37:59,109 on stmt: time_register.2 = phi(incoming_values=[Var(time_register.1, interpn.py:67), Var(time_register, interpn.py:13)], incoming_blocks=[466, 100])
2021-05-27 22:37:59,109 on stmt: $112for_iter.1 = iternext(value=$phi112.0)
2021-05-27 22:37:59,109 on stmt: $112for_iter.2 = pair_first(value=$112for_iter.1)
2021-05-27 22:37:59,110 on stmt: $112for_iter.3 = pair_second(value=$112for_iter.1)
2021-05-27 22:37:59,110 on stmt: $phi116.1 = $112for_iter.2
2021-05-27 22:37:59,110 on stmt: branch $112for_iter.3, 116, 476
2021-05-27 22:37:59,110 ==== SSA block rewrite pass on 116
2021-05-27 22:37:59,110 Running <numba.core.ssa._FixSSAVars object at 0x000000000E077860>
2021-05-27 22:37:59,110 on stmt: t = $phi116.1
2021-05-27 22:37:59,110 on stmt: $118load_global.2 = global(int: <class 'int'>)
2021-05-27 22:37:59,110 on stmt: n.1 = call $118load_global.2(time_register.2, func=$118load_global.2, args=[Var(time_register.2, interpn.py:27)], kws=(), vararg=None)
2021-05-27 22:37:59,110 on stmt: $132binary_subtract.8 = time_register.2 - n.1
2021-05-27 22:37:59,110 on stmt: frac = scale * $132binary_subtract.8
2021-05-27 22:37:59,110 on stmt: index_frac = frac * num_table
2021-05-27 22:37:59,111 on stmt: $146load_global.13 = global(int: <class 'int'>)
2021-05-27 22:37:59,111 on stmt: offset.1 = call $146load_global.13(index_frac, func=$146load_global.13, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None)
2021-05-27 22:37:59,111 on stmt: eta = index_frac - offset.1
2021-05-27 22:37:59,111 on stmt: $162load_global.19 = global(min: <built-in function min>)
2021-05-27 22:37:59,111 on stmt: $const166.21 = const(int, 1)
2021-05-27 22:37:59,111 on stmt: $168binary_add.22 = n.1 + $const166.21
2021-05-27 22:37:59,111 on stmt: $174binary_subtract.25 = nwin - offset.1
2021-05-27 22:37:59,111 on stmt: $178binary_floor_divide.27 = $174binary_subtract.25 // index_step
2021-05-27 22:37:59,111 on stmt: i_max = call $162load_global.19($168binary_add.22, $178binary_floor_divide.27, func=$162load_global.19, args=[Var($168binary_add.22, interpn.py:42), Var($178binary_floor_divide.27, interpn.py:42)], kws=(), vararg=None)
2021-05-27 22:37:59,112 on stmt: jump 184
2021-05-27 22:37:59,112 ==== SSA block rewrite pass on 184
2021-05-27 22:37:59,112 Running <numba.core.ssa._FixSSAVars object at 0x000000000E077860>
2021-05-27 22:37:59,112 on stmt: $186load_global.1 = global(range: <class 'range'>)
2021-05-27 22:37:59,112 on stmt: $190call_function.3 = call $186load_global.1(i_max, func=$186load_global.1, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None)
2021-05-27 22:37:59,112 on stmt: $192get_iter.4 = getiter(value=$190call_function.3)
2021-05-27 22:37:59,112 on stmt: $phi194.1 = $192get_iter.4
2021-05-27 22:37:59,112 on stmt: jump 194
2021-05-27 22:37:59,112 ==== SSA block rewrite pass on 194
2021-05-27 22:37:59,112 Running <numba.core.ssa._FixSSAVars object at 0x000000000E077860>
2021-05-27 22:37:59,112 on stmt: $194for_iter.2 = iternext(value=$phi194.1)
2021-05-27 22:37:59,112 on stmt: $194for_iter.3 = pair_first(value=$194for_iter.2)
2021-05-27 22:37:59,113 on stmt: $194for_iter.4 = pair_second(value=$194for_iter.2)
2021-05-27 22:37:59,113 on stmt: $phi196.2 = $194for_iter.3
2021-05-27 22:37:59,113 on stmt: branch $194for_iter.4, 196, 290
2021-05-27 22:37:59,113 ==== SSA block rewrite pass on 196
2021-05-27 22:37:59,113 Running <numba.core.ssa._FixSSAVars object at 0x000000000E077860>
2021-05-27 22:37:59,113 on stmt: i = $phi196.2
2021-05-27 22:37:59,113 on stmt: $206binary_multiply.7 = i * index_step
2021-05-27 22:37:59,113 on stmt: $208binary_add.8 = offset.1 + $206binary_multiply.7
2021-05-27 22:37:59,113 on stmt: $210binary_subscr.9 = getitem(value=interp_win, index=$208binary_add.8, fn=<built-in function getitem>)
2021-05-27 22:37:59,113 on stmt: $222binary_multiply.15 = i * index_step
2021-05-27 22:37:59,113 on stmt: $224binary_add.16 = offset.1 + $222binary_multiply.15
2021-05-27 22:37:59,114 on stmt: $226binary_subscr.17 = getitem(value=interp_delta, index=$224binary_add.16, fn=<built-in function getitem>)
2021-05-27 22:37:59,114 on stmt: $228binary_multiply.18 = eta * $226binary_subscr.17
2021-05-27 22:37:59,114 on stmt: weight.1 = $210binary_subscr.9 + $228binary_multiply.18
2021-05-27 22:37:59,114 on stmt: jump 234
2021-05-27 22:37:59,114 ==== SSA block rewrite pass on 234
2021-05-27 22:37:59,114 Running <numba.core.ssa._FixSSAVars object at 0x000000000E077860>
2021-05-27 22:37:59,114 on stmt: $236load_global.2 = global(range: <class 'range'>)
2021-05-27 22:37:59,114 on stmt: $240call_function.4 = call $236load_global.2(n_channels, func=$236load_global.2, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-27 22:37:59,114 on stmt: $242get_iter.5 = getiter(value=$240call_function.4)
2021-05-27 22:37:59,114 on stmt: $phi244.2 = $242get_iter.5
2021-05-27 22:37:59,115 on stmt: jump 244
2021-05-27 22:37:59,115 ==== SSA block rewrite pass on 244
2021-05-27 22:37:59,115 Running <numba.core.ssa._FixSSAVars object at 0x000000000E077860>
2021-05-27 22:37:59,115 on stmt: $244for_iter.3 = iternext(value=$phi244.2)
2021-05-27 22:37:59,115 on stmt: $244for_iter.4 = pair_first(value=$244for_iter.3)
2021-05-27 22:37:59,115 on stmt: $244for_iter.5 = pair_second(value=$244for_iter.3)
2021-05-27 22:37:59,115 on stmt: $phi246.3 = $244for_iter.4
2021-05-27 22:37:59,115 on stmt: branch $244for_iter.5, 246, 286
2021-05-27 22:37:59,115 ==== SSA block rewrite pass on 246
2021-05-27 22:37:59,115 Running <numba.core.ssa._FixSSAVars object at 0x000000000E077860>
2021-05-27 22:37:59,115 on stmt: j = $phi246.3
2021-05-27 22:37:59,116 on stmt: $254build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-27 22:37:59,116 on stmt: $258binary_subscr.10 = getitem(value=y, index=$254build_tuple.7, fn=<built-in function getitem>)
2021-05-27 22:37:59,116 on stmt: $268binary_subtract.15 = n.1 - i
2021-05-27 22:37:59,116 on stmt: $272build_tuple.17 = build_tuple(items=[Var($268binary_subtract.15, interpn.py:47), Var(j, interpn.py:46)])
2021-05-27 22:37:59,116 on stmt: $274binary_subscr.18 = getitem(value=x, index=$272build_tuple.17, fn=<built-in function getitem>)
2021-05-27 22:37:59,116 on stmt: $276binary_multiply.19 = weight * $274binary_subscr.18
2021-05-27 22:37:59,116 find_def var='weight' stmt=$276binary_multiply.19 = weight * $274binary_subscr.18
2021-05-27 22:37:59,116 find_def_from_top label 246
2021-05-27 22:37:59,116 idom 244 from label 246
2021-05-27 22:37:59,116 find_def_from_bottom label 244
2021-05-27 22:37:59,116 find_def_from_top label 244
2021-05-27 22:37:59,117 idom 234 from label 244
2021-05-27 22:37:59,117 find_def_from_bottom label 234
2021-05-27 22:37:59,117 find_def_from_top label 234
2021-05-27 22:37:59,117 idom 196 from label 234
2021-05-27 22:37:59,117 find_def_from_bottom label 196
2021-05-27 22:37:59,117 replaced with: $276binary_multiply.19 = weight.1 * $274binary_subscr.18
2021-05-27 22:37:59,117 on stmt: $278inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$258binary_subscr.10, rhs=$276binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
2021-05-27 22:37:59,117 on stmt: y[$254build_tuple.7] = $278inplace_add.20
2021-05-27 22:37:59,117 on stmt: jump 244
2021-05-27 22:37:59,117 ==== SSA block rewrite pass on 286
2021-05-27 22:37:59,117 Running <numba.core.ssa._FixSSAVars object at 0x000000000E077860>
2021-05-27 22:37:59,118 on stmt: jump 288
2021-05-27 22:37:59,118 ==== SSA block rewrite pass on 288
2021-05-27 22:37:59,118 Running <numba.core.ssa._FixSSAVars object at 0x000000000E077860>
2021-05-27 22:37:59,118 on stmt: jump 194
2021-05-27 22:37:59,118 ==== SSA block rewrite pass on 290
2021-05-27 22:37:59,118 Running <numba.core.ssa._FixSSAVars object at 0x000000000E077860>
2021-05-27 22:37:59,118 on stmt: jump 292
2021-05-27 22:37:59,118 ==== SSA block rewrite pass on 292
2021-05-27 22:37:59,118 Running <numba.core.ssa._FixSSAVars object at 0x000000000E077860>
2021-05-27 22:37:59,118 on stmt: $296binary_subtract.3 = scale - frac
2021-05-27 22:37:59,119 on stmt: frac = $296binary_subtract.3
2021-05-27 22:37:59,119 on stmt: index_frac = frac * num_table
2021-05-27 22:37:59,119 on stmt: $308load_global.7 = global(int: <class 'int'>)
2021-05-27 22:37:59,119 on stmt: offset.2 = call $308load_global.7(index_frac, func=$308load_global.7, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None)
2021-05-27 22:37:59,119 on stmt: eta = index_frac - offset.2
2021-05-27 22:37:59,119 on stmt: $324load_global.13 = global(min: <built-in function min>)
2021-05-27 22:37:59,119 on stmt: $330binary_subtract.16 = n_orig - n.1
2021-05-27 22:37:59,119 on stmt: $const332.17 = const(int, 1)
2021-05-27 22:37:59,119 on stmt: $334binary_subtract.18 = $330binary_subtract.16 - $const332.17
2021-05-27 22:37:59,119 on stmt: $340binary_subtract.21 = nwin - offset.2
2021-05-27 22:37:59,120 on stmt: $344binary_floor_divide.23 = $340binary_subtract.21 // index_step
2021-05-27 22:37:59,120 on stmt: k_max = call $324load_global.13($334binary_subtract.18, $344binary_floor_divide.23, func=$324load_global.13, args=[Var($334binary_subtract.18, interpn.py:60), Var($344binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None)
2021-05-27 22:37:59,120 on stmt: jump 350
2021-05-27 22:37:59,120 ==== SSA block rewrite pass on 350
2021-05-27 22:37:59,120 Running <numba.core.ssa._FixSSAVars object at 0x000000000E077860>
2021-05-27 22:37:59,120 on stmt: $352load_global.1 = global(range: <class 'range'>)
2021-05-27 22:37:59,120 on stmt: $356call_function.3 = call $352load_global.1(k_max, func=$352load_global.1, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None)
2021-05-27 22:37:59,120 on stmt: $358get_iter.4 = getiter(value=$356call_function.3)
2021-05-27 22:37:59,120 on stmt: $phi360.1 = $358get_iter.4
2021-05-27 22:37:59,120 on stmt: jump 360
2021-05-27 22:37:59,120 ==== SSA block rewrite pass on 360
2021-05-27 22:37:59,121 Running <numba.core.ssa._FixSSAVars object at 0x000000000E077860>
2021-05-27 22:37:59,121 on stmt: $360for_iter.2 = iternext(value=$phi360.1)
2021-05-27 22:37:59,121 on stmt: $360for_iter.3 = pair_first(value=$360for_iter.2)
2021-05-27 22:37:59,121 on stmt: $360for_iter.4 = pair_second(value=$360for_iter.2)
2021-05-27 22:37:59,121 on stmt: $phi362.2 = $360for_iter.3
2021-05-27 22:37:59,121 on stmt: branch $360for_iter.4, 362, 464
2021-05-27 22:37:59,121 ==== SSA block rewrite pass on 362
2021-05-27 22:37:59,121 Running <numba.core.ssa._FixSSAVars object at 0x000000000E077860>
2021-05-27 22:37:59,121 on stmt: k = $phi362.2
2021-05-27 22:37:59,121 on stmt: $372binary_multiply.7 = k * index_step
2021-05-27 22:37:59,121 on stmt: $374binary_add.8 = offset.2 + $372binary_multiply.7
2021-05-27 22:37:59,122 on stmt: $376binary_subscr.9 = getitem(value=interp_win, index=$374binary_add.8, fn=<built-in function getitem>)
2021-05-27 22:37:59,122 on stmt: $388binary_multiply.15 = k * index_step
2021-05-27 22:37:59,122 on stmt: $390binary_add.16 = offset.2 + $388binary_multiply.15
2021-05-27 22:37:59,122 on stmt: $392binary_subscr.17 = getitem(value=interp_delta, index=$390binary_add.16, fn=<built-in function getitem>)
2021-05-27 22:37:59,122 on stmt: $394binary_multiply.18 = eta * $392binary_subscr.17
2021-05-27 22:37:59,122 on stmt: weight.2 = $376binary_subscr.9 + $394binary_multiply.18
2021-05-27 22:37:59,122 on stmt: jump 400
2021-05-27 22:37:59,122 ==== SSA block rewrite pass on 400
2021-05-27 22:37:59,122 Running <numba.core.ssa._FixSSAVars object at 0x000000000E077860>
2021-05-27 22:37:59,122 on stmt: $402load_global.2 = global(range: <class 'range'>)
2021-05-27 22:37:59,122 on stmt: $406call_function.4 = call $402load_global.2(n_channels, func=$402load_global.2, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-27 22:37:59,123 on stmt: $408get_iter.5 = getiter(value=$406call_function.4)
2021-05-27 22:37:59,123 on stmt: $phi410.2 = $408get_iter.5
2021-05-27 22:37:59,123 on stmt: jump 410
2021-05-27 22:37:59,123 ==== SSA block rewrite pass on 410
2021-05-27 22:37:59,123 Running <numba.core.ssa._FixSSAVars object at 0x000000000E077860>
2021-05-27 22:37:59,123 on stmt: $410for_iter.3 = iternext(value=$phi410.2)
2021-05-27 22:37:59,123 on stmt: $410for_iter.4 = pair_first(value=$410for_iter.3)
2021-05-27 22:37:59,123 on stmt: $410for_iter.5 = pair_second(value=$410for_iter.3)
2021-05-27 22:37:59,123 on stmt: $phi412.3 = $410for_iter.4
2021-05-27 22:37:59,123 on stmt: branch $410for_iter.5, 412, 458
2021-05-27 22:37:59,124 ==== SSA block rewrite pass on 412
2021-05-27 22:37:59,124 Running <numba.core.ssa._FixSSAVars object at 0x000000000E077860>
2021-05-27 22:37:59,124 on stmt: j = $phi412.3
2021-05-27 22:37:59,124 on stmt: $420build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-27 22:37:59,124 on stmt: $424binary_subscr.10 = getitem(value=y, index=$420build_tuple.7, fn=<built-in function getitem>)
2021-05-27 22:37:59,124 on stmt: $434binary_add.15 = n.1 + k
2021-05-27 22:37:59,124 on stmt: $const436.16 = const(int, 1)
2021-05-27 22:37:59,124 on stmt: $438binary_add.17 = $434binary_add.15 + $const436.16
2021-05-27 22:37:59,124 on stmt: $442build_tuple.19 = build_tuple(items=[Var($438binary_add.17, interpn.py:64), Var(j, interpn.py:46)])
2021-05-27 22:37:59,124 on stmt: $444binary_subscr.20 = getitem(value=x, index=$442build_tuple.19, fn=<built-in function getitem>)
2021-05-27 22:37:59,125 on stmt: $446binary_multiply.21 = weight * $444binary_subscr.20
2021-05-27 22:37:59,127 find_def var='weight' stmt=$446binary_multiply.21 = weight * $444binary_subscr.20
2021-05-27 22:37:59,127 find_def_from_top label 412
2021-05-27 22:37:59,127 idom 410 from label 412
2021-05-27 22:37:59,127 find_def_from_bottom label 410
2021-05-27 22:37:59,128 find_def_from_top label 410
2021-05-27 22:37:59,128 idom 400 from label 410
2021-05-27 22:37:59,128 find_def_from_bottom label 400
2021-05-27 22:37:59,128 find_def_from_top label 400
2021-05-27 22:37:59,128 idom 362 from label 400
2021-05-27 22:37:59,128 find_def_from_bottom label 362
2021-05-27 22:37:59,128 replaced with: $446binary_multiply.21 = weight.2 * $444binary_subscr.20
2021-05-27 22:37:59,128 on stmt: $448inplace_add.22 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$424binary_subscr.10, rhs=$446binary_multiply.21, static_lhs=Undefined, static_rhs=Undefined)
2021-05-27 22:37:59,128 on stmt: y[$420build_tuple.7] = $448inplace_add.22
2021-05-27 22:37:59,128 on stmt: jump 410
2021-05-27 22:37:59,128 ==== SSA block rewrite pass on 458
2021-05-27 22:37:59,129 Running <numba.core.ssa._FixSSAVars object at 0x000000000E077860>
2021-05-27 22:37:59,129 on stmt: jump 460
2021-05-27 22:37:59,129 ==== SSA block rewrite pass on 460
2021-05-27 22:37:59,129 Running <numba.core.ssa._FixSSAVars object at 0x000000000E077860>
2021-05-27 22:37:59,129 on stmt: jump 360
2021-05-27 22:37:59,129 ==== SSA block rewrite pass on 464
2021-05-27 22:37:59,129 Running <numba.core.ssa._FixSSAVars object at 0x000000000E077860>
2021-05-27 22:37:59,129 on stmt: jump 466
2021-05-27 22:37:59,129 ==== SSA block rewrite pass on 466
2021-05-27 22:37:59,129 Running <numba.core.ssa._FixSSAVars object at 0x000000000E077860>
2021-05-27 22:37:59,129 on stmt: $470inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register.2, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
2021-05-27 22:37:59,129 on stmt: time_register.1 = $470inplace_add.3
2021-05-27 22:37:59,130 on stmt: jump 112
2021-05-27 22:37:59,130 ==== SSA block rewrite pass on 476
2021-05-27 22:37:59,130 Running <numba.core.ssa._FixSSAVars object at 0x000000000E077860>
2021-05-27 22:37:59,130 on stmt: jump 478
2021-05-27 22:37:59,130 ==== SSA block rewrite pass on 478
2021-05-27 22:37:59,130 Running <numba.core.ssa._FixSSAVars object at 0x000000000E077860>
2021-05-27 22:37:59,130 on stmt: $const478.0 = const(NoneType, None)
2021-05-27 22:37:59,130 on stmt: $480return_value.1 = cast(value=$const478.0)
2021-05-27 22:37:59,130 on stmt: return $480return_value.1
2021-05-27 22:37:59,130 Fix SSA violator on var j
2021-05-27 22:37:59,130 ==== SSA block rewrite pass on 0
2021-05-27 22:37:59,131 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E11C7B8>
2021-05-27 22:37:59,131 on stmt: x = arg(0, name=x)
2021-05-27 22:37:59,131 on stmt: y = arg(1, name=y)
2021-05-27 22:37:59,131 on stmt: sample_ratio = arg(2, name=sample_ratio)
2021-05-27 22:37:59,131 on stmt: interp_win = arg(3, name=interp_win)
2021-05-27 22:37:59,131 on stmt: interp_delta = arg(4, name=interp_delta)
2021-05-27 22:37:59,131 on stmt: num_table = arg(5, name=num_table)
2021-05-27 22:37:59,131 on stmt: $2load_global.0 = global(min: <built-in function min>)
2021-05-27 22:37:59,131 on stmt: $const4.1 = const(float, 1.0)
2021-05-27 22:37:59,131 on stmt: scale = call $2load_global.0($const4.1, sample_ratio, func=$2load_global.0, args=[Var($const4.1, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None)
2021-05-27 22:37:59,131 on stmt: $const12.4 = const(float, 1.0)
2021-05-27 22:37:59,131 on stmt: time_increment = $const12.4 / sample_ratio
2021-05-27 22:37:59,132 on stmt: $20load_global.7 = global(int: <class 'int'>)
2021-05-27 22:37:59,132 on stmt: $26binary_multiply.10 = scale * num_table
2021-05-27 22:37:59,132 on stmt: index_step = call $20load_global.7($26binary_multiply.10, func=$20load_global.7, args=[Var($26binary_multiply.10, interpn.py:12)], kws=(), vararg=None)
2021-05-27 22:37:59,132 on stmt: time_register = const(float, 0.0)
2021-05-27 22:37:59,132 on stmt: n = const(int, 0)
2021-05-27 22:37:59,132 on stmt: frac = const(float, 0.0)
2021-05-27 22:37:59,132 on stmt: index_frac = const(float, 0.0)
2021-05-27 22:37:59,132 on stmt: offset = const(int, 0)
2021-05-27 22:37:59,132 on stmt: eta = const(float, 0.0)
2021-05-27 22:37:59,132 on stmt: weight = const(float, 0.0)
2021-05-27 22:37:59,132 on stmt: $62load_attr.20 = getattr(value=interp_win, attr=shape)
2021-05-27 22:37:59,132 on stmt: $const64.21 = const(int, 0)
2021-05-27 22:37:59,133 on stmt: nwin = static_getitem(value=$62load_attr.20, index=0, index_var=$const64.21, fn=<built-in function getitem>)
2021-05-27 22:37:59,133 on stmt: $72load_attr.24 = getattr(value=x, attr=shape)
2021-05-27 22:37:59,133 on stmt: $const74.25 = const(int, 0)
2021-05-27 22:37:59,133 on stmt: n_orig = static_getitem(value=$72load_attr.24, index=0, index_var=$const74.25, fn=<built-in function getitem>)
2021-05-27 22:37:59,133 on stmt: $82load_attr.28 = getattr(value=y, attr=shape)
2021-05-27 22:37:59,133 on stmt: $const84.29 = const(int, 0)
2021-05-27 22:37:59,133 on stmt: n_out = static_getitem(value=$82load_attr.28, index=0, index_var=$const84.29, fn=<built-in function getitem>)
2021-05-27 22:37:59,133 on stmt: $92load_attr.32 = getattr(value=y, attr=shape)
2021-05-27 22:37:59,133 on stmt: $const94.33 = const(int, 1)
2021-05-27 22:37:59,133 on stmt: n_channels = static_getitem(value=$92load_attr.32, index=1, index_var=$const94.33, fn=<built-in function getitem>)
2021-05-27 22:37:59,133 on stmt: jump 100
2021-05-27 22:37:59,133 ==== SSA block rewrite pass on 100
2021-05-27 22:37:59,134 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E11C7B8>
2021-05-27 22:37:59,134 on stmt: $104load_global.0 = global(range: <class 'range'>)
2021-05-27 22:37:59,134 on stmt: $108call_function.2 = call $104load_global.0(n_out, func=$104load_global.0, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None)
2021-05-27 22:37:59,134 on stmt: $110get_iter.3 = getiter(value=$108call_function.2)
2021-05-27 22:37:59,134 on stmt: $phi112.0 = $110get_iter.3
2021-05-27 22:37:59,134 on stmt: jump 112
2021-05-27 22:37:59,134 ==== SSA block rewrite pass on 112
2021-05-27 22:37:59,134 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E11C7B8>
2021-05-27 22:37:59,134 on stmt: time_register.2 = phi(incoming_values=[Var(time_register.1, interpn.py:67), Var(time_register, interpn.py:13)], incoming_blocks=[466, 100])
2021-05-27 22:37:59,134 on stmt: $112for_iter.1 = iternext(value=$phi112.0)
2021-05-27 22:37:59,134 on stmt: $112for_iter.2 = pair_first(value=$112for_iter.1)
2021-05-27 22:37:59,135 on stmt: $112for_iter.3 = pair_second(value=$112for_iter.1)
2021-05-27 22:37:59,135 on stmt: $phi116.1 = $112for_iter.2
2021-05-27 22:37:59,135 on stmt: branch $112for_iter.3, 116, 476
2021-05-27 22:37:59,135 ==== SSA block rewrite pass on 116
2021-05-27 22:37:59,135 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E11C7B8>
2021-05-27 22:37:59,135 on stmt: t = $phi116.1
2021-05-27 22:37:59,135 on stmt: $118load_global.2 = global(int: <class 'int'>)
2021-05-27 22:37:59,135 on stmt: n.1 = call $118load_global.2(time_register.2, func=$118load_global.2, args=[Var(time_register.2, interpn.py:27)], kws=(), vararg=None)
2021-05-27 22:37:59,135 on stmt: $132binary_subtract.8 = time_register.2 - n.1
2021-05-27 22:37:59,135 on stmt: frac = scale * $132binary_subtract.8
2021-05-27 22:37:59,135 on stmt: index_frac = frac * num_table
2021-05-27 22:37:59,135 on stmt: $146load_global.13 = global(int: <class 'int'>)
2021-05-27 22:37:59,136 on stmt: offset.1 = call $146load_global.13(index_frac, func=$146load_global.13, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None)
2021-05-27 22:37:59,136 on stmt: eta = index_frac - offset.1
2021-05-27 22:37:59,136 on stmt: $162load_global.19 = global(min: <built-in function min>)
2021-05-27 22:37:59,136 on stmt: $const166.21 = const(int, 1)
2021-05-27 22:37:59,136 on stmt: $168binary_add.22 = n.1 + $const166.21
2021-05-27 22:37:59,136 on stmt: $174binary_subtract.25 = nwin - offset.1
2021-05-27 22:37:59,136 on stmt: $178binary_floor_divide.27 = $174binary_subtract.25 // index_step
2021-05-27 22:37:59,136 on stmt: i_max = call $162load_global.19($168binary_add.22, $178binary_floor_divide.27, func=$162load_global.19, args=[Var($168binary_add.22, interpn.py:42), Var($178binary_floor_divide.27, interpn.py:42)], kws=(), vararg=None)
2021-05-27 22:37:59,136 on stmt: jump 184
2021-05-27 22:37:59,136 ==== SSA block rewrite pass on 184
2021-05-27 22:37:59,136 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E11C7B8>
2021-05-27 22:37:59,137 on stmt: $186load_global.1 = global(range: <class 'range'>)
2021-05-27 22:37:59,137 on stmt: $190call_function.3 = call $186load_global.1(i_max, func=$186load_global.1, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None)
2021-05-27 22:37:59,137 on stmt: $192get_iter.4 = getiter(value=$190call_function.3)
2021-05-27 22:37:59,137 on stmt: $phi194.1 = $192get_iter.4
2021-05-27 22:37:59,137 on stmt: jump 194
2021-05-27 22:37:59,137 ==== SSA block rewrite pass on 194
2021-05-27 22:37:59,137 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E11C7B8>
2021-05-27 22:37:59,137 on stmt: $194for_iter.2 = iternext(value=$phi194.1)
2021-05-27 22:37:59,137 on stmt: $194for_iter.3 = pair_first(value=$194for_iter.2)
2021-05-27 22:37:59,137 on stmt: $194for_iter.4 = pair_second(value=$194for_iter.2)
2021-05-27 22:37:59,137 on stmt: $phi196.2 = $194for_iter.3
2021-05-27 22:37:59,137 on stmt: branch $194for_iter.4, 196, 290
2021-05-27 22:37:59,138 ==== SSA block rewrite pass on 196
2021-05-27 22:37:59,138 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E11C7B8>
2021-05-27 22:37:59,138 on stmt: i = $phi196.2
2021-05-27 22:37:59,138 on stmt: $206binary_multiply.7 = i * index_step
2021-05-27 22:37:59,138 on stmt: $208binary_add.8 = offset.1 + $206binary_multiply.7
2021-05-27 22:37:59,138 on stmt: $210binary_subscr.9 = getitem(value=interp_win, index=$208binary_add.8, fn=<built-in function getitem>)
2021-05-27 22:37:59,138 on stmt: $222binary_multiply.15 = i * index_step
2021-05-27 22:37:59,138 on stmt: $224binary_add.16 = offset.1 + $222binary_multiply.15
2021-05-27 22:37:59,138 on stmt: $226binary_subscr.17 = getitem(value=interp_delta, index=$224binary_add.16, fn=<built-in function getitem>)
2021-05-27 22:37:59,138 on stmt: $228binary_multiply.18 = eta * $226binary_subscr.17
2021-05-27 22:37:59,138 on stmt: weight.1 = $210binary_subscr.9 + $228binary_multiply.18
2021-05-27 22:37:59,138 on stmt: jump 234
2021-05-27 22:37:59,139 ==== SSA block rewrite pass on 234
2021-05-27 22:37:59,139 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E11C7B8>
2021-05-27 22:37:59,139 on stmt: $236load_global.2 = global(range: <class 'range'>)
2021-05-27 22:37:59,139 on stmt: $240call_function.4 = call $236load_global.2(n_channels, func=$236load_global.2, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-27 22:37:59,139 on stmt: $242get_iter.5 = getiter(value=$240call_function.4)
2021-05-27 22:37:59,139 on stmt: $phi244.2 = $242get_iter.5
2021-05-27 22:37:59,139 on stmt: jump 244
2021-05-27 22:37:59,139 ==== SSA block rewrite pass on 244
2021-05-27 22:37:59,139 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E11C7B8>
2021-05-27 22:37:59,139 on stmt: $244for_iter.3 = iternext(value=$phi244.2)
2021-05-27 22:37:59,139 on stmt: $244for_iter.4 = pair_first(value=$244for_iter.3)
2021-05-27 22:37:59,139 on stmt: $244for_iter.5 = pair_second(value=$244for_iter.3)
2021-05-27 22:37:59,140 on stmt: $phi246.3 = $244for_iter.4
2021-05-27 22:37:59,140 on stmt: branch $244for_iter.5, 246, 286
2021-05-27 22:37:59,140 ==== SSA block rewrite pass on 246
2021-05-27 22:37:59,140 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E11C7B8>
2021-05-27 22:37:59,140 on stmt: j = $phi246.3
2021-05-27 22:37:59,140 first assign: j
2021-05-27 22:37:59,140 replaced with: j = $phi246.3
2021-05-27 22:37:59,140 on stmt: $254build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-27 22:37:59,140 on stmt: $258binary_subscr.10 = getitem(value=y, index=$254build_tuple.7, fn=<built-in function getitem>)
2021-05-27 22:37:59,140 on stmt: $268binary_subtract.15 = n.1 - i
2021-05-27 22:37:59,140 on stmt: $272build_tuple.17 = build_tuple(items=[Var($268binary_subtract.15, interpn.py:47), Var(j, interpn.py:46)])
2021-05-27 22:37:59,141 on stmt: $274binary_subscr.18 = getitem(value=x, index=$272build_tuple.17, fn=<built-in function getitem>)
2021-05-27 22:37:59,141 on stmt: $276binary_multiply.19 = weight.1 * $274binary_subscr.18
2021-05-27 22:37:59,141 on stmt: $278inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$258binary_subscr.10, rhs=$276binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
2021-05-27 22:37:59,141 on stmt: y[$254build_tuple.7] = $278inplace_add.20
2021-05-27 22:37:59,141 on stmt: jump 244
2021-05-27 22:37:59,141 ==== SSA block rewrite pass on 286
2021-05-27 22:37:59,141 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E11C7B8>
2021-05-27 22:37:59,141 on stmt: jump 288
2021-05-27 22:37:59,141 ==== SSA block rewrite pass on 288
2021-05-27 22:37:59,141 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E11C7B8>
2021-05-27 22:37:59,141 on stmt: jump 194
2021-05-27 22:37:59,141 ==== SSA block rewrite pass on 290
2021-05-27 22:37:59,141 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E11C7B8>
2021-05-27 22:37:59,142 on stmt: jump 292
2021-05-27 22:37:59,142 ==== SSA block rewrite pass on 292
2021-05-27 22:37:59,142 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E11C7B8>
2021-05-27 22:37:59,142 on stmt: $296binary_subtract.3 = scale - frac
2021-05-27 22:37:59,142 on stmt: frac = $296binary_subtract.3
2021-05-27 22:37:59,142 on stmt: index_frac = frac * num_table
2021-05-27 22:37:59,142 on stmt: $308load_global.7 = global(int: <class 'int'>)
2021-05-27 22:37:59,142 on stmt: offset.2 = call $308load_global.7(index_frac, func=$308load_global.7, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None)
2021-05-27 22:37:59,142 on stmt: eta = index_frac - offset.2
2021-05-27 22:37:59,142 on stmt: $324load_global.13 = global(min: <built-in function min>)
2021-05-27 22:37:59,142 on stmt: $330binary_subtract.16 = n_orig - n.1
2021-05-27 22:37:59,143 on stmt: $const332.17 = const(int, 1)
2021-05-27 22:37:59,143 on stmt: $334binary_subtract.18 = $330binary_subtract.16 - $const332.17
2021-05-27 22:37:59,143 on stmt: $340binary_subtract.21 = nwin - offset.2
2021-05-27 22:37:59,143 on stmt: $344binary_floor_divide.23 = $340binary_subtract.21 // index_step
2021-05-27 22:37:59,143 on stmt: k_max = call $324load_global.13($334binary_subtract.18, $344binary_floor_divide.23, func=$324load_global.13, args=[Var($334binary_subtract.18, interpn.py:60), Var($344binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None)
2021-05-27 22:37:59,143 on stmt: jump 350
2021-05-27 22:37:59,143 ==== SSA block rewrite pass on 350
2021-05-27 22:37:59,143 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E11C7B8>
2021-05-27 22:37:59,143 on stmt: $352load_global.1 = global(range: <class 'range'>)
2021-05-27 22:37:59,143 on stmt: $356call_function.3 = call $352load_global.1(k_max, func=$352load_global.1, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None)
2021-05-27 22:37:59,143 on stmt: $358get_iter.4 = getiter(value=$356call_function.3)
2021-05-27 22:37:59,143 on stmt: $phi360.1 = $358get_iter.4
2021-05-27 22:37:59,144 on stmt: jump 360
2021-05-27 22:37:59,144 ==== SSA block rewrite pass on 360
2021-05-27 22:37:59,144 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E11C7B8>
2021-05-27 22:37:59,144 on stmt: $360for_iter.2 = iternext(value=$phi360.1)
2021-05-27 22:37:59,144 on stmt: $360for_iter.3 = pair_first(value=$360for_iter.2)
2021-05-27 22:37:59,144 on stmt: $360for_iter.4 = pair_second(value=$360for_iter.2)
2021-05-27 22:37:59,144 on stmt: $phi362.2 = $360for_iter.3
2021-05-27 22:37:59,144 on stmt: branch $360for_iter.4, 362, 464
2021-05-27 22:37:59,144 ==== SSA block rewrite pass on 362
2021-05-27 22:37:59,144 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E11C7B8>
2021-05-27 22:37:59,144 on stmt: k = $phi362.2
2021-05-27 22:37:59,144 on stmt: $372binary_multiply.7 = k * index_step
2021-05-27 22:37:59,145 on stmt: $374binary_add.8 = offset.2 + $372binary_multiply.7
2021-05-27 22:37:59,145 on stmt: $376binary_subscr.9 = getitem(value=interp_win, index=$374binary_add.8, fn=<built-in function getitem>)
2021-05-27 22:37:59,145 on stmt: $388binary_multiply.15 = k * index_step
2021-05-27 22:37:59,145 on stmt: $390binary_add.16 = offset.2 + $388binary_multiply.15
2021-05-27 22:37:59,145 on stmt: $392binary_subscr.17 = getitem(value=interp_delta, index=$390binary_add.16, fn=<built-in function getitem>)
2021-05-27 22:37:59,145 on stmt: $394binary_multiply.18 = eta * $392binary_subscr.17
2021-05-27 22:37:59,145 on stmt: weight.2 = $376binary_subscr.9 + $394binary_multiply.18
2021-05-27 22:37:59,145 on stmt: jump 400
2021-05-27 22:37:59,145 ==== SSA block rewrite pass on 400
2021-05-27 22:37:59,145 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E11C7B8>
2021-05-27 22:37:59,145 on stmt: $402load_global.2 = global(range: <class 'range'>)
2021-05-27 22:37:59,145 on stmt: $406call_function.4 = call $402load_global.2(n_channels, func=$402load_global.2, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-27 22:37:59,146 on stmt: $408get_iter.5 = getiter(value=$406call_function.4)
2021-05-27 22:37:59,146 on stmt: $phi410.2 = $408get_iter.5
2021-05-27 22:37:59,146 on stmt: jump 410
2021-05-27 22:37:59,146 ==== SSA block rewrite pass on 410
2021-05-27 22:37:59,146 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E11C7B8>
2021-05-27 22:37:59,146 on stmt: $410for_iter.3 = iternext(value=$phi410.2)
2021-05-27 22:37:59,146 on stmt: $410for_iter.4 = pair_first(value=$410for_iter.3)
2021-05-27 22:37:59,146 on stmt: $410for_iter.5 = pair_second(value=$410for_iter.3)
2021-05-27 22:37:59,146 on stmt: $phi412.3 = $410for_iter.4
2021-05-27 22:37:59,146 on stmt: branch $410for_iter.5, 412, 458
2021-05-27 22:37:59,146 ==== SSA block rewrite pass on 412
2021-05-27 22:37:59,146 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E11C7B8>
2021-05-27 22:37:59,147 on stmt: j = $phi412.3
2021-05-27 22:37:59,147 replaced with: j.1 = $phi412.3
2021-05-27 22:37:59,147 on stmt: $420build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-27 22:37:59,147 on stmt: $424binary_subscr.10 = getitem(value=y, index=$420build_tuple.7, fn=<built-in function getitem>)
2021-05-27 22:37:59,147 on stmt: $434binary_add.15 = n.1 + k
2021-05-27 22:37:59,147 on stmt: $const436.16 = const(int, 1)
2021-05-27 22:37:59,147 on stmt: $438binary_add.17 = $434binary_add.15 + $const436.16
2021-05-27 22:37:59,147 on stmt: $442build_tuple.19 = build_tuple(items=[Var($438binary_add.17, interpn.py:64), Var(j, interpn.py:46)])
2021-05-27 22:37:59,147 on stmt: $444binary_subscr.20 = getitem(value=x, index=$442build_tuple.19, fn=<built-in function getitem>)
2021-05-27 22:37:59,147 on stmt: $446binary_multiply.21 = weight.2 * $444binary_subscr.20
2021-05-27 22:37:59,147 on stmt: $448inplace_add.22 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$424binary_subscr.10, rhs=$446binary_multiply.21, static_lhs=Undefined, static_rhs=Undefined)
2021-05-27 22:37:59,148 on stmt: y[$420build_tuple.7] = $448inplace_add.22
2021-05-27 22:37:59,148 on stmt: jump 410
2021-05-27 22:37:59,148 ==== SSA block rewrite pass on 458
2021-05-27 22:37:59,148 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E11C7B8>
2021-05-27 22:37:59,148 on stmt: jump 460
2021-05-27 22:37:59,148 ==== SSA block rewrite pass on 460
2021-05-27 22:37:59,148 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E11C7B8>
2021-05-27 22:37:59,148 on stmt: jump 360
2021-05-27 22:37:59,148 ==== SSA block rewrite pass on 464
2021-05-27 22:37:59,148 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E11C7B8>
2021-05-27 22:37:59,148 on stmt: jump 466
2021-05-27 22:37:59,148 ==== SSA block rewrite pass on 466
2021-05-27 22:37:59,149 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E11C7B8>
2021-05-27 22:37:59,149 on stmt: $470inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register.2, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
2021-05-27 22:37:59,149 on stmt: time_register.1 = $470inplace_add.3
2021-05-27 22:37:59,149 on stmt: jump 112
2021-05-27 22:37:59,149 ==== SSA block rewrite pass on 476
2021-05-27 22:37:59,149 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E11C7B8>
2021-05-27 22:37:59,149 on stmt: jump 478
2021-05-27 22:37:59,149 ==== SSA block rewrite pass on 478
2021-05-27 22:37:59,149 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E11C7B8>
2021-05-27 22:37:59,149 on stmt: $const478.0 = const(NoneType, None)
2021-05-27 22:37:59,149 on stmt: $480return_value.1 = cast(value=$const478.0)
2021-05-27 22:37:59,149 on stmt: return $480return_value.1
2021-05-27 22:37:59,150 Replaced assignments: defaultdict(<class 'list'>,
            {246: [<numba.core.ir.Assign object at 0x000000000E108860>],
             412: [<numba.core.ir.Assign object at 0x000000000E160A20>]})
2021-05-27 22:37:59,150 ==== SSA block rewrite pass on 0
2021-05-27 22:37:59,150 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C128>
2021-05-27 22:37:59,150 on stmt: x = arg(0, name=x)
2021-05-27 22:37:59,150 on stmt: y = arg(1, name=y)
2021-05-27 22:37:59,151 on stmt: sample_ratio = arg(2, name=sample_ratio)
2021-05-27 22:37:59,151 on stmt: interp_win = arg(3, name=interp_win)
2021-05-27 22:37:59,151 on stmt: interp_delta = arg(4, name=interp_delta)
2021-05-27 22:37:59,151 on stmt: num_table = arg(5, name=num_table)
2021-05-27 22:37:59,151 on stmt: $2load_global.0 = global(min: <built-in function min>)
2021-05-27 22:37:59,151 on stmt: $const4.1 = const(float, 1.0)
2021-05-27 22:37:59,151 on stmt: scale = call $2load_global.0($const4.1, sample_ratio, func=$2load_global.0, args=[Var($const4.1, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None)
2021-05-27 22:37:59,151 on stmt: $const12.4 = const(float, 1.0)
2021-05-27 22:37:59,151 on stmt: time_increment = $const12.4 / sample_ratio
2021-05-27 22:37:59,151 on stmt: $20load_global.7 = global(int: <class 'int'>)
2021-05-27 22:37:59,151 on stmt: $26binary_multiply.10 = scale * num_table
2021-05-27 22:37:59,152 on stmt: index_step = call $20load_global.7($26binary_multiply.10, func=$20load_global.7, args=[Var($26binary_multiply.10, interpn.py:12)], kws=(), vararg=None)
2021-05-27 22:37:59,152 on stmt: time_register = const(float, 0.0)
2021-05-27 22:37:59,152 on stmt: n = const(int, 0)
2021-05-27 22:37:59,152 on stmt: frac = const(float, 0.0)
2021-05-27 22:37:59,152 on stmt: index_frac = const(float, 0.0)
2021-05-27 22:37:59,152 on stmt: offset = const(int, 0)
2021-05-27 22:37:59,152 on stmt: eta = const(float, 0.0)
2021-05-27 22:37:59,152 on stmt: weight = const(float, 0.0)
2021-05-27 22:37:59,152 on stmt: $62load_attr.20 = getattr(value=interp_win, attr=shape)
2021-05-27 22:37:59,152 on stmt: $const64.21 = const(int, 0)
2021-05-27 22:37:59,152 on stmt: nwin = static_getitem(value=$62load_attr.20, index=0, index_var=$const64.21, fn=<built-in function getitem>)
2021-05-27 22:37:59,153 on stmt: $72load_attr.24 = getattr(value=x, attr=shape)
2021-05-27 22:37:59,153 on stmt: $const74.25 = const(int, 0)
2021-05-27 22:37:59,153 on stmt: n_orig = static_getitem(value=$72load_attr.24, index=0, index_var=$const74.25, fn=<built-in function getitem>)
2021-05-27 22:37:59,153 on stmt: $82load_attr.28 = getattr(value=y, attr=shape)
2021-05-27 22:37:59,153 on stmt: $const84.29 = const(int, 0)
2021-05-27 22:37:59,153 on stmt: n_out = static_getitem(value=$82load_attr.28, index=0, index_var=$const84.29, fn=<built-in function getitem>)
2021-05-27 22:37:59,153 on stmt: $92load_attr.32 = getattr(value=y, attr=shape)
2021-05-27 22:37:59,153 on stmt: $const94.33 = const(int, 1)
2021-05-27 22:37:59,153 on stmt: n_channels = static_getitem(value=$92load_attr.32, index=1, index_var=$const94.33, fn=<built-in function getitem>)
2021-05-27 22:37:59,153 on stmt: jump 100
2021-05-27 22:37:59,153 ==== SSA block rewrite pass on 100
2021-05-27 22:37:59,154 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C128>
2021-05-27 22:37:59,154 on stmt: $104load_global.0 = global(range: <class 'range'>)
2021-05-27 22:37:59,154 on stmt: $108call_function.2 = call $104load_global.0(n_out, func=$104load_global.0, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None)
2021-05-27 22:37:59,154 on stmt: $110get_iter.3 = getiter(value=$108call_function.2)
2021-05-27 22:37:59,154 on stmt: $phi112.0 = $110get_iter.3
2021-05-27 22:37:59,154 on stmt: jump 112
2021-05-27 22:37:59,154 ==== SSA block rewrite pass on 112
2021-05-27 22:37:59,154 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C128>
2021-05-27 22:37:59,154 on stmt: time_register.2 = phi(incoming_values=[Var(time_register.1, interpn.py:67), Var(time_register, interpn.py:13)], incoming_blocks=[466, 100])
2021-05-27 22:37:59,154 on stmt: $112for_iter.1 = iternext(value=$phi112.0)
2021-05-27 22:37:59,154 on stmt: $112for_iter.2 = pair_first(value=$112for_iter.1)
2021-05-27 22:37:59,155 on stmt: $112for_iter.3 = pair_second(value=$112for_iter.1)
2021-05-27 22:37:59,155 on stmt: $phi116.1 = $112for_iter.2
2021-05-27 22:37:59,155 on stmt: branch $112for_iter.3, 116, 476
2021-05-27 22:37:59,155 ==== SSA block rewrite pass on 116
2021-05-27 22:37:59,155 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C128>
2021-05-27 22:37:59,155 on stmt: t = $phi116.1
2021-05-27 22:37:59,155 on stmt: $118load_global.2 = global(int: <class 'int'>)
2021-05-27 22:37:59,155 on stmt: n.1 = call $118load_global.2(time_register.2, func=$118load_global.2, args=[Var(time_register.2, interpn.py:27)], kws=(), vararg=None)
2021-05-27 22:37:59,155 on stmt: $132binary_subtract.8 = time_register.2 - n.1
2021-05-27 22:37:59,155 on stmt: frac = scale * $132binary_subtract.8
2021-05-27 22:37:59,155 on stmt: index_frac = frac * num_table
2021-05-27 22:37:59,156 on stmt: $146load_global.13 = global(int: <class 'int'>)
2021-05-27 22:37:59,156 on stmt: offset.1 = call $146load_global.13(index_frac, func=$146load_global.13, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None)
2021-05-27 22:37:59,156 on stmt: eta = index_frac - offset.1
2021-05-27 22:37:59,156 on stmt: $162load_global.19 = global(min: <built-in function min>)
2021-05-27 22:37:59,156 on stmt: $const166.21 = const(int, 1)
2021-05-27 22:37:59,156 on stmt: $168binary_add.22 = n.1 + $const166.21
2021-05-27 22:37:59,156 on stmt: $174binary_subtract.25 = nwin - offset.1
2021-05-27 22:37:59,156 on stmt: $178binary_floor_divide.27 = $174binary_subtract.25 // index_step
2021-05-27 22:37:59,156 on stmt: i_max = call $162load_global.19($168binary_add.22, $178binary_floor_divide.27, func=$162load_global.19, args=[Var($168binary_add.22, interpn.py:42), Var($178binary_floor_divide.27, interpn.py:42)], kws=(), vararg=None)
2021-05-27 22:37:59,156 on stmt: jump 184
2021-05-27 22:37:59,157 ==== SSA block rewrite pass on 184
2021-05-27 22:37:59,157 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C128>
2021-05-27 22:37:59,157 on stmt: $186load_global.1 = global(range: <class 'range'>)
2021-05-27 22:37:59,157 on stmt: $190call_function.3 = call $186load_global.1(i_max, func=$186load_global.1, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None)
2021-05-27 22:37:59,157 on stmt: $192get_iter.4 = getiter(value=$190call_function.3)
2021-05-27 22:37:59,157 on stmt: $phi194.1 = $192get_iter.4
2021-05-27 22:37:59,157 on stmt: jump 194
2021-05-27 22:37:59,157 ==== SSA block rewrite pass on 194
2021-05-27 22:37:59,157 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C128>
2021-05-27 22:37:59,157 on stmt: $194for_iter.2 = iternext(value=$phi194.1)
2021-05-27 22:37:59,157 on stmt: $194for_iter.3 = pair_first(value=$194for_iter.2)
2021-05-27 22:37:59,158 on stmt: $194for_iter.4 = pair_second(value=$194for_iter.2)
2021-05-27 22:37:59,158 on stmt: $phi196.2 = $194for_iter.3
2021-05-27 22:37:59,158 on stmt: branch $194for_iter.4, 196, 290
2021-05-27 22:37:59,158 ==== SSA block rewrite pass on 196
2021-05-27 22:37:59,158 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C128>
2021-05-27 22:37:59,158 on stmt: i = $phi196.2
2021-05-27 22:37:59,158 on stmt: $206binary_multiply.7 = i * index_step
2021-05-27 22:37:59,158 on stmt: $208binary_add.8 = offset.1 + $206binary_multiply.7
2021-05-27 22:37:59,158 on stmt: $210binary_subscr.9 = getitem(value=interp_win, index=$208binary_add.8, fn=<built-in function getitem>)
2021-05-27 22:37:59,158 on stmt: $222binary_multiply.15 = i * index_step
2021-05-27 22:37:59,158 on stmt: $224binary_add.16 = offset.1 + $222binary_multiply.15
2021-05-27 22:37:59,159 on stmt: $226binary_subscr.17 = getitem(value=interp_delta, index=$224binary_add.16, fn=<built-in function getitem>)
2021-05-27 22:37:59,159 on stmt: $228binary_multiply.18 = eta * $226binary_subscr.17
2021-05-27 22:37:59,159 on stmt: weight.1 = $210binary_subscr.9 + $228binary_multiply.18
2021-05-27 22:37:59,159 on stmt: jump 234
2021-05-27 22:37:59,159 ==== SSA block rewrite pass on 234
2021-05-27 22:37:59,159 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C128>
2021-05-27 22:37:59,159 on stmt: $236load_global.2 = global(range: <class 'range'>)
2021-05-27 22:37:59,159 on stmt: $240call_function.4 = call $236load_global.2(n_channels, func=$236load_global.2, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-27 22:37:59,159 on stmt: $242get_iter.5 = getiter(value=$240call_function.4)
2021-05-27 22:37:59,159 on stmt: $phi244.2 = $242get_iter.5
2021-05-27 22:37:59,159 on stmt: jump 244
2021-05-27 22:37:59,160 ==== SSA block rewrite pass on 244
2021-05-27 22:37:59,160 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C128>
2021-05-27 22:37:59,160 on stmt: $244for_iter.3 = iternext(value=$phi244.2)
2021-05-27 22:37:59,160 on stmt: $244for_iter.4 = pair_first(value=$244for_iter.3)
2021-05-27 22:37:59,160 on stmt: $244for_iter.5 = pair_second(value=$244for_iter.3)
2021-05-27 22:37:59,160 on stmt: $phi246.3 = $244for_iter.4
2021-05-27 22:37:59,160 on stmt: branch $244for_iter.5, 246, 286
2021-05-27 22:37:59,160 ==== SSA block rewrite pass on 246
2021-05-27 22:37:59,160 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C128>
2021-05-27 22:37:59,160 on stmt: j = $phi246.3
2021-05-27 22:37:59,160 on stmt: $254build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-27 22:37:59,160 find_def var='j' stmt=$254build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-27 22:37:59,161 on stmt: $258binary_subscr.10 = getitem(value=y, index=$254build_tuple.7, fn=<built-in function getitem>)
2021-05-27 22:37:59,161 on stmt: $268binary_subtract.15 = n.1 - i
2021-05-27 22:37:59,161 on stmt: $272build_tuple.17 = build_tuple(items=[Var($268binary_subtract.15, interpn.py:47), Var(j, interpn.py:46)])
2021-05-27 22:37:59,161 find_def var='j' stmt=$272build_tuple.17 = build_tuple(items=[Var($268binary_subtract.15, interpn.py:47), Var(j, interpn.py:46)])
2021-05-27 22:37:59,161 on stmt: $274binary_subscr.18 = getitem(value=x, index=$272build_tuple.17, fn=<built-in function getitem>)
2021-05-27 22:37:59,162 on stmt: $276binary_multiply.19 = weight.1 * $274binary_subscr.18
2021-05-27 22:37:59,162 on stmt: $278inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$258binary_subscr.10, rhs=$276binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
2021-05-27 22:37:59,162 on stmt: y[$254build_tuple.7] = $278inplace_add.20
2021-05-27 22:37:59,162 on stmt: jump 244
2021-05-27 22:37:59,162 ==== SSA block rewrite pass on 286
2021-05-27 22:37:59,162 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C128>
2021-05-27 22:37:59,162 on stmt: jump 288
2021-05-27 22:37:59,162 ==== SSA block rewrite pass on 288
2021-05-27 22:37:59,162 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C128>
2021-05-27 22:37:59,162 on stmt: jump 194
2021-05-27 22:37:59,162 ==== SSA block rewrite pass on 290
2021-05-27 22:37:59,163 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C128>
2021-05-27 22:37:59,163 on stmt: jump 292
2021-05-27 22:37:59,163 ==== SSA block rewrite pass on 292
2021-05-27 22:37:59,163 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C128>
2021-05-27 22:37:59,163 on stmt: $296binary_subtract.3 = scale - frac
2021-05-27 22:37:59,163 on stmt: frac = $296binary_subtract.3
2021-05-27 22:37:59,163 on stmt: index_frac = frac * num_table
2021-05-27 22:37:59,163 on stmt: $308load_global.7 = global(int: <class 'int'>)
2021-05-27 22:37:59,163 on stmt: offset.2 = call $308load_global.7(index_frac, func=$308load_global.7, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None)
2021-05-27 22:37:59,163 on stmt: eta = index_frac - offset.2
2021-05-27 22:37:59,163 on stmt: $324load_global.13 = global(min: <built-in function min>)
2021-05-27 22:37:59,164 on stmt: $330binary_subtract.16 = n_orig - n.1
2021-05-27 22:37:59,164 on stmt: $const332.17 = const(int, 1)
2021-05-27 22:37:59,164 on stmt: $334binary_subtract.18 = $330binary_subtract.16 - $const332.17
2021-05-27 22:37:59,164 on stmt: $340binary_subtract.21 = nwin - offset.2
2021-05-27 22:37:59,164 on stmt: $344binary_floor_divide.23 = $340binary_subtract.21 // index_step
2021-05-27 22:37:59,164 on stmt: k_max = call $324load_global.13($334binary_subtract.18, $344binary_floor_divide.23, func=$324load_global.13, args=[Var($334binary_subtract.18, interpn.py:60), Var($344binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None)
2021-05-27 22:37:59,164 on stmt: jump 350
2021-05-27 22:37:59,164 ==== SSA block rewrite pass on 350
2021-05-27 22:37:59,164 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C128>
2021-05-27 22:37:59,164 on stmt: $352load_global.1 = global(range: <class 'range'>)
2021-05-27 22:37:59,165 on stmt: $356call_function.3 = call $352load_global.1(k_max, func=$352load_global.1, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None)
2021-05-27 22:37:59,165 on stmt: $358get_iter.4 = getiter(value=$356call_function.3)
2021-05-27 22:37:59,165 on stmt: $phi360.1 = $358get_iter.4
2021-05-27 22:37:59,165 on stmt: jump 360
2021-05-27 22:37:59,165 ==== SSA block rewrite pass on 360
2021-05-27 22:37:59,165 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C128>
2021-05-27 22:37:59,165 on stmt: $360for_iter.2 = iternext(value=$phi360.1)
2021-05-27 22:37:59,165 on stmt: $360for_iter.3 = pair_first(value=$360for_iter.2)
2021-05-27 22:37:59,165 on stmt: $360for_iter.4 = pair_second(value=$360for_iter.2)
2021-05-27 22:37:59,165 on stmt: $phi362.2 = $360for_iter.3
2021-05-27 22:37:59,165 on stmt: branch $360for_iter.4, 362, 464
2021-05-27 22:37:59,165 ==== SSA block rewrite pass on 362
2021-05-27 22:37:59,166 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C128>
2021-05-27 22:37:59,166 on stmt: k = $phi362.2
2021-05-27 22:37:59,166 on stmt: $372binary_multiply.7 = k * index_step
2021-05-27 22:37:59,166 on stmt: $374binary_add.8 = offset.2 + $372binary_multiply.7
2021-05-27 22:37:59,166 on stmt: $376binary_subscr.9 = getitem(value=interp_win, index=$374binary_add.8, fn=<built-in function getitem>)
2021-05-27 22:37:59,166 on stmt: $388binary_multiply.15 = k * index_step
2021-05-27 22:37:59,166 on stmt: $390binary_add.16 = offset.2 + $388binary_multiply.15
2021-05-27 22:37:59,166 on stmt: $392binary_subscr.17 = getitem(value=interp_delta, index=$390binary_add.16, fn=<built-in function getitem>)
2021-05-27 22:37:59,166 on stmt: $394binary_multiply.18 = eta * $392binary_subscr.17
2021-05-27 22:37:59,166 on stmt: weight.2 = $376binary_subscr.9 + $394binary_multiply.18
2021-05-27 22:37:59,167 on stmt: jump 400
2021-05-27 22:37:59,167 ==== SSA block rewrite pass on 400
2021-05-27 22:37:59,167 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C128>
2021-05-27 22:37:59,167 on stmt: $402load_global.2 = global(range: <class 'range'>)
2021-05-27 22:37:59,167 on stmt: $406call_function.4 = call $402load_global.2(n_channels, func=$402load_global.2, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-27 22:37:59,167 on stmt: $408get_iter.5 = getiter(value=$406call_function.4)
2021-05-27 22:37:59,167 on stmt: $phi410.2 = $408get_iter.5
2021-05-27 22:37:59,167 on stmt: jump 410
2021-05-27 22:37:59,167 ==== SSA block rewrite pass on 410
2021-05-27 22:37:59,167 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C128>
2021-05-27 22:37:59,167 on stmt: $410for_iter.3 = iternext(value=$phi410.2)
2021-05-27 22:37:59,167 on stmt: $410for_iter.4 = pair_first(value=$410for_iter.3)
2021-05-27 22:37:59,168 on stmt: $410for_iter.5 = pair_second(value=$410for_iter.3)
2021-05-27 22:37:59,168 on stmt: $phi412.3 = $410for_iter.4
2021-05-27 22:37:59,168 on stmt: branch $410for_iter.5, 412, 458
2021-05-27 22:37:59,168 ==== SSA block rewrite pass on 412
2021-05-27 22:37:59,168 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C128>
2021-05-27 22:37:59,168 on stmt: j.1 = $phi412.3
2021-05-27 22:37:59,168 on stmt: $420build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-27 22:37:59,168 find_def var='j' stmt=$420build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-27 22:37:59,168 replaced with: $420build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j.1, interpn.py:63)])
2021-05-27 22:37:59,168 on stmt: $424binary_subscr.10 = getitem(value=y, index=$420build_tuple.7, fn=<built-in function getitem>)
2021-05-27 22:37:59,169 on stmt: $434binary_add.15 = n.1 + k
2021-05-27 22:37:59,169 on stmt: $const436.16 = const(int, 1)
2021-05-27 22:37:59,169 on stmt: $438binary_add.17 = $434binary_add.15 + $const436.16
2021-05-27 22:37:59,169 on stmt: $442build_tuple.19 = build_tuple(items=[Var($438binary_add.17, interpn.py:64), Var(j, interpn.py:46)])
2021-05-27 22:37:59,169 find_def var='j' stmt=$442build_tuple.19 = build_tuple(items=[Var($438binary_add.17, interpn.py:64), Var(j, interpn.py:46)])
2021-05-27 22:37:59,169 replaced with: $442build_tuple.19 = build_tuple(items=[Var($438binary_add.17, interpn.py:64), Var(j.1, interpn.py:63)])
2021-05-27 22:37:59,169 on stmt: $444binary_subscr.20 = getitem(value=x, index=$442build_tuple.19, fn=<built-in function getitem>)
2021-05-27 22:37:59,169 on stmt: $446binary_multiply.21 = weight.2 * $444binary_subscr.20
2021-05-27 22:37:59,169 on stmt: $448inplace_add.22 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$424binary_subscr.10, rhs=$446binary_multiply.21, static_lhs=Undefined, static_rhs=Undefined)
2021-05-27 22:37:59,169 on stmt: y[$420build_tuple.7] = $448inplace_add.22
2021-05-27 22:37:59,170 on stmt: jump 410
2021-05-27 22:37:59,170 ==== SSA block rewrite pass on 458
2021-05-27 22:37:59,170 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C128>
2021-05-27 22:37:59,170 on stmt: jump 460
2021-05-27 22:37:59,170 ==== SSA block rewrite pass on 460
2021-05-27 22:37:59,170 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C128>
2021-05-27 22:37:59,170 on stmt: jump 360
2021-05-27 22:37:59,170 ==== SSA block rewrite pass on 464
2021-05-27 22:37:59,170 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C128>
2021-05-27 22:37:59,170 on stmt: jump 466
2021-05-27 22:37:59,170 ==== SSA block rewrite pass on 466
2021-05-27 22:37:59,170 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C128>
2021-05-27 22:37:59,171 on stmt: $470inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register.2, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
2021-05-27 22:37:59,171 on stmt: time_register.1 = $470inplace_add.3
2021-05-27 22:37:59,171 on stmt: jump 112
2021-05-27 22:37:59,171 ==== SSA block rewrite pass on 476
2021-05-27 22:37:59,171 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C128>
2021-05-27 22:37:59,171 on stmt: jump 478
2021-05-27 22:37:59,171 ==== SSA block rewrite pass on 478
2021-05-27 22:37:59,171 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C128>
2021-05-27 22:37:59,171 on stmt: $const478.0 = const(NoneType, None)
2021-05-27 22:37:59,171 on stmt: $480return_value.1 = cast(value=$const478.0)
2021-05-27 22:37:59,171 on stmt: return $480return_value.1
2021-05-27 22:37:59,172 Fix SSA violator on var index_frac
2021-05-27 22:37:59,172 ==== SSA block rewrite pass on 0
2021-05-27 22:37:59,172 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E08C940>
2021-05-27 22:37:59,172 on stmt: x = arg(0, name=x)
2021-05-27 22:37:59,172 on stmt: y = arg(1, name=y)
2021-05-27 22:37:59,172 on stmt: sample_ratio = arg(2, name=sample_ratio)
2021-05-27 22:37:59,172 on stmt: interp_win = arg(3, name=interp_win)
2021-05-27 22:37:59,172 on stmt: interp_delta = arg(4, name=interp_delta)
2021-05-27 22:37:59,172 on stmt: num_table = arg(5, name=num_table)
2021-05-27 22:37:59,172 on stmt: $2load_global.0 = global(min: <built-in function min>)
2021-05-27 22:37:59,172 on stmt: $const4.1 = const(float, 1.0)
2021-05-27 22:37:59,172 on stmt: scale = call $2load_global.0($const4.1, sample_ratio, func=$2load_global.0, args=[Var($const4.1, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None)
2021-05-27 22:37:59,173 on stmt: $const12.4 = const(float, 1.0)
2021-05-27 22:37:59,173 on stmt: time_increment = $const12.4 / sample_ratio
2021-05-27 22:37:59,173 on stmt: $20load_global.7 = global(int: <class 'int'>)
2021-05-27 22:37:59,173 on stmt: $26binary_multiply.10 = scale * num_table
2021-05-27 22:37:59,173 on stmt: index_step = call $20load_global.7($26binary_multiply.10, func=$20load_global.7, args=[Var($26binary_multiply.10, interpn.py:12)], kws=(), vararg=None)
2021-05-27 22:37:59,173 on stmt: time_register = const(float, 0.0)
2021-05-27 22:37:59,173 on stmt: n = const(int, 0)
2021-05-27 22:37:59,173 on stmt: frac = const(float, 0.0)
2021-05-27 22:37:59,173 on stmt: index_frac = const(float, 0.0)
2021-05-27 22:37:59,173 first assign: index_frac
2021-05-27 22:37:59,173 replaced with: index_frac = const(float, 0.0)
2021-05-27 22:37:59,173 on stmt: offset = const(int, 0)
2021-05-27 22:37:59,174 on stmt: eta = const(float, 0.0)
2021-05-27 22:37:59,174 on stmt: weight = const(float, 0.0)
2021-05-27 22:37:59,174 on stmt: $62load_attr.20 = getattr(value=interp_win, attr=shape)
2021-05-27 22:37:59,174 on stmt: $const64.21 = const(int, 0)
2021-05-27 22:37:59,174 on stmt: nwin = static_getitem(value=$62load_attr.20, index=0, index_var=$const64.21, fn=<built-in function getitem>)
2021-05-27 22:37:59,174 on stmt: $72load_attr.24 = getattr(value=x, attr=shape)
2021-05-27 22:37:59,174 on stmt: $const74.25 = const(int, 0)
2021-05-27 22:37:59,174 on stmt: n_orig = static_getitem(value=$72load_attr.24, index=0, index_var=$const74.25, fn=<built-in function getitem>)
2021-05-27 22:37:59,174 on stmt: $82load_attr.28 = getattr(value=y, attr=shape)
2021-05-27 22:37:59,174 on stmt: $const84.29 = const(int, 0)
2021-05-27 22:37:59,174 on stmt: n_out = static_getitem(value=$82load_attr.28, index=0, index_var=$const84.29, fn=<built-in function getitem>)
2021-05-27 22:37:59,174 on stmt: $92load_attr.32 = getattr(value=y, attr=shape)
2021-05-27 22:37:59,175 on stmt: $const94.33 = const(int, 1)
2021-05-27 22:37:59,175 on stmt: n_channels = static_getitem(value=$92load_attr.32, index=1, index_var=$const94.33, fn=<built-in function getitem>)
2021-05-27 22:37:59,175 on stmt: jump 100
2021-05-27 22:37:59,175 ==== SSA block rewrite pass on 100
2021-05-27 22:37:59,175 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E08C940>
2021-05-27 22:37:59,175 on stmt: $104load_global.0 = global(range: <class 'range'>)
2021-05-27 22:37:59,175 on stmt: $108call_function.2 = call $104load_global.0(n_out, func=$104load_global.0, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None)
2021-05-27 22:37:59,175 on stmt: $110get_iter.3 = getiter(value=$108call_function.2)
2021-05-27 22:37:59,175 on stmt: $phi112.0 = $110get_iter.3
2021-05-27 22:37:59,175 on stmt: jump 112
2021-05-27 22:37:59,175 ==== SSA block rewrite pass on 112
2021-05-27 22:37:59,176 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E08C940>
2021-05-27 22:37:59,176 on stmt: time_register.2 = phi(incoming_values=[Var(time_register.1, interpn.py:67), Var(time_register, interpn.py:13)], incoming_blocks=[466, 100])
2021-05-27 22:37:59,176 on stmt: $112for_iter.1 = iternext(value=$phi112.0)
2021-05-27 22:37:59,176 on stmt: $112for_iter.2 = pair_first(value=$112for_iter.1)
2021-05-27 22:37:59,176 on stmt: $112for_iter.3 = pair_second(value=$112for_iter.1)
2021-05-27 22:37:59,176 on stmt: $phi116.1 = $112for_iter.2
2021-05-27 22:37:59,176 on stmt: branch $112for_iter.3, 116, 476
2021-05-27 22:37:59,176 ==== SSA block rewrite pass on 116
2021-05-27 22:37:59,176 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E08C940>
2021-05-27 22:37:59,176 on stmt: t = $phi116.1
2021-05-27 22:37:59,176 on stmt: $118load_global.2 = global(int: <class 'int'>)
2021-05-27 22:37:59,176 on stmt: n.1 = call $118load_global.2(time_register.2, func=$118load_global.2, args=[Var(time_register.2, interpn.py:27)], kws=(), vararg=None)
2021-05-27 22:37:59,177 on stmt: $132binary_subtract.8 = time_register.2 - n.1
2021-05-27 22:37:59,177 on stmt: frac = scale * $132binary_subtract.8
2021-05-27 22:37:59,177 on stmt: index_frac = frac * num_table
2021-05-27 22:37:59,177 replaced with: index_frac.1 = frac * num_table
2021-05-27 22:37:59,177 on stmt: $146load_global.13 = global(int: <class 'int'>)
2021-05-27 22:37:59,177 on stmt: offset.1 = call $146load_global.13(index_frac, func=$146load_global.13, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None)
2021-05-27 22:37:59,177 on stmt: eta = index_frac - offset.1
2021-05-27 22:37:59,177 on stmt: $162load_global.19 = global(min: <built-in function min>)
2021-05-27 22:37:59,177 on stmt: $const166.21 = const(int, 1)
2021-05-27 22:37:59,177 on stmt: $168binary_add.22 = n.1 + $const166.21
2021-05-27 22:37:59,177 on stmt: $174binary_subtract.25 = nwin - offset.1
2021-05-27 22:37:59,178 on stmt: $178binary_floor_divide.27 = $174binary_subtract.25 // index_step
2021-05-27 22:37:59,178 on stmt: i_max = call $162load_global.19($168binary_add.22, $178binary_floor_divide.27, func=$162load_global.19, args=[Var($168binary_add.22, interpn.py:42), Var($178binary_floor_divide.27, interpn.py:42)], kws=(), vararg=None)
2021-05-27 22:37:59,178 on stmt: jump 184
2021-05-27 22:37:59,178 ==== SSA block rewrite pass on 184
2021-05-27 22:37:59,178 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E08C940>
2021-05-27 22:37:59,178 on stmt: $186load_global.1 = global(range: <class 'range'>)
2021-05-27 22:37:59,178 on stmt: $190call_function.3 = call $186load_global.1(i_max, func=$186load_global.1, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None)
2021-05-27 22:37:59,178 on stmt: $192get_iter.4 = getiter(value=$190call_function.3)
2021-05-27 22:37:59,178 on stmt: $phi194.1 = $192get_iter.4
2021-05-27 22:37:59,178 on stmt: jump 194
2021-05-27 22:37:59,178 ==== SSA block rewrite pass on 194
2021-05-27 22:37:59,179 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E08C940>
2021-05-27 22:37:59,179 on stmt: $194for_iter.2 = iternext(value=$phi194.1)
2021-05-27 22:37:59,179 on stmt: $194for_iter.3 = pair_first(value=$194for_iter.2)
2021-05-27 22:37:59,179 on stmt: $194for_iter.4 = pair_second(value=$194for_iter.2)
2021-05-27 22:37:59,179 on stmt: $phi196.2 = $194for_iter.3
2021-05-27 22:37:59,179 on stmt: branch $194for_iter.4, 196, 290
2021-05-27 22:37:59,179 ==== SSA block rewrite pass on 196
2021-05-27 22:37:59,179 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E08C940>
2021-05-27 22:37:59,179 on stmt: i = $phi196.2
2021-05-27 22:37:59,179 on stmt: $206binary_multiply.7 = i * index_step
2021-05-27 22:37:59,179 on stmt: $208binary_add.8 = offset.1 + $206binary_multiply.7
2021-05-27 22:37:59,179 on stmt: $210binary_subscr.9 = getitem(value=interp_win, index=$208binary_add.8, fn=<built-in function getitem>)
2021-05-27 22:37:59,180 on stmt: $222binary_multiply.15 = i * index_step
2021-05-27 22:37:59,180 on stmt: $224binary_add.16 = offset.1 + $222binary_multiply.15
2021-05-27 22:37:59,180 on stmt: $226binary_subscr.17 = getitem(value=interp_delta, index=$224binary_add.16, fn=<built-in function getitem>)
2021-05-27 22:37:59,180 on stmt: $228binary_multiply.18 = eta * $226binary_subscr.17
2021-05-27 22:37:59,180 on stmt: weight.1 = $210binary_subscr.9 + $228binary_multiply.18
2021-05-27 22:37:59,180 on stmt: jump 234
2021-05-27 22:37:59,180 ==== SSA block rewrite pass on 234
2021-05-27 22:37:59,180 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E08C940>
2021-05-27 22:37:59,180 on stmt: $236load_global.2 = global(range: <class 'range'>)
2021-05-27 22:37:59,180 on stmt: $240call_function.4 = call $236load_global.2(n_channels, func=$236load_global.2, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-27 22:37:59,180 on stmt: $242get_iter.5 = getiter(value=$240call_function.4)
2021-05-27 22:37:59,180 on stmt: $phi244.2 = $242get_iter.5
2021-05-27 22:37:59,181 on stmt: jump 244
2021-05-27 22:37:59,181 ==== SSA block rewrite pass on 244
2021-05-27 22:37:59,181 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E08C940>
2021-05-27 22:37:59,181 on stmt: $244for_iter.3 = iternext(value=$phi244.2)
2021-05-27 22:37:59,181 on stmt: $244for_iter.4 = pair_first(value=$244for_iter.3)
2021-05-27 22:37:59,181 on stmt: $244for_iter.5 = pair_second(value=$244for_iter.3)
2021-05-27 22:37:59,181 on stmt: $phi246.3 = $244for_iter.4
2021-05-27 22:37:59,181 on stmt: branch $244for_iter.5, 246, 286
2021-05-27 22:37:59,181 ==== SSA block rewrite pass on 246
2021-05-27 22:37:59,181 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E08C940>
2021-05-27 22:37:59,181 on stmt: j = $phi246.3
2021-05-27 22:37:59,181 on stmt: $254build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-27 22:37:59,182 on stmt: $258binary_subscr.10 = getitem(value=y, index=$254build_tuple.7, fn=<built-in function getitem>)
2021-05-27 22:37:59,182 on stmt: $268binary_subtract.15 = n.1 - i
2021-05-27 22:37:59,182 on stmt: $272build_tuple.17 = build_tuple(items=[Var($268binary_subtract.15, interpn.py:47), Var(j, interpn.py:46)])
2021-05-27 22:37:59,182 on stmt: $274binary_subscr.18 = getitem(value=x, index=$272build_tuple.17, fn=<built-in function getitem>)
2021-05-27 22:37:59,182 on stmt: $276binary_multiply.19 = weight.1 * $274binary_subscr.18
2021-05-27 22:37:59,182 on stmt: $278inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$258binary_subscr.10, rhs=$276binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
2021-05-27 22:37:59,182 on stmt: y[$254build_tuple.7] = $278inplace_add.20
2021-05-27 22:37:59,182 on stmt: jump 244
2021-05-27 22:37:59,182 ==== SSA block rewrite pass on 286
2021-05-27 22:37:59,182 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E08C940>
2021-05-27 22:37:59,182 on stmt: jump 288
2021-05-27 22:37:59,183 ==== SSA block rewrite pass on 288
2021-05-27 22:37:59,183 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E08C940>
2021-05-27 22:37:59,183 on stmt: jump 194
2021-05-27 22:37:59,183 ==== SSA block rewrite pass on 290
2021-05-27 22:37:59,183 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E08C940>
2021-05-27 22:37:59,183 on stmt: jump 292
2021-05-27 22:37:59,183 ==== SSA block rewrite pass on 292
2021-05-27 22:37:59,183 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E08C940>
2021-05-27 22:37:59,183 on stmt: $296binary_subtract.3 = scale - frac
2021-05-27 22:37:59,183 on stmt: frac = $296binary_subtract.3
2021-05-27 22:37:59,183 on stmt: index_frac = frac * num_table
2021-05-27 22:37:59,183 replaced with: index_frac.2 = frac * num_table
2021-05-27 22:37:59,184 on stmt: $308load_global.7 = global(int: <class 'int'>)
2021-05-27 22:37:59,184 on stmt: offset.2 = call $308load_global.7(index_frac, func=$308load_global.7, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None)
2021-05-27 22:37:59,184 on stmt: eta = index_frac - offset.2
2021-05-27 22:37:59,184 on stmt: $324load_global.13 = global(min: <built-in function min>)
2021-05-27 22:37:59,184 on stmt: $330binary_subtract.16 = n_orig - n.1
2021-05-27 22:37:59,184 on stmt: $const332.17 = const(int, 1)
2021-05-27 22:37:59,184 on stmt: $334binary_subtract.18 = $330binary_subtract.16 - $const332.17
2021-05-27 22:37:59,184 on stmt: $340binary_subtract.21 = nwin - offset.2
2021-05-27 22:37:59,184 on stmt: $344binary_floor_divide.23 = $340binary_subtract.21 // index_step
2021-05-27 22:37:59,184 on stmt: k_max = call $324load_global.13($334binary_subtract.18, $344binary_floor_divide.23, func=$324load_global.13, args=[Var($334binary_subtract.18, interpn.py:60), Var($344binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None)
2021-05-27 22:37:59,184 on stmt: jump 350
2021-05-27 22:37:59,185 ==== SSA block rewrite pass on 350
2021-05-27 22:37:59,185 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E08C940>
2021-05-27 22:37:59,185 on stmt: $352load_global.1 = global(range: <class 'range'>)
2021-05-27 22:37:59,185 on stmt: $356call_function.3 = call $352load_global.1(k_max, func=$352load_global.1, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None)
2021-05-27 22:37:59,185 on stmt: $358get_iter.4 = getiter(value=$356call_function.3)
2021-05-27 22:37:59,185 on stmt: $phi360.1 = $358get_iter.4
2021-05-27 22:37:59,185 on stmt: jump 360
2021-05-27 22:37:59,185 ==== SSA block rewrite pass on 360
2021-05-27 22:37:59,185 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E08C940>
2021-05-27 22:37:59,185 on stmt: $360for_iter.2 = iternext(value=$phi360.1)
2021-05-27 22:37:59,185 on stmt: $360for_iter.3 = pair_first(value=$360for_iter.2)
2021-05-27 22:37:59,185 on stmt: $360for_iter.4 = pair_second(value=$360for_iter.2)
2021-05-27 22:37:59,186 on stmt: $phi362.2 = $360for_iter.3
2021-05-27 22:37:59,186 on stmt: branch $360for_iter.4, 362, 464
2021-05-27 22:37:59,186 ==== SSA block rewrite pass on 362
2021-05-27 22:37:59,186 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E08C940>
2021-05-27 22:37:59,186 on stmt: k = $phi362.2
2021-05-27 22:37:59,186 on stmt: $372binary_multiply.7 = k * index_step
2021-05-27 22:37:59,186 on stmt: $374binary_add.8 = offset.2 + $372binary_multiply.7
2021-05-27 22:37:59,186 on stmt: $376binary_subscr.9 = getitem(value=interp_win, index=$374binary_add.8, fn=<built-in function getitem>)
2021-05-27 22:37:59,187 on stmt: $388binary_multiply.15 = k * index_step
2021-05-27 22:37:59,187 on stmt: $390binary_add.16 = offset.2 + $388binary_multiply.15
2021-05-27 22:37:59,187 on stmt: $392binary_subscr.17 = getitem(value=interp_delta, index=$390binary_add.16, fn=<built-in function getitem>)
2021-05-27 22:37:59,187 on stmt: $394binary_multiply.18 = eta * $392binary_subscr.17
2021-05-27 22:37:59,187 on stmt: weight.2 = $376binary_subscr.9 + $394binary_multiply.18
2021-05-27 22:37:59,187 on stmt: jump 400
2021-05-27 22:37:59,187 ==== SSA block rewrite pass on 400
2021-05-27 22:37:59,187 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E08C940>
2021-05-27 22:37:59,187 on stmt: $402load_global.2 = global(range: <class 'range'>)
2021-05-27 22:37:59,187 on stmt: $406call_function.4 = call $402load_global.2(n_channels, func=$402load_global.2, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-27 22:37:59,187 on stmt: $408get_iter.5 = getiter(value=$406call_function.4)
2021-05-27 22:37:59,188 on stmt: $phi410.2 = $408get_iter.5
2021-05-27 22:37:59,188 on stmt: jump 410
2021-05-27 22:37:59,188 ==== SSA block rewrite pass on 410
2021-05-27 22:37:59,188 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E08C940>
2021-05-27 22:37:59,188 on stmt: $410for_iter.3 = iternext(value=$phi410.2)
2021-05-27 22:37:59,188 on stmt: $410for_iter.4 = pair_first(value=$410for_iter.3)
2021-05-27 22:37:59,188 on stmt: $410for_iter.5 = pair_second(value=$410for_iter.3)
2021-05-27 22:37:59,188 on stmt: $phi412.3 = $410for_iter.4
2021-05-27 22:37:59,188 on stmt: branch $410for_iter.5, 412, 458
2021-05-27 22:37:59,188 ==== SSA block rewrite pass on 412
2021-05-27 22:37:59,188 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E08C940>
2021-05-27 22:37:59,188 on stmt: j.1 = $phi412.3
2021-05-27 22:37:59,189 on stmt: $420build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j.1, interpn.py:63)])
2021-05-27 22:37:59,189 on stmt: $424binary_subscr.10 = getitem(value=y, index=$420build_tuple.7, fn=<built-in function getitem>)
2021-05-27 22:37:59,189 on stmt: $434binary_add.15 = n.1 + k
2021-05-27 22:37:59,189 on stmt: $const436.16 = const(int, 1)
2021-05-27 22:37:59,189 on stmt: $438binary_add.17 = $434binary_add.15 + $const436.16
2021-05-27 22:37:59,189 on stmt: $442build_tuple.19 = build_tuple(items=[Var($438binary_add.17, interpn.py:64), Var(j.1, interpn.py:63)])
2021-05-27 22:37:59,189 on stmt: $444binary_subscr.20 = getitem(value=x, index=$442build_tuple.19, fn=<built-in function getitem>)
2021-05-27 22:37:59,189 on stmt: $446binary_multiply.21 = weight.2 * $444binary_subscr.20
2021-05-27 22:37:59,189 on stmt: $448inplace_add.22 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$424binary_subscr.10, rhs=$446binary_multiply.21, static_lhs=Undefined, static_rhs=Undefined)
2021-05-27 22:37:59,189 on stmt: y[$420build_tuple.7] = $448inplace_add.22
2021-05-27 22:37:59,190 on stmt: jump 410
2021-05-27 22:37:59,190 ==== SSA block rewrite pass on 458
2021-05-27 22:37:59,190 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E08C940>
2021-05-27 22:37:59,190 on stmt: jump 460
2021-05-27 22:37:59,190 ==== SSA block rewrite pass on 460
2021-05-27 22:37:59,190 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E08C940>
2021-05-27 22:37:59,190 on stmt: jump 360
2021-05-27 22:37:59,190 ==== SSA block rewrite pass on 464
2021-05-27 22:37:59,190 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E08C940>
2021-05-27 22:37:59,190 on stmt: jump 466
2021-05-27 22:37:59,190 ==== SSA block rewrite pass on 466
2021-05-27 22:37:59,190 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E08C940>
2021-05-27 22:37:59,190 on stmt: $470inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register.2, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
2021-05-27 22:37:59,191 on stmt: time_register.1 = $470inplace_add.3
2021-05-27 22:37:59,191 on stmt: jump 112
2021-05-27 22:37:59,191 ==== SSA block rewrite pass on 476
2021-05-27 22:37:59,191 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E08C940>
2021-05-27 22:37:59,191 on stmt: jump 478
2021-05-27 22:37:59,191 ==== SSA block rewrite pass on 478
2021-05-27 22:37:59,191 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E08C940>
2021-05-27 22:37:59,191 on stmt: $const478.0 = const(NoneType, None)
2021-05-27 22:37:59,191 on stmt: $480return_value.1 = cast(value=$const478.0)
2021-05-27 22:37:59,191 on stmt: return $480return_value.1
2021-05-27 22:37:59,192 Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000000000E08C8D0>],
             116: [<numba.core.ir.Assign object at 0x000000000E108F98>],
             292: [<numba.core.ir.Assign object at 0x000000000E11CEF0>]})
2021-05-27 22:37:59,192 ==== SSA block rewrite pass on 0
2021-05-27 22:37:59,192 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C358>
2021-05-27 22:37:59,193 on stmt: x = arg(0, name=x)
2021-05-27 22:37:59,193 on stmt: y = arg(1, name=y)
2021-05-27 22:37:59,193 on stmt: sample_ratio = arg(2, name=sample_ratio)
2021-05-27 22:37:59,193 on stmt: interp_win = arg(3, name=interp_win)
2021-05-27 22:37:59,193 on stmt: interp_delta = arg(4, name=interp_delta)
2021-05-27 22:37:59,193 on stmt: num_table = arg(5, name=num_table)
2021-05-27 22:37:59,193 on stmt: $2load_global.0 = global(min: <built-in function min>)
2021-05-27 22:37:59,193 on stmt: $const4.1 = const(float, 1.0)
2021-05-27 22:37:59,193 on stmt: scale = call $2load_global.0($const4.1, sample_ratio, func=$2load_global.0, args=[Var($const4.1, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None)
2021-05-27 22:37:59,193 on stmt: $const12.4 = const(float, 1.0)
2021-05-27 22:37:59,193 on stmt: time_increment = $const12.4 / sample_ratio
2021-05-27 22:37:59,194 on stmt: $20load_global.7 = global(int: <class 'int'>)
2021-05-27 22:37:59,194 on stmt: $26binary_multiply.10 = scale * num_table
2021-05-27 22:37:59,194 on stmt: index_step = call $20load_global.7($26binary_multiply.10, func=$20load_global.7, args=[Var($26binary_multiply.10, interpn.py:12)], kws=(), vararg=None)
2021-05-27 22:37:59,194 on stmt: time_register = const(float, 0.0)
2021-05-27 22:37:59,194 on stmt: n = const(int, 0)
2021-05-27 22:37:59,194 on stmt: frac = const(float, 0.0)
2021-05-27 22:37:59,194 on stmt: index_frac = const(float, 0.0)
2021-05-27 22:37:59,194 on stmt: offset = const(int, 0)
2021-05-27 22:37:59,194 on stmt: eta = const(float, 0.0)
2021-05-27 22:37:59,194 on stmt: weight = const(float, 0.0)
2021-05-27 22:37:59,194 on stmt: $62load_attr.20 = getattr(value=interp_win, attr=shape)
2021-05-27 22:37:59,195 on stmt: $const64.21 = const(int, 0)
2021-05-27 22:37:59,195 on stmt: nwin = static_getitem(value=$62load_attr.20, index=0, index_var=$const64.21, fn=<built-in function getitem>)
2021-05-27 22:37:59,195 on stmt: $72load_attr.24 = getattr(value=x, attr=shape)
2021-05-27 22:37:59,195 on stmt: $const74.25 = const(int, 0)
2021-05-27 22:37:59,195 on stmt: n_orig = static_getitem(value=$72load_attr.24, index=0, index_var=$const74.25, fn=<built-in function getitem>)
2021-05-27 22:37:59,195 on stmt: $82load_attr.28 = getattr(value=y, attr=shape)
2021-05-27 22:37:59,195 on stmt: $const84.29 = const(int, 0)
2021-05-27 22:37:59,195 on stmt: n_out = static_getitem(value=$82load_attr.28, index=0, index_var=$const84.29, fn=<built-in function getitem>)
2021-05-27 22:37:59,195 on stmt: $92load_attr.32 = getattr(value=y, attr=shape)
2021-05-27 22:37:59,195 on stmt: $const94.33 = const(int, 1)
2021-05-27 22:37:59,195 on stmt: n_channels = static_getitem(value=$92load_attr.32, index=1, index_var=$const94.33, fn=<built-in function getitem>)
2021-05-27 22:37:59,196 on stmt: jump 100
2021-05-27 22:37:59,196 ==== SSA block rewrite pass on 100
2021-05-27 22:37:59,196 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C358>
2021-05-27 22:37:59,196 on stmt: $104load_global.0 = global(range: <class 'range'>)
2021-05-27 22:37:59,196 on stmt: $108call_function.2 = call $104load_global.0(n_out, func=$104load_global.0, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None)
2021-05-27 22:37:59,196 on stmt: $110get_iter.3 = getiter(value=$108call_function.2)
2021-05-27 22:37:59,196 on stmt: $phi112.0 = $110get_iter.3
2021-05-27 22:37:59,196 on stmt: jump 112
2021-05-27 22:37:59,196 ==== SSA block rewrite pass on 112
2021-05-27 22:37:59,196 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C358>
2021-05-27 22:37:59,196 on stmt: time_register.2 = phi(incoming_values=[Var(time_register.1, interpn.py:67), Var(time_register, interpn.py:13)], incoming_blocks=[466, 100])
2021-05-27 22:37:59,197 on stmt: $112for_iter.1 = iternext(value=$phi112.0)
2021-05-27 22:37:59,197 on stmt: $112for_iter.2 = pair_first(value=$112for_iter.1)
2021-05-27 22:37:59,197 on stmt: $112for_iter.3 = pair_second(value=$112for_iter.1)
2021-05-27 22:37:59,197 on stmt: $phi116.1 = $112for_iter.2
2021-05-27 22:37:59,197 on stmt: branch $112for_iter.3, 116, 476
2021-05-27 22:37:59,197 ==== SSA block rewrite pass on 116
2021-05-27 22:37:59,197 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C358>
2021-05-27 22:37:59,197 on stmt: t = $phi116.1
2021-05-27 22:37:59,197 on stmt: $118load_global.2 = global(int: <class 'int'>)
2021-05-27 22:37:59,197 on stmt: n.1 = call $118load_global.2(time_register.2, func=$118load_global.2, args=[Var(time_register.2, interpn.py:27)], kws=(), vararg=None)
2021-05-27 22:37:59,197 on stmt: $132binary_subtract.8 = time_register.2 - n.1
2021-05-27 22:37:59,198 on stmt: frac = scale * $132binary_subtract.8
2021-05-27 22:37:59,198 on stmt: index_frac.1 = frac * num_table
2021-05-27 22:37:59,198 on stmt: $146load_global.13 = global(int: <class 'int'>)
2021-05-27 22:37:59,198 on stmt: offset.1 = call $146load_global.13(index_frac, func=$146load_global.13, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None)
2021-05-27 22:37:59,198 find_def var='index_frac' stmt=offset.1 = call $146load_global.13(index_frac, func=$146load_global.13, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None)
2021-05-27 22:37:59,198 replaced with: offset.1 = call $146load_global.13(index_frac.1, func=$146load_global.13, args=[Var(index_frac.1, interpn.py:35)], kws=(), vararg=None)
2021-05-27 22:37:59,198 on stmt: eta = index_frac - offset.1
2021-05-27 22:37:59,198 find_def var='index_frac' stmt=eta = index_frac - offset.1
2021-05-27 22:37:59,198 replaced with: eta = index_frac.1 - offset.1
2021-05-27 22:37:59,199 on stmt: $162load_global.19 = global(min: <built-in function min>)
2021-05-27 22:37:59,199 on stmt: $const166.21 = const(int, 1)
2021-05-27 22:37:59,199 on stmt: $168binary_add.22 = n.1 + $const166.21
2021-05-27 22:37:59,199 on stmt: $174binary_subtract.25 = nwin - offset.1
2021-05-27 22:37:59,199 on stmt: $178binary_floor_divide.27 = $174binary_subtract.25 // index_step
2021-05-27 22:37:59,199 on stmt: i_max = call $162load_global.19($168binary_add.22, $178binary_floor_divide.27, func=$162load_global.19, args=[Var($168binary_add.22, interpn.py:42), Var($178binary_floor_divide.27, interpn.py:42)], kws=(), vararg=None)
2021-05-27 22:37:59,199 on stmt: jump 184
2021-05-27 22:37:59,199 ==== SSA block rewrite pass on 184
2021-05-27 22:37:59,199 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C358>
2021-05-27 22:37:59,199 on stmt: $186load_global.1 = global(range: <class 'range'>)
2021-05-27 22:37:59,199 on stmt: $190call_function.3 = call $186load_global.1(i_max, func=$186load_global.1, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None)
2021-05-27 22:37:59,200 on stmt: $192get_iter.4 = getiter(value=$190call_function.3)
2021-05-27 22:37:59,200 on stmt: $phi194.1 = $192get_iter.4
2021-05-27 22:37:59,200 on stmt: jump 194
2021-05-27 22:37:59,200 ==== SSA block rewrite pass on 194
2021-05-27 22:37:59,200 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C358>
2021-05-27 22:37:59,200 on stmt: $194for_iter.2 = iternext(value=$phi194.1)
2021-05-27 22:37:59,200 on stmt: $194for_iter.3 = pair_first(value=$194for_iter.2)
2021-05-27 22:37:59,200 on stmt: $194for_iter.4 = pair_second(value=$194for_iter.2)
2021-05-27 22:37:59,200 on stmt: $phi196.2 = $194for_iter.3
2021-05-27 22:37:59,200 on stmt: branch $194for_iter.4, 196, 290
2021-05-27 22:37:59,200 ==== SSA block rewrite pass on 196
2021-05-27 22:37:59,200 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C358>
2021-05-27 22:37:59,201 on stmt: i = $phi196.2
2021-05-27 22:37:59,201 on stmt: $206binary_multiply.7 = i * index_step
2021-05-27 22:37:59,201 on stmt: $208binary_add.8 = offset.1 + $206binary_multiply.7
2021-05-27 22:37:59,201 on stmt: $210binary_subscr.9 = getitem(value=interp_win, index=$208binary_add.8, fn=<built-in function getitem>)
2021-05-27 22:37:59,201 on stmt: $222binary_multiply.15 = i * index_step
2021-05-27 22:37:59,201 on stmt: $224binary_add.16 = offset.1 + $222binary_multiply.15
2021-05-27 22:37:59,201 on stmt: $226binary_subscr.17 = getitem(value=interp_delta, index=$224binary_add.16, fn=<built-in function getitem>)
2021-05-27 22:37:59,201 on stmt: $228binary_multiply.18 = eta * $226binary_subscr.17
2021-05-27 22:37:59,201 on stmt: weight.1 = $210binary_subscr.9 + $228binary_multiply.18
2021-05-27 22:37:59,201 on stmt: jump 234
2021-05-27 22:37:59,202 ==== SSA block rewrite pass on 234
2021-05-27 22:37:59,202 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C358>
2021-05-27 22:37:59,202 on stmt: $236load_global.2 = global(range: <class 'range'>)
2021-05-27 22:37:59,202 on stmt: $240call_function.4 = call $236load_global.2(n_channels, func=$236load_global.2, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-27 22:37:59,202 on stmt: $242get_iter.5 = getiter(value=$240call_function.4)
2021-05-27 22:37:59,202 on stmt: $phi244.2 = $242get_iter.5
2021-05-27 22:37:59,202 on stmt: jump 244
2021-05-27 22:37:59,202 ==== SSA block rewrite pass on 244
2021-05-27 22:37:59,202 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C358>
2021-05-27 22:37:59,202 on stmt: $244for_iter.3 = iternext(value=$phi244.2)
2021-05-27 22:37:59,202 on stmt: $244for_iter.4 = pair_first(value=$244for_iter.3)
2021-05-27 22:37:59,202 on stmt: $244for_iter.5 = pair_second(value=$244for_iter.3)
2021-05-27 22:37:59,203 on stmt: $phi246.3 = $244for_iter.4
2021-05-27 22:37:59,203 on stmt: branch $244for_iter.5, 246, 286
2021-05-27 22:37:59,203 ==== SSA block rewrite pass on 246
2021-05-27 22:37:59,203 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C358>
2021-05-27 22:37:59,203 on stmt: j = $phi246.3
2021-05-27 22:37:59,203 on stmt: $254build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-27 22:37:59,203 on stmt: $258binary_subscr.10 = getitem(value=y, index=$254build_tuple.7, fn=<built-in function getitem>)
2021-05-27 22:37:59,203 on stmt: $268binary_subtract.15 = n.1 - i
2021-05-27 22:37:59,203 on stmt: $272build_tuple.17 = build_tuple(items=[Var($268binary_subtract.15, interpn.py:47), Var(j, interpn.py:46)])
2021-05-27 22:37:59,203 on stmt: $274binary_subscr.18 = getitem(value=x, index=$272build_tuple.17, fn=<built-in function getitem>)
2021-05-27 22:37:59,203 on stmt: $276binary_multiply.19 = weight.1 * $274binary_subscr.18
2021-05-27 22:37:59,204 on stmt: $278inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$258binary_subscr.10, rhs=$276binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
2021-05-27 22:37:59,204 on stmt: y[$254build_tuple.7] = $278inplace_add.20
2021-05-27 22:37:59,204 on stmt: jump 244
2021-05-27 22:37:59,204 ==== SSA block rewrite pass on 286
2021-05-27 22:37:59,204 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C358>
2021-05-27 22:37:59,204 on stmt: jump 288
2021-05-27 22:37:59,204 ==== SSA block rewrite pass on 288
2021-05-27 22:37:59,204 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C358>
2021-05-27 22:37:59,204 on stmt: jump 194
2021-05-27 22:37:59,204 ==== SSA block rewrite pass on 290
2021-05-27 22:37:59,204 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C358>
2021-05-27 22:37:59,205 on stmt: jump 292
2021-05-27 22:37:59,205 ==== SSA block rewrite pass on 292
2021-05-27 22:37:59,205 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C358>
2021-05-27 22:37:59,205 on stmt: $296binary_subtract.3 = scale - frac
2021-05-27 22:37:59,205 on stmt: frac = $296binary_subtract.3
2021-05-27 22:37:59,205 on stmt: index_frac.2 = frac * num_table
2021-05-27 22:37:59,205 on stmt: $308load_global.7 = global(int: <class 'int'>)
2021-05-27 22:37:59,205 on stmt: offset.2 = call $308load_global.7(index_frac, func=$308load_global.7, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None)
2021-05-27 22:37:59,205 find_def var='index_frac' stmt=offset.2 = call $308load_global.7(index_frac, func=$308load_global.7, args=[Var(index_frac, interpn.py:17)], kws=(), vararg=None)
2021-05-27 22:37:59,205 replaced with: offset.2 = call $308load_global.7(index_frac.2, func=$308load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None)
2021-05-27 22:37:59,206 on stmt: eta = index_frac - offset.2
2021-05-27 22:37:59,206 find_def var='index_frac' stmt=eta = index_frac - offset.2
2021-05-27 22:37:59,206 replaced with: eta = index_frac.2 - offset.2
2021-05-27 22:37:59,206 on stmt: $324load_global.13 = global(min: <built-in function min>)
2021-05-27 22:37:59,206 on stmt: $330binary_subtract.16 = n_orig - n.1
2021-05-27 22:37:59,206 on stmt: $const332.17 = const(int, 1)
2021-05-27 22:37:59,206 on stmt: $334binary_subtract.18 = $330binary_subtract.16 - $const332.17
2021-05-27 22:37:59,206 on stmt: $340binary_subtract.21 = nwin - offset.2
2021-05-27 22:37:59,206 on stmt: $344binary_floor_divide.23 = $340binary_subtract.21 // index_step
2021-05-27 22:37:59,206 on stmt: k_max = call $324load_global.13($334binary_subtract.18, $344binary_floor_divide.23, func=$324load_global.13, args=[Var($334binary_subtract.18, interpn.py:60), Var($344binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None)
2021-05-27 22:37:59,207 on stmt: jump 350
2021-05-27 22:37:59,207 ==== SSA block rewrite pass on 350
2021-05-27 22:37:59,207 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C358>
2021-05-27 22:37:59,207 on stmt: $352load_global.1 = global(range: <class 'range'>)
2021-05-27 22:37:59,207 on stmt: $356call_function.3 = call $352load_global.1(k_max, func=$352load_global.1, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None)
2021-05-27 22:37:59,207 on stmt: $358get_iter.4 = getiter(value=$356call_function.3)
2021-05-27 22:37:59,207 on stmt: $phi360.1 = $358get_iter.4
2021-05-27 22:37:59,207 on stmt: jump 360
2021-05-27 22:37:59,207 ==== SSA block rewrite pass on 360
2021-05-27 22:37:59,207 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C358>
2021-05-27 22:37:59,207 on stmt: $360for_iter.2 = iternext(value=$phi360.1)
2021-05-27 22:37:59,207 on stmt: $360for_iter.3 = pair_first(value=$360for_iter.2)
2021-05-27 22:37:59,208 on stmt: $360for_iter.4 = pair_second(value=$360for_iter.2)
2021-05-27 22:37:59,208 on stmt: $phi362.2 = $360for_iter.3
2021-05-27 22:37:59,208 on stmt: branch $360for_iter.4, 362, 464
2021-05-27 22:37:59,208 ==== SSA block rewrite pass on 362
2021-05-27 22:37:59,208 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C358>
2021-05-27 22:37:59,208 on stmt: k = $phi362.2
2021-05-27 22:37:59,208 on stmt: $372binary_multiply.7 = k * index_step
2021-05-27 22:37:59,208 on stmt: $374binary_add.8 = offset.2 + $372binary_multiply.7
2021-05-27 22:37:59,208 on stmt: $376binary_subscr.9 = getitem(value=interp_win, index=$374binary_add.8, fn=<built-in function getitem>)
2021-05-27 22:37:59,208 on stmt: $388binary_multiply.15 = k * index_step
2021-05-27 22:37:59,208 on stmt: $390binary_add.16 = offset.2 + $388binary_multiply.15
2021-05-27 22:37:59,209 on stmt: $392binary_subscr.17 = getitem(value=interp_delta, index=$390binary_add.16, fn=<built-in function getitem>)
2021-05-27 22:37:59,209 on stmt: $394binary_multiply.18 = eta * $392binary_subscr.17
2021-05-27 22:37:59,209 on stmt: weight.2 = $376binary_subscr.9 + $394binary_multiply.18
2021-05-27 22:37:59,209 on stmt: jump 400
2021-05-27 22:37:59,209 ==== SSA block rewrite pass on 400
2021-05-27 22:37:59,209 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C358>
2021-05-27 22:37:59,209 on stmt: $402load_global.2 = global(range: <class 'range'>)
2021-05-27 22:37:59,209 on stmt: $406call_function.4 = call $402load_global.2(n_channels, func=$402load_global.2, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-27 22:37:59,209 on stmt: $408get_iter.5 = getiter(value=$406call_function.4)
2021-05-27 22:37:59,209 on stmt: $phi410.2 = $408get_iter.5
2021-05-27 22:37:59,209 on stmt: jump 410
2021-05-27 22:37:59,210 ==== SSA block rewrite pass on 410
2021-05-27 22:37:59,210 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C358>
2021-05-27 22:37:59,210 on stmt: $410for_iter.3 = iternext(value=$phi410.2)
2021-05-27 22:37:59,210 on stmt: $410for_iter.4 = pair_first(value=$410for_iter.3)
2021-05-27 22:37:59,210 on stmt: $410for_iter.5 = pair_second(value=$410for_iter.3)
2021-05-27 22:37:59,210 on stmt: $phi412.3 = $410for_iter.4
2021-05-27 22:37:59,210 on stmt: branch $410for_iter.5, 412, 458
2021-05-27 22:37:59,210 ==== SSA block rewrite pass on 412
2021-05-27 22:37:59,210 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C358>
2021-05-27 22:37:59,210 on stmt: j.1 = $phi412.3
2021-05-27 22:37:59,210 on stmt: $420build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j.1, interpn.py:63)])
2021-05-27 22:37:59,211 on stmt: $424binary_subscr.10 = getitem(value=y, index=$420build_tuple.7, fn=<built-in function getitem>)
2021-05-27 22:37:59,211 on stmt: $434binary_add.15 = n.1 + k
2021-05-27 22:37:59,211 on stmt: $const436.16 = const(int, 1)
2021-05-27 22:37:59,211 on stmt: $438binary_add.17 = $434binary_add.15 + $const436.16
2021-05-27 22:37:59,211 on stmt: $442build_tuple.19 = build_tuple(items=[Var($438binary_add.17, interpn.py:64), Var(j.1, interpn.py:63)])
2021-05-27 22:37:59,211 on stmt: $444binary_subscr.20 = getitem(value=x, index=$442build_tuple.19, fn=<built-in function getitem>)
2021-05-27 22:37:59,211 on stmt: $446binary_multiply.21 = weight.2 * $444binary_subscr.20
2021-05-27 22:37:59,211 on stmt: $448inplace_add.22 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$424binary_subscr.10, rhs=$446binary_multiply.21, static_lhs=Undefined, static_rhs=Undefined)
2021-05-27 22:37:59,211 on stmt: y[$420build_tuple.7] = $448inplace_add.22
2021-05-27 22:37:59,211 on stmt: jump 410
2021-05-27 22:37:59,211 ==== SSA block rewrite pass on 458
2021-05-27 22:37:59,212 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C358>
2021-05-27 22:37:59,212 on stmt: jump 460
2021-05-27 22:37:59,212 ==== SSA block rewrite pass on 460
2021-05-27 22:37:59,212 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C358>
2021-05-27 22:37:59,212 on stmt: jump 360
2021-05-27 22:37:59,212 ==== SSA block rewrite pass on 464
2021-05-27 22:37:59,212 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C358>
2021-05-27 22:37:59,212 on stmt: jump 466
2021-05-27 22:37:59,212 ==== SSA block rewrite pass on 466
2021-05-27 22:37:59,212 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C358>
2021-05-27 22:37:59,212 on stmt: $470inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register.2, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
2021-05-27 22:37:59,212 on stmt: time_register.1 = $470inplace_add.3
2021-05-27 22:37:59,213 on stmt: jump 112
2021-05-27 22:37:59,213 ==== SSA block rewrite pass on 476
2021-05-27 22:37:59,213 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C358>
2021-05-27 22:37:59,213 on stmt: jump 478
2021-05-27 22:37:59,213 ==== SSA block rewrite pass on 478
2021-05-27 22:37:59,213 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11C358>
2021-05-27 22:37:59,213 on stmt: $const478.0 = const(NoneType, None)
2021-05-27 22:37:59,213 on stmt: $480return_value.1 = cast(value=$const478.0)
2021-05-27 22:37:59,213 on stmt: return $480return_value.1
2021-05-27 22:37:59,213 Fix SSA violator on var eta
2021-05-27 22:37:59,213 ==== SSA block rewrite pass on 0
2021-05-27 22:37:59,213 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E160E80>
2021-05-27 22:37:59,214 on stmt: x = arg(0, name=x)
2021-05-27 22:37:59,214 on stmt: y = arg(1, name=y)
2021-05-27 22:37:59,214 on stmt: sample_ratio = arg(2, name=sample_ratio)
2021-05-27 22:37:59,214 on stmt: interp_win = arg(3, name=interp_win)
2021-05-27 22:37:59,214 on stmt: interp_delta = arg(4, name=interp_delta)
2021-05-27 22:37:59,214 on stmt: num_table = arg(5, name=num_table)
2021-05-27 22:37:59,214 on stmt: $2load_global.0 = global(min: <built-in function min>)
2021-05-27 22:37:59,214 on stmt: $const4.1 = const(float, 1.0)
2021-05-27 22:37:59,214 on stmt: scale = call $2load_global.0($const4.1, sample_ratio, func=$2load_global.0, args=[Var($const4.1, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None)
2021-05-27 22:37:59,214 on stmt: $const12.4 = const(float, 1.0)
2021-05-27 22:37:59,214 on stmt: time_increment = $const12.4 / sample_ratio
2021-05-27 22:37:59,215 on stmt: $20load_global.7 = global(int: <class 'int'>)
2021-05-27 22:37:59,215 on stmt: $26binary_multiply.10 = scale * num_table
2021-05-27 22:37:59,215 on stmt: index_step = call $20load_global.7($26binary_multiply.10, func=$20load_global.7, args=[Var($26binary_multiply.10, interpn.py:12)], kws=(), vararg=None)
2021-05-27 22:37:59,215 on stmt: time_register = const(float, 0.0)
2021-05-27 22:37:59,215 on stmt: n = const(int, 0)
2021-05-27 22:37:59,215 on stmt: frac = const(float, 0.0)
2021-05-27 22:37:59,215 on stmt: index_frac = const(float, 0.0)
2021-05-27 22:37:59,215 on stmt: offset = const(int, 0)
2021-05-27 22:37:59,215 on stmt: eta = const(float, 0.0)
2021-05-27 22:37:59,215 first assign: eta
2021-05-27 22:37:59,215 replaced with: eta = const(float, 0.0)
2021-05-27 22:37:59,215 on stmt: weight = const(float, 0.0)
2021-05-27 22:37:59,216 on stmt: $62load_attr.20 = getattr(value=interp_win, attr=shape)
2021-05-27 22:37:59,216 on stmt: $const64.21 = const(int, 0)
2021-05-27 22:37:59,216 on stmt: nwin = static_getitem(value=$62load_attr.20, index=0, index_var=$const64.21, fn=<built-in function getitem>)
2021-05-27 22:37:59,216 on stmt: $72load_attr.24 = getattr(value=x, attr=shape)
2021-05-27 22:37:59,216 on stmt: $const74.25 = const(int, 0)
2021-05-27 22:37:59,216 on stmt: n_orig = static_getitem(value=$72load_attr.24, index=0, index_var=$const74.25, fn=<built-in function getitem>)
2021-05-27 22:37:59,216 on stmt: $82load_attr.28 = getattr(value=y, attr=shape)
2021-05-27 22:37:59,216 on stmt: $const84.29 = const(int, 0)
2021-05-27 22:37:59,216 on stmt: n_out = static_getitem(value=$82load_attr.28, index=0, index_var=$const84.29, fn=<built-in function getitem>)
2021-05-27 22:37:59,216 on stmt: $92load_attr.32 = getattr(value=y, attr=shape)
2021-05-27 22:37:59,216 on stmt: $const94.33 = const(int, 1)
2021-05-27 22:37:59,216 on stmt: n_channels = static_getitem(value=$92load_attr.32, index=1, index_var=$const94.33, fn=<built-in function getitem>)
2021-05-27 22:37:59,217 on stmt: jump 100
2021-05-27 22:37:59,217 ==== SSA block rewrite pass on 100
2021-05-27 22:37:59,217 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E160E80>
2021-05-27 22:37:59,217 on stmt: $104load_global.0 = global(range: <class 'range'>)
2021-05-27 22:37:59,217 on stmt: $108call_function.2 = call $104load_global.0(n_out, func=$104load_global.0, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None)
2021-05-27 22:37:59,217 on stmt: $110get_iter.3 = getiter(value=$108call_function.2)
2021-05-27 22:37:59,217 on stmt: $phi112.0 = $110get_iter.3
2021-05-27 22:37:59,217 on stmt: jump 112
2021-05-27 22:37:59,217 ==== SSA block rewrite pass on 112
2021-05-27 22:37:59,217 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E160E80>
2021-05-27 22:37:59,217 on stmt: time_register.2 = phi(incoming_values=[Var(time_register.1, interpn.py:67), Var(time_register, interpn.py:13)], incoming_blocks=[466, 100])
2021-05-27 22:37:59,217 on stmt: $112for_iter.1 = iternext(value=$phi112.0)
2021-05-27 22:37:59,218 on stmt: $112for_iter.2 = pair_first(value=$112for_iter.1)
2021-05-27 22:37:59,218 on stmt: $112for_iter.3 = pair_second(value=$112for_iter.1)
2021-05-27 22:37:59,218 on stmt: $phi116.1 = $112for_iter.2
2021-05-27 22:37:59,218 on stmt: branch $112for_iter.3, 116, 476
2021-05-27 22:37:59,218 ==== SSA block rewrite pass on 116
2021-05-27 22:37:59,218 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E160E80>
2021-05-27 22:37:59,218 on stmt: t = $phi116.1
2021-05-27 22:37:59,218 on stmt: $118load_global.2 = global(int: <class 'int'>)
2021-05-27 22:37:59,218 on stmt: n.1 = call $118load_global.2(time_register.2, func=$118load_global.2, args=[Var(time_register.2, interpn.py:27)], kws=(), vararg=None)
2021-05-27 22:37:59,218 on stmt: $132binary_subtract.8 = time_register.2 - n.1
2021-05-27 22:37:59,218 on stmt: frac = scale * $132binary_subtract.8
2021-05-27 22:37:59,219 on stmt: index_frac.1 = frac * num_table
2021-05-27 22:37:59,219 on stmt: $146load_global.13 = global(int: <class 'int'>)
2021-05-27 22:37:59,219 on stmt: offset.1 = call $146load_global.13(index_frac.1, func=$146load_global.13, args=[Var(index_frac.1, interpn.py:35)], kws=(), vararg=None)
2021-05-27 22:37:59,219 on stmt: eta = index_frac.1 - offset.1
2021-05-27 22:37:59,219 replaced with: eta.1 = index_frac.1 - offset.1
2021-05-27 22:37:59,219 on stmt: $162load_global.19 = global(min: <built-in function min>)
2021-05-27 22:37:59,219 on stmt: $const166.21 = const(int, 1)
2021-05-27 22:37:59,219 on stmt: $168binary_add.22 = n.1 + $const166.21
2021-05-27 22:37:59,219 on stmt: $174binary_subtract.25 = nwin - offset.1
2021-05-27 22:37:59,219 on stmt: $178binary_floor_divide.27 = $174binary_subtract.25 // index_step
2021-05-27 22:37:59,219 on stmt: i_max = call $162load_global.19($168binary_add.22, $178binary_floor_divide.27, func=$162load_global.19, args=[Var($168binary_add.22, interpn.py:42), Var($178binary_floor_divide.27, interpn.py:42)], kws=(), vararg=None)
2021-05-27 22:37:59,220 on stmt: jump 184
2021-05-27 22:37:59,220 ==== SSA block rewrite pass on 184
2021-05-27 22:37:59,220 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E160E80>
2021-05-27 22:37:59,220 on stmt: $186load_global.1 = global(range: <class 'range'>)
2021-05-27 22:37:59,220 on stmt: $190call_function.3 = call $186load_global.1(i_max, func=$186load_global.1, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None)
2021-05-27 22:37:59,220 on stmt: $192get_iter.4 = getiter(value=$190call_function.3)
2021-05-27 22:37:59,220 on stmt: $phi194.1 = $192get_iter.4
2021-05-27 22:37:59,221 on stmt: jump 194
2021-05-27 22:37:59,221 ==== SSA block rewrite pass on 194
2021-05-27 22:37:59,221 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E160E80>
2021-05-27 22:37:59,221 on stmt: $194for_iter.2 = iternext(value=$phi194.1)
2021-05-27 22:37:59,221 on stmt: $194for_iter.3 = pair_first(value=$194for_iter.2)
2021-05-27 22:37:59,221 on stmt: $194for_iter.4 = pair_second(value=$194for_iter.2)
2021-05-27 22:37:59,221 on stmt: $phi196.2 = $194for_iter.3
2021-05-27 22:37:59,221 on stmt: branch $194for_iter.4, 196, 290
2021-05-27 22:37:59,221 ==== SSA block rewrite pass on 196
2021-05-27 22:37:59,221 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E160E80>
2021-05-27 22:37:59,221 on stmt: i = $phi196.2
2021-05-27 22:37:59,221 on stmt: $206binary_multiply.7 = i * index_step
2021-05-27 22:37:59,222 on stmt: $208binary_add.8 = offset.1 + $206binary_multiply.7
2021-05-27 22:37:59,222 on stmt: $210binary_subscr.9 = getitem(value=interp_win, index=$208binary_add.8, fn=<built-in function getitem>)
2021-05-27 22:37:59,222 on stmt: $222binary_multiply.15 = i * index_step
2021-05-27 22:37:59,222 on stmt: $224binary_add.16 = offset.1 + $222binary_multiply.15
2021-05-27 22:37:59,222 on stmt: $226binary_subscr.17 = getitem(value=interp_delta, index=$224binary_add.16, fn=<built-in function getitem>)
2021-05-27 22:37:59,222 on stmt: $228binary_multiply.18 = eta * $226binary_subscr.17
2021-05-27 22:37:59,222 on stmt: weight.1 = $210binary_subscr.9 + $228binary_multiply.18
2021-05-27 22:37:59,222 on stmt: jump 234
2021-05-27 22:37:59,222 ==== SSA block rewrite pass on 234
2021-05-27 22:37:59,222 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E160E80>
2021-05-27 22:37:59,222 on stmt: $236load_global.2 = global(range: <class 'range'>)
2021-05-27 22:37:59,222 on stmt: $240call_function.4 = call $236load_global.2(n_channels, func=$236load_global.2, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-27 22:37:59,222 on stmt: $242get_iter.5 = getiter(value=$240call_function.4)
2021-05-27 22:37:59,222 on stmt: $phi244.2 = $242get_iter.5
2021-05-27 22:37:59,222 on stmt: jump 244
2021-05-27 22:37:59,222 ==== SSA block rewrite pass on 244
2021-05-27 22:37:59,222 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E160E80>
2021-05-27 22:37:59,222 on stmt: $244for_iter.3 = iternext(value=$phi244.2)
2021-05-27 22:37:59,222 on stmt: $244for_iter.4 = pair_first(value=$244for_iter.3)
2021-05-27 22:37:59,222 on stmt: $244for_iter.5 = pair_second(value=$244for_iter.3)
2021-05-27 22:37:59,222 on stmt: $phi246.3 = $244for_iter.4
2021-05-27 22:37:59,222 on stmt: branch $244for_iter.5, 246, 286
2021-05-27 22:37:59,222 ==== SSA block rewrite pass on 246
2021-05-27 22:37:59,222 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E160E80>
2021-05-27 22:37:59,222 on stmt: j = $phi246.3
2021-05-27 22:37:59,222 on stmt: $254build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-27 22:37:59,222 on stmt: $258binary_subscr.10 = getitem(value=y, index=$254build_tuple.7, fn=<built-in function getitem>)
2021-05-27 22:37:59,222 on stmt: $268binary_subtract.15 = n.1 - i
2021-05-27 22:37:59,222 on stmt: $272build_tuple.17 = build_tuple(items=[Var($268binary_subtract.15, interpn.py:47), Var(j, interpn.py:46)])
2021-05-27 22:37:59,222 on stmt: $274binary_subscr.18 = getitem(value=x, index=$272build_tuple.17, fn=<built-in function getitem>)
2021-05-27 22:37:59,222 on stmt: $276binary_multiply.19 = weight.1 * $274binary_subscr.18
2021-05-27 22:37:59,222 on stmt: $278inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$258binary_subscr.10, rhs=$276binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
2021-05-27 22:37:59,222 on stmt: y[$254build_tuple.7] = $278inplace_add.20
2021-05-27 22:37:59,222 on stmt: jump 244
2021-05-27 22:37:59,222 ==== SSA block rewrite pass on 286
2021-05-27 22:37:59,222 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E160E80>
2021-05-27 22:37:59,222 on stmt: jump 288
2021-05-27 22:37:59,222 ==== SSA block rewrite pass on 288
2021-05-27 22:37:59,222 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E160E80>
2021-05-27 22:37:59,222 on stmt: jump 194
2021-05-27 22:37:59,222 ==== SSA block rewrite pass on 290
2021-05-27 22:37:59,222 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E160E80>
2021-05-27 22:37:59,222 on stmt: jump 292
2021-05-27 22:37:59,222 ==== SSA block rewrite pass on 292
2021-05-27 22:37:59,222 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E160E80>
2021-05-27 22:37:59,222 on stmt: $296binary_subtract.3 = scale - frac
2021-05-27 22:37:59,222 on stmt: frac = $296binary_subtract.3
2021-05-27 22:37:59,222 on stmt: index_frac.2 = frac * num_table
2021-05-27 22:37:59,222 on stmt: $308load_global.7 = global(int: <class 'int'>)
2021-05-27 22:37:59,222 on stmt: offset.2 = call $308load_global.7(index_frac.2, func=$308load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None)
2021-05-27 22:37:59,222 on stmt: eta = index_frac.2 - offset.2
2021-05-27 22:37:59,222 replaced with: eta.2 = index_frac.2 - offset.2
2021-05-27 22:37:59,222 on stmt: $324load_global.13 = global(min: <built-in function min>)
2021-05-27 22:37:59,222 on stmt: $330binary_subtract.16 = n_orig - n.1
2021-05-27 22:37:59,222 on stmt: $const332.17 = const(int, 1)
2021-05-27 22:37:59,222 on stmt: $334binary_subtract.18 = $330binary_subtract.16 - $const332.17
2021-05-27 22:37:59,222 on stmt: $340binary_subtract.21 = nwin - offset.2
2021-05-27 22:37:59,222 on stmt: $344binary_floor_divide.23 = $340binary_subtract.21 // index_step
2021-05-27 22:37:59,222 on stmt: k_max = call $324load_global.13($334binary_subtract.18, $344binary_floor_divide.23, func=$324load_global.13, args=[Var($334binary_subtract.18, interpn.py:60), Var($344binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None)
2021-05-27 22:37:59,222 on stmt: jump 350
2021-05-27 22:37:59,222 ==== SSA block rewrite pass on 350
2021-05-27 22:37:59,222 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E160E80>
2021-05-27 22:37:59,222 on stmt: $352load_global.1 = global(range: <class 'range'>)
2021-05-27 22:37:59,222 on stmt: $356call_function.3 = call $352load_global.1(k_max, func=$352load_global.1, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None)
2021-05-27 22:37:59,222 on stmt: $358get_iter.4 = getiter(value=$356call_function.3)
2021-05-27 22:37:59,222 on stmt: $phi360.1 = $358get_iter.4
2021-05-27 22:37:59,222 on stmt: jump 360
2021-05-27 22:37:59,222 ==== SSA block rewrite pass on 360
2021-05-27 22:37:59,222 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E160E80>
2021-05-27 22:37:59,222 on stmt: $360for_iter.2 = iternext(value=$phi360.1)
2021-05-27 22:37:59,222 on stmt: $360for_iter.3 = pair_first(value=$360for_iter.2)
2021-05-27 22:37:59,222 on stmt: $360for_iter.4 = pair_second(value=$360for_iter.2)
2021-05-27 22:37:59,222 on stmt: $phi362.2 = $360for_iter.3
2021-05-27 22:37:59,222 on stmt: branch $360for_iter.4, 362, 464
2021-05-27 22:37:59,222 ==== SSA block rewrite pass on 362
2021-05-27 22:37:59,222 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E160E80>
2021-05-27 22:37:59,222 on stmt: k = $phi362.2
2021-05-27 22:37:59,222 on stmt: $372binary_multiply.7 = k * index_step
2021-05-27 22:37:59,222 on stmt: $374binary_add.8 = offset.2 + $372binary_multiply.7
2021-05-27 22:37:59,222 on stmt: $376binary_subscr.9 = getitem(value=interp_win, index=$374binary_add.8, fn=<built-in function getitem>)
2021-05-27 22:37:59,222 on stmt: $388binary_multiply.15 = k * index_step
2021-05-27 22:37:59,222 on stmt: $390binary_add.16 = offset.2 + $388binary_multiply.15
2021-05-27 22:37:59,222 on stmt: $392binary_subscr.17 = getitem(value=interp_delta, index=$390binary_add.16, fn=<built-in function getitem>)
2021-05-27 22:37:59,222 on stmt: $394binary_multiply.18 = eta * $392binary_subscr.17
2021-05-27 22:37:59,222 on stmt: weight.2 = $376binary_subscr.9 + $394binary_multiply.18
2021-05-27 22:37:59,222 on stmt: jump 400
2021-05-27 22:37:59,222 ==== SSA block rewrite pass on 400
2021-05-27 22:37:59,222 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E160E80>
2021-05-27 22:37:59,222 on stmt: $402load_global.2 = global(range: <class 'range'>)
2021-05-27 22:37:59,222 on stmt: $406call_function.4 = call $402load_global.2(n_channels, func=$402load_global.2, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-27 22:37:59,222 on stmt: $408get_iter.5 = getiter(value=$406call_function.4)
2021-05-27 22:37:59,222 on stmt: $phi410.2 = $408get_iter.5
2021-05-27 22:37:59,222 on stmt: jump 410
2021-05-27 22:37:59,222 ==== SSA block rewrite pass on 410
2021-05-27 22:37:59,222 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E160E80>
2021-05-27 22:37:59,222 on stmt: $410for_iter.3 = iternext(value=$phi410.2)
2021-05-27 22:37:59,222 on stmt: $410for_iter.4 = pair_first(value=$410for_iter.3)
2021-05-27 22:37:59,222 on stmt: $410for_iter.5 = pair_second(value=$410for_iter.3)
2021-05-27 22:37:59,222 on stmt: $phi412.3 = $410for_iter.4
2021-05-27 22:37:59,222 on stmt: branch $410for_iter.5, 412, 458
2021-05-27 22:37:59,222 ==== SSA block rewrite pass on 412
2021-05-27 22:37:59,222 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E160E80>
2021-05-27 22:37:59,222 on stmt: j.1 = $phi412.3
2021-05-27 22:37:59,222 on stmt: $420build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j.1, interpn.py:63)])
2021-05-27 22:37:59,222 on stmt: $424binary_subscr.10 = getitem(value=y, index=$420build_tuple.7, fn=<built-in function getitem>)
2021-05-27 22:37:59,222 on stmt: $434binary_add.15 = n.1 + k
2021-05-27 22:37:59,222 on stmt: $const436.16 = const(int, 1)
2021-05-27 22:37:59,222 on stmt: $438binary_add.17 = $434binary_add.15 + $const436.16
2021-05-27 22:37:59,222 on stmt: $442build_tuple.19 = build_tuple(items=[Var($438binary_add.17, interpn.py:64), Var(j.1, interpn.py:63)])
2021-05-27 22:37:59,222 on stmt: $444binary_subscr.20 = getitem(value=x, index=$442build_tuple.19, fn=<built-in function getitem>)
2021-05-27 22:37:59,222 on stmt: $446binary_multiply.21 = weight.2 * $444binary_subscr.20
2021-05-27 22:37:59,222 on stmt: $448inplace_add.22 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$424binary_subscr.10, rhs=$446binary_multiply.21, static_lhs=Undefined, static_rhs=Undefined)
2021-05-27 22:37:59,222 on stmt: y[$420build_tuple.7] = $448inplace_add.22
2021-05-27 22:37:59,222 on stmt: jump 410
2021-05-27 22:37:59,222 ==== SSA block rewrite pass on 458
2021-05-27 22:37:59,222 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E160E80>
2021-05-27 22:37:59,222 on stmt: jump 460
2021-05-27 22:37:59,222 ==== SSA block rewrite pass on 460
2021-05-27 22:37:59,222 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E160E80>
2021-05-27 22:37:59,222 on stmt: jump 360
2021-05-27 22:37:59,222 ==== SSA block rewrite pass on 464
2021-05-27 22:37:59,222 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E160E80>
2021-05-27 22:37:59,222 on stmt: jump 466
2021-05-27 22:37:59,222 ==== SSA block rewrite pass on 466
2021-05-27 22:37:59,222 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E160E80>
2021-05-27 22:37:59,222 on stmt: $470inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register.2, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
2021-05-27 22:37:59,222 on stmt: time_register.1 = $470inplace_add.3
2021-05-27 22:37:59,222 on stmt: jump 112
2021-05-27 22:37:59,222 ==== SSA block rewrite pass on 476
2021-05-27 22:37:59,222 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E160E80>
2021-05-27 22:37:59,222 on stmt: jump 478
2021-05-27 22:37:59,222 ==== SSA block rewrite pass on 478
2021-05-27 22:37:59,222 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E160E80>
2021-05-27 22:37:59,222 on stmt: $const478.0 = const(NoneType, None)
2021-05-27 22:37:59,222 on stmt: $480return_value.1 = cast(value=$const478.0)
2021-05-27 22:37:59,222 on stmt: return $480return_value.1
2021-05-27 22:37:59,222 Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000000000E160E10>],
             116: [<numba.core.ir.Assign object at 0x000000000E160DD8>],
             292: [<numba.core.ir.Assign object at 0x000000000E108400>]})
2021-05-27 22:37:59,222 ==== SSA block rewrite pass on 0
2021-05-27 22:37:59,222 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11CB38>
2021-05-27 22:37:59,222 on stmt: x = arg(0, name=x)
2021-05-27 22:37:59,222 on stmt: y = arg(1, name=y)
2021-05-27 22:37:59,222 on stmt: sample_ratio = arg(2, name=sample_ratio)
2021-05-27 22:37:59,222 on stmt: interp_win = arg(3, name=interp_win)
2021-05-27 22:37:59,222 on stmt: interp_delta = arg(4, name=interp_delta)
2021-05-27 22:37:59,222 on stmt: num_table = arg(5, name=num_table)
2021-05-27 22:37:59,222 on stmt: $2load_global.0 = global(min: <built-in function min>)
2021-05-27 22:37:59,222 on stmt: $const4.1 = const(float, 1.0)
2021-05-27 22:37:59,222 on stmt: scale = call $2load_global.0($const4.1, sample_ratio, func=$2load_global.0, args=[Var($const4.1, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None)
2021-05-27 22:37:59,222 on stmt: $const12.4 = const(float, 1.0)
2021-05-27 22:37:59,222 on stmt: time_increment = $const12.4 / sample_ratio
2021-05-27 22:37:59,222 on stmt: $20load_global.7 = global(int: <class 'int'>)
2021-05-27 22:37:59,222 on stmt: $26binary_multiply.10 = scale * num_table
2021-05-27 22:37:59,222 on stmt: index_step = call $20load_global.7($26binary_multiply.10, func=$20load_global.7, args=[Var($26binary_multiply.10, interpn.py:12)], kws=(), vararg=None)
2021-05-27 22:37:59,222 on stmt: time_register = const(float, 0.0)
2021-05-27 22:37:59,222 on stmt: n = const(int, 0)
2021-05-27 22:37:59,222 on stmt: frac = const(float, 0.0)
2021-05-27 22:37:59,222 on stmt: index_frac = const(float, 0.0)
2021-05-27 22:37:59,222 on stmt: offset = const(int, 0)
2021-05-27 22:37:59,222 on stmt: eta = const(float, 0.0)
2021-05-27 22:37:59,222 on stmt: weight = const(float, 0.0)
2021-05-27 22:37:59,222 on stmt: $62load_attr.20 = getattr(value=interp_win, attr=shape)
2021-05-27 22:37:59,222 on stmt: $const64.21 = const(int, 0)
2021-05-27 22:37:59,222 on stmt: nwin = static_getitem(value=$62load_attr.20, index=0, index_var=$const64.21, fn=<built-in function getitem>)
2021-05-27 22:37:59,222 on stmt: $72load_attr.24 = getattr(value=x, attr=shape)
2021-05-27 22:37:59,222 on stmt: $const74.25 = const(int, 0)
2021-05-27 22:37:59,222 on stmt: n_orig = static_getitem(value=$72load_attr.24, index=0, index_var=$const74.25, fn=<built-in function getitem>)
2021-05-27 22:37:59,222 on stmt: $82load_attr.28 = getattr(value=y, attr=shape)
2021-05-27 22:37:59,222 on stmt: $const84.29 = const(int, 0)
2021-05-27 22:37:59,222 on stmt: n_out = static_getitem(value=$82load_attr.28, index=0, index_var=$const84.29, fn=<built-in function getitem>)
2021-05-27 22:37:59,222 on stmt: $92load_attr.32 = getattr(value=y, attr=shape)
2021-05-27 22:37:59,222 on stmt: $const94.33 = const(int, 1)
2021-05-27 22:37:59,222 on stmt: n_channels = static_getitem(value=$92load_attr.32, index=1, index_var=$const94.33, fn=<built-in function getitem>)
2021-05-27 22:37:59,222 on stmt: jump 100
2021-05-27 22:37:59,222 ==== SSA block rewrite pass on 100
2021-05-27 22:37:59,222 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11CB38>
2021-05-27 22:37:59,222 on stmt: $104load_global.0 = global(range: <class 'range'>)
2021-05-27 22:37:59,238 on stmt: $108call_function.2 = call $104load_global.0(n_out, func=$104load_global.0, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None)
2021-05-27 22:37:59,238 on stmt: $110get_iter.3 = getiter(value=$108call_function.2)
2021-05-27 22:37:59,238 on stmt: $phi112.0 = $110get_iter.3
2021-05-27 22:37:59,238 on stmt: jump 112
2021-05-27 22:37:59,238 ==== SSA block rewrite pass on 112
2021-05-27 22:37:59,238 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11CB38>
2021-05-27 22:37:59,238 on stmt: time_register.2 = phi(incoming_values=[Var(time_register.1, interpn.py:67), Var(time_register, interpn.py:13)], incoming_blocks=[466, 100])
2021-05-27 22:37:59,238 on stmt: $112for_iter.1 = iternext(value=$phi112.0)
2021-05-27 22:37:59,238 on stmt: $112for_iter.2 = pair_first(value=$112for_iter.1)
2021-05-27 22:37:59,238 on stmt: $112for_iter.3 = pair_second(value=$112for_iter.1)
2021-05-27 22:37:59,238 on stmt: $phi116.1 = $112for_iter.2
2021-05-27 22:37:59,238 on stmt: branch $112for_iter.3, 116, 476
2021-05-27 22:37:59,238 ==== SSA block rewrite pass on 116
2021-05-27 22:37:59,238 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11CB38>
2021-05-27 22:37:59,238 on stmt: t = $phi116.1
2021-05-27 22:37:59,238 on stmt: $118load_global.2 = global(int: <class 'int'>)
2021-05-27 22:37:59,238 on stmt: n.1 = call $118load_global.2(time_register.2, func=$118load_global.2, args=[Var(time_register.2, interpn.py:27)], kws=(), vararg=None)
2021-05-27 22:37:59,238 on stmt: $132binary_subtract.8 = time_register.2 - n.1
2021-05-27 22:37:59,238 on stmt: frac = scale * $132binary_subtract.8
2021-05-27 22:37:59,238 on stmt: index_frac.1 = frac * num_table
2021-05-27 22:37:59,238 on stmt: $146load_global.13 = global(int: <class 'int'>)
2021-05-27 22:37:59,238 on stmt: offset.1 = call $146load_global.13(index_frac.1, func=$146load_global.13, args=[Var(index_frac.1, interpn.py:35)], kws=(), vararg=None)
2021-05-27 22:37:59,238 on stmt: eta.1 = index_frac.1 - offset.1
2021-05-27 22:37:59,238 on stmt: $162load_global.19 = global(min: <built-in function min>)
2021-05-27 22:37:59,238 on stmt: $const166.21 = const(int, 1)
2021-05-27 22:37:59,238 on stmt: $168binary_add.22 = n.1 + $const166.21
2021-05-27 22:37:59,238 on stmt: $174binary_subtract.25 = nwin - offset.1
2021-05-27 22:37:59,238 on stmt: $178binary_floor_divide.27 = $174binary_subtract.25 // index_step
2021-05-27 22:37:59,238 on stmt: i_max = call $162load_global.19($168binary_add.22, $178binary_floor_divide.27, func=$162load_global.19, args=[Var($168binary_add.22, interpn.py:42), Var($178binary_floor_divide.27, interpn.py:42)], kws=(), vararg=None)
2021-05-27 22:37:59,238 on stmt: jump 184
2021-05-27 22:37:59,238 ==== SSA block rewrite pass on 184
2021-05-27 22:37:59,238 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11CB38>
2021-05-27 22:37:59,238 on stmt: $186load_global.1 = global(range: <class 'range'>)
2021-05-27 22:37:59,238 on stmt: $190call_function.3 = call $186load_global.1(i_max, func=$186load_global.1, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None)
2021-05-27 22:37:59,238 on stmt: $192get_iter.4 = getiter(value=$190call_function.3)
2021-05-27 22:37:59,238 on stmt: $phi194.1 = $192get_iter.4
2021-05-27 22:37:59,238 on stmt: jump 194
2021-05-27 22:37:59,238 ==== SSA block rewrite pass on 194
2021-05-27 22:37:59,238 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11CB38>
2021-05-27 22:37:59,238 on stmt: $194for_iter.2 = iternext(value=$phi194.1)
2021-05-27 22:37:59,238 on stmt: $194for_iter.3 = pair_first(value=$194for_iter.2)
2021-05-27 22:37:59,238 on stmt: $194for_iter.4 = pair_second(value=$194for_iter.2)
2021-05-27 22:37:59,238 on stmt: $phi196.2 = $194for_iter.3
2021-05-27 22:37:59,238 on stmt: branch $194for_iter.4, 196, 290
2021-05-27 22:37:59,238 ==== SSA block rewrite pass on 196
2021-05-27 22:37:59,238 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11CB38>
2021-05-27 22:37:59,238 on stmt: i = $phi196.2
2021-05-27 22:37:59,238 on stmt: $206binary_multiply.7 = i * index_step
2021-05-27 22:37:59,238 on stmt: $208binary_add.8 = offset.1 + $206binary_multiply.7
2021-05-27 22:37:59,238 on stmt: $210binary_subscr.9 = getitem(value=interp_win, index=$208binary_add.8, fn=<built-in function getitem>)
2021-05-27 22:37:59,238 on stmt: $222binary_multiply.15 = i * index_step
2021-05-27 22:37:59,238 on stmt: $224binary_add.16 = offset.1 + $222binary_multiply.15
2021-05-27 22:37:59,238 on stmt: $226binary_subscr.17 = getitem(value=interp_delta, index=$224binary_add.16, fn=<built-in function getitem>)
2021-05-27 22:37:59,238 on stmt: $228binary_multiply.18 = eta * $226binary_subscr.17
2021-05-27 22:37:59,238 find_def var='eta' stmt=$228binary_multiply.18 = eta * $226binary_subscr.17
2021-05-27 22:37:59,238 find_def_from_top label 196
2021-05-27 22:37:59,238 idom 194 from label 196
2021-05-27 22:37:59,238 find_def_from_bottom label 194
2021-05-27 22:37:59,238 find_def_from_top label 194
2021-05-27 22:37:59,238 idom 184 from label 194
2021-05-27 22:37:59,238 find_def_from_bottom label 184
2021-05-27 22:37:59,238 find_def_from_top label 184
2021-05-27 22:37:59,238 idom 116 from label 184
2021-05-27 22:37:59,238 find_def_from_bottom label 116
2021-05-27 22:37:59,238 replaced with: $228binary_multiply.18 = eta.1 * $226binary_subscr.17
2021-05-27 22:37:59,238 on stmt: weight.1 = $210binary_subscr.9 + $228binary_multiply.18
2021-05-27 22:37:59,238 on stmt: jump 234
2021-05-27 22:37:59,238 ==== SSA block rewrite pass on 234
2021-05-27 22:37:59,238 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11CB38>
2021-05-27 22:37:59,238 on stmt: $236load_global.2 = global(range: <class 'range'>)
2021-05-27 22:37:59,238 on stmt: $240call_function.4 = call $236load_global.2(n_channels, func=$236load_global.2, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-27 22:37:59,238 on stmt: $242get_iter.5 = getiter(value=$240call_function.4)
2021-05-27 22:37:59,238 on stmt: $phi244.2 = $242get_iter.5
2021-05-27 22:37:59,238 on stmt: jump 244
2021-05-27 22:37:59,238 ==== SSA block rewrite pass on 244
2021-05-27 22:37:59,238 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11CB38>
2021-05-27 22:37:59,238 on stmt: $244for_iter.3 = iternext(value=$phi244.2)
2021-05-27 22:37:59,238 on stmt: $244for_iter.4 = pair_first(value=$244for_iter.3)
2021-05-27 22:37:59,238 on stmt: $244for_iter.5 = pair_second(value=$244for_iter.3)
2021-05-27 22:37:59,238 on stmt: $phi246.3 = $244for_iter.4
2021-05-27 22:37:59,238 on stmt: branch $244for_iter.5, 246, 286
2021-05-27 22:37:59,238 ==== SSA block rewrite pass on 246
2021-05-27 22:37:59,238 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11CB38>
2021-05-27 22:37:59,238 on stmt: j = $phi246.3
2021-05-27 22:37:59,238 on stmt: $254build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-27 22:37:59,238 on stmt: $258binary_subscr.10 = getitem(value=y, index=$254build_tuple.7, fn=<built-in function getitem>)
2021-05-27 22:37:59,238 on stmt: $268binary_subtract.15 = n.1 - i
2021-05-27 22:37:59,238 on stmt: $272build_tuple.17 = build_tuple(items=[Var($268binary_subtract.15, interpn.py:47), Var(j, interpn.py:46)])
2021-05-27 22:37:59,238 on stmt: $274binary_subscr.18 = getitem(value=x, index=$272build_tuple.17, fn=<built-in function getitem>)
2021-05-27 22:37:59,238 on stmt: $276binary_multiply.19 = weight.1 * $274binary_subscr.18
2021-05-27 22:37:59,238 on stmt: $278inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$258binary_subscr.10, rhs=$276binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
2021-05-27 22:37:59,238 on stmt: y[$254build_tuple.7] = $278inplace_add.20
2021-05-27 22:37:59,238 on stmt: jump 244
2021-05-27 22:37:59,238 ==== SSA block rewrite pass on 286
2021-05-27 22:37:59,238 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11CB38>
2021-05-27 22:37:59,238 on stmt: jump 288
2021-05-27 22:37:59,238 ==== SSA block rewrite pass on 288
2021-05-27 22:37:59,238 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11CB38>
2021-05-27 22:37:59,238 on stmt: jump 194
2021-05-27 22:37:59,238 ==== SSA block rewrite pass on 290
2021-05-27 22:37:59,238 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11CB38>
2021-05-27 22:37:59,238 on stmt: jump 292
2021-05-27 22:37:59,238 ==== SSA block rewrite pass on 292
2021-05-27 22:37:59,238 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11CB38>
2021-05-27 22:37:59,238 on stmt: $296binary_subtract.3 = scale - frac
2021-05-27 22:37:59,238 on stmt: frac = $296binary_subtract.3
2021-05-27 22:37:59,238 on stmt: index_frac.2 = frac * num_table
2021-05-27 22:37:59,238 on stmt: $308load_global.7 = global(int: <class 'int'>)
2021-05-27 22:37:59,238 on stmt: offset.2 = call $308load_global.7(index_frac.2, func=$308load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None)
2021-05-27 22:37:59,238 on stmt: eta.2 = index_frac.2 - offset.2
2021-05-27 22:37:59,238 on stmt: $324load_global.13 = global(min: <built-in function min>)
2021-05-27 22:37:59,238 on stmt: $330binary_subtract.16 = n_orig - n.1
2021-05-27 22:37:59,238 on stmt: $const332.17 = const(int, 1)
2021-05-27 22:37:59,238 on stmt: $334binary_subtract.18 = $330binary_subtract.16 - $const332.17
2021-05-27 22:37:59,238 on stmt: $340binary_subtract.21 = nwin - offset.2
2021-05-27 22:37:59,238 on stmt: $344binary_floor_divide.23 = $340binary_subtract.21 // index_step
2021-05-27 22:37:59,238 on stmt: k_max = call $324load_global.13($334binary_subtract.18, $344binary_floor_divide.23, func=$324load_global.13, args=[Var($334binary_subtract.18, interpn.py:60), Var($344binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None)
2021-05-27 22:37:59,238 on stmt: jump 350
2021-05-27 22:37:59,238 ==== SSA block rewrite pass on 350
2021-05-27 22:37:59,238 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11CB38>
2021-05-27 22:37:59,238 on stmt: $352load_global.1 = global(range: <class 'range'>)
2021-05-27 22:37:59,238 on stmt: $356call_function.3 = call $352load_global.1(k_max, func=$352load_global.1, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None)
2021-05-27 22:37:59,238 on stmt: $358get_iter.4 = getiter(value=$356call_function.3)
2021-05-27 22:37:59,238 on stmt: $phi360.1 = $358get_iter.4
2021-05-27 22:37:59,238 on stmt: jump 360
2021-05-27 22:37:59,238 ==== SSA block rewrite pass on 360
2021-05-27 22:37:59,238 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11CB38>
2021-05-27 22:37:59,238 on stmt: $360for_iter.2 = iternext(value=$phi360.1)
2021-05-27 22:37:59,238 on stmt: $360for_iter.3 = pair_first(value=$360for_iter.2)
2021-05-27 22:37:59,238 on stmt: $360for_iter.4 = pair_second(value=$360for_iter.2)
2021-05-27 22:37:59,238 on stmt: $phi362.2 = $360for_iter.3
2021-05-27 22:37:59,238 on stmt: branch $360for_iter.4, 362, 464
2021-05-27 22:37:59,238 ==== SSA block rewrite pass on 362
2021-05-27 22:37:59,238 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11CB38>
2021-05-27 22:37:59,238 on stmt: k = $phi362.2
2021-05-27 22:37:59,238 on stmt: $372binary_multiply.7 = k * index_step
2021-05-27 22:37:59,238 on stmt: $374binary_add.8 = offset.2 + $372binary_multiply.7
2021-05-27 22:37:59,238 on stmt: $376binary_subscr.9 = getitem(value=interp_win, index=$374binary_add.8, fn=<built-in function getitem>)
2021-05-27 22:37:59,238 on stmt: $388binary_multiply.15 = k * index_step
2021-05-27 22:37:59,238 on stmt: $390binary_add.16 = offset.2 + $388binary_multiply.15
2021-05-27 22:37:59,238 on stmt: $392binary_subscr.17 = getitem(value=interp_delta, index=$390binary_add.16, fn=<built-in function getitem>)
2021-05-27 22:37:59,238 on stmt: $394binary_multiply.18 = eta * $392binary_subscr.17
2021-05-27 22:37:59,238 find_def var='eta' stmt=$394binary_multiply.18 = eta * $392binary_subscr.17
2021-05-27 22:37:59,238 find_def_from_top label 362
2021-05-27 22:37:59,238 idom 360 from label 362
2021-05-27 22:37:59,238 find_def_from_bottom label 360
2021-05-27 22:37:59,238 find_def_from_top label 360
2021-05-27 22:37:59,238 idom 350 from label 360
2021-05-27 22:37:59,238 find_def_from_bottom label 350
2021-05-27 22:37:59,238 find_def_from_top label 350
2021-05-27 22:37:59,238 idom 292 from label 350
2021-05-27 22:37:59,238 find_def_from_bottom label 292
2021-05-27 22:37:59,238 replaced with: $394binary_multiply.18 = eta.2 * $392binary_subscr.17
2021-05-27 22:37:59,238 on stmt: weight.2 = $376binary_subscr.9 + $394binary_multiply.18
2021-05-27 22:37:59,238 on stmt: jump 400
2021-05-27 22:37:59,238 ==== SSA block rewrite pass on 400
2021-05-27 22:37:59,238 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11CB38>
2021-05-27 22:37:59,238 on stmt: $402load_global.2 = global(range: <class 'range'>)
2021-05-27 22:37:59,238 on stmt: $406call_function.4 = call $402load_global.2(n_channels, func=$402load_global.2, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-27 22:37:59,238 on stmt: $408get_iter.5 = getiter(value=$406call_function.4)
2021-05-27 22:37:59,238 on stmt: $phi410.2 = $408get_iter.5
2021-05-27 22:37:59,238 on stmt: jump 410
2021-05-27 22:37:59,238 ==== SSA block rewrite pass on 410
2021-05-27 22:37:59,238 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11CB38>
2021-05-27 22:37:59,238 on stmt: $410for_iter.3 = iternext(value=$phi410.2)
2021-05-27 22:37:59,238 on stmt: $410for_iter.4 = pair_first(value=$410for_iter.3)
2021-05-27 22:37:59,238 on stmt: $410for_iter.5 = pair_second(value=$410for_iter.3)
2021-05-27 22:37:59,238 on stmt: $phi412.3 = $410for_iter.4
2021-05-27 22:37:59,238 on stmt: branch $410for_iter.5, 412, 458
2021-05-27 22:37:59,238 ==== SSA block rewrite pass on 412
2021-05-27 22:37:59,254 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11CB38>
2021-05-27 22:37:59,254 on stmt: j.1 = $phi412.3
2021-05-27 22:37:59,254 on stmt: $420build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j.1, interpn.py:63)])
2021-05-27 22:37:59,254 on stmt: $424binary_subscr.10 = getitem(value=y, index=$420build_tuple.7, fn=<built-in function getitem>)
2021-05-27 22:37:59,254 on stmt: $434binary_add.15 = n.1 + k
2021-05-27 22:37:59,254 on stmt: $const436.16 = const(int, 1)
2021-05-27 22:37:59,254 on stmt: $438binary_add.17 = $434binary_add.15 + $const436.16
2021-05-27 22:37:59,254 on stmt: $442build_tuple.19 = build_tuple(items=[Var($438binary_add.17, interpn.py:64), Var(j.1, interpn.py:63)])
2021-05-27 22:37:59,254 on stmt: $444binary_subscr.20 = getitem(value=x, index=$442build_tuple.19, fn=<built-in function getitem>)
2021-05-27 22:37:59,254 on stmt: $446binary_multiply.21 = weight.2 * $444binary_subscr.20
2021-05-27 22:37:59,254 on stmt: $448inplace_add.22 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$424binary_subscr.10, rhs=$446binary_multiply.21, static_lhs=Undefined, static_rhs=Undefined)
2021-05-27 22:37:59,254 on stmt: y[$420build_tuple.7] = $448inplace_add.22
2021-05-27 22:37:59,254 on stmt: jump 410
2021-05-27 22:37:59,254 ==== SSA block rewrite pass on 458
2021-05-27 22:37:59,254 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11CB38>
2021-05-27 22:37:59,254 on stmt: jump 460
2021-05-27 22:37:59,254 ==== SSA block rewrite pass on 460
2021-05-27 22:37:59,254 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11CB38>
2021-05-27 22:37:59,254 on stmt: jump 360
2021-05-27 22:37:59,254 ==== SSA block rewrite pass on 464
2021-05-27 22:37:59,254 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11CB38>
2021-05-27 22:37:59,254 on stmt: jump 466
2021-05-27 22:37:59,254 ==== SSA block rewrite pass on 466
2021-05-27 22:37:59,254 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11CB38>
2021-05-27 22:37:59,254 on stmt: $470inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register.2, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
2021-05-27 22:37:59,254 on stmt: time_register.1 = $470inplace_add.3
2021-05-27 22:37:59,254 on stmt: jump 112
2021-05-27 22:37:59,254 ==== SSA block rewrite pass on 476
2021-05-27 22:37:59,254 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11CB38>
2021-05-27 22:37:59,254 on stmt: jump 478
2021-05-27 22:37:59,254 ==== SSA block rewrite pass on 478
2021-05-27 22:37:59,254 Running <numba.core.ssa._FixSSAVars object at 0x000000000E11CB38>
2021-05-27 22:37:59,254 on stmt: $const478.0 = const(NoneType, None)
2021-05-27 22:37:59,254 on stmt: $480return_value.1 = cast(value=$const478.0)
2021-05-27 22:37:59,254 on stmt: return $480return_value.1
2021-05-27 22:37:59,254 Fix SSA violator on var frac
2021-05-27 22:37:59,254 ==== SSA block rewrite pass on 0
2021-05-27 22:37:59,254 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E077860>
2021-05-27 22:37:59,254 on stmt: x = arg(0, name=x)
2021-05-27 22:37:59,254 on stmt: y = arg(1, name=y)
2021-05-27 22:37:59,254 on stmt: sample_ratio = arg(2, name=sample_ratio)
2021-05-27 22:37:59,254 on stmt: interp_win = arg(3, name=interp_win)
2021-05-27 22:37:59,254 on stmt: interp_delta = arg(4, name=interp_delta)
2021-05-27 22:37:59,254 on stmt: num_table = arg(5, name=num_table)
2021-05-27 22:37:59,254 on stmt: $2load_global.0 = global(min: <built-in function min>)
2021-05-27 22:37:59,254 on stmt: $const4.1 = const(float, 1.0)
2021-05-27 22:37:59,254 on stmt: scale = call $2load_global.0($const4.1, sample_ratio, func=$2load_global.0, args=[Var($const4.1, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None)
2021-05-27 22:37:59,254 on stmt: $const12.4 = const(float, 1.0)
2021-05-27 22:37:59,254 on stmt: time_increment = $const12.4 / sample_ratio
2021-05-27 22:37:59,254 on stmt: $20load_global.7 = global(int: <class 'int'>)
2021-05-27 22:37:59,254 on stmt: $26binary_multiply.10 = scale * num_table
2021-05-27 22:37:59,254 on stmt: index_step = call $20load_global.7($26binary_multiply.10, func=$20load_global.7, args=[Var($26binary_multiply.10, interpn.py:12)], kws=(), vararg=None)
2021-05-27 22:37:59,254 on stmt: time_register = const(float, 0.0)
2021-05-27 22:37:59,254 on stmt: n = const(int, 0)
2021-05-27 22:37:59,254 on stmt: frac = const(float, 0.0)
2021-05-27 22:37:59,254 first assign: frac
2021-05-27 22:37:59,254 replaced with: frac = const(float, 0.0)
2021-05-27 22:37:59,254 on stmt: index_frac = const(float, 0.0)
2021-05-27 22:37:59,254 on stmt: offset = const(int, 0)
2021-05-27 22:37:59,254 on stmt: eta = const(float, 0.0)
2021-05-27 22:37:59,254 on stmt: weight = const(float, 0.0)
2021-05-27 22:37:59,254 on stmt: $62load_attr.20 = getattr(value=interp_win, attr=shape)
2021-05-27 22:37:59,254 on stmt: $const64.21 = const(int, 0)
2021-05-27 22:37:59,254 on stmt: nwin = static_getitem(value=$62load_attr.20, index=0, index_var=$const64.21, fn=<built-in function getitem>)
2021-05-27 22:37:59,254 on stmt: $72load_attr.24 = getattr(value=x, attr=shape)
2021-05-27 22:37:59,254 on stmt: $const74.25 = const(int, 0)
2021-05-27 22:37:59,254 on stmt: n_orig = static_getitem(value=$72load_attr.24, index=0, index_var=$const74.25, fn=<built-in function getitem>)
2021-05-27 22:37:59,254 on stmt: $82load_attr.28 = getattr(value=y, attr=shape)
2021-05-27 22:37:59,254 on stmt: $const84.29 = const(int, 0)
2021-05-27 22:37:59,254 on stmt: n_out = static_getitem(value=$82load_attr.28, index=0, index_var=$const84.29, fn=<built-in function getitem>)
2021-05-27 22:37:59,254 on stmt: $92load_attr.32 = getattr(value=y, attr=shape)
2021-05-27 22:37:59,254 on stmt: $const94.33 = const(int, 1)
2021-05-27 22:37:59,254 on stmt: n_channels = static_getitem(value=$92load_attr.32, index=1, index_var=$const94.33, fn=<built-in function getitem>)
2021-05-27 22:37:59,254 on stmt: jump 100
2021-05-27 22:37:59,254 ==== SSA block rewrite pass on 100
2021-05-27 22:37:59,254 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E077860>
2021-05-27 22:37:59,254 on stmt: $104load_global.0 = global(range: <class 'range'>)
2021-05-27 22:37:59,254 on stmt: $108call_function.2 = call $104load_global.0(n_out, func=$104load_global.0, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None)
2021-05-27 22:37:59,254 on stmt: $110get_iter.3 = getiter(value=$108call_function.2)
2021-05-27 22:37:59,254 on stmt: $phi112.0 = $110get_iter.3
2021-05-27 22:37:59,254 on stmt: jump 112
2021-05-27 22:37:59,254 ==== SSA block rewrite pass on 112
2021-05-27 22:37:59,254 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E077860>
2021-05-27 22:37:59,254 on stmt: time_register.2 = phi(incoming_values=[Var(time_register.1, interpn.py:67), Var(time_register, interpn.py:13)], incoming_blocks=[466, 100])
2021-05-27 22:37:59,254 on stmt: $112for_iter.1 = iternext(value=$phi112.0)
2021-05-27 22:37:59,254 on stmt: $112for_iter.2 = pair_first(value=$112for_iter.1)
2021-05-27 22:37:59,254 on stmt: $112for_iter.3 = pair_second(value=$112for_iter.1)
2021-05-27 22:37:59,254 on stmt: $phi116.1 = $112for_iter.2
2021-05-27 22:37:59,254 on stmt: branch $112for_iter.3, 116, 476
2021-05-27 22:37:59,254 ==== SSA block rewrite pass on 116
2021-05-27 22:37:59,254 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E077860>
2021-05-27 22:37:59,254 on stmt: t = $phi116.1
2021-05-27 22:37:59,254 on stmt: $118load_global.2 = global(int: <class 'int'>)
2021-05-27 22:37:59,254 on stmt: n.1 = call $118load_global.2(time_register.2, func=$118load_global.2, args=[Var(time_register.2, interpn.py:27)], kws=(), vararg=None)
2021-05-27 22:37:59,254 on stmt: $132binary_subtract.8 = time_register.2 - n.1
2021-05-27 22:37:59,254 on stmt: frac = scale * $132binary_subtract.8
2021-05-27 22:37:59,254 replaced with: frac.1 = scale * $132binary_subtract.8
2021-05-27 22:37:59,254 on stmt: index_frac.1 = frac * num_table
2021-05-27 22:37:59,254 on stmt: $146load_global.13 = global(int: <class 'int'>)
2021-05-27 22:37:59,254 on stmt: offset.1 = call $146load_global.13(index_frac.1, func=$146load_global.13, args=[Var(index_frac.1, interpn.py:35)], kws=(), vararg=None)
2021-05-27 22:37:59,254 on stmt: eta.1 = index_frac.1 - offset.1
2021-05-27 22:37:59,254 on stmt: $162load_global.19 = global(min: <built-in function min>)
2021-05-27 22:37:59,254 on stmt: $const166.21 = const(int, 1)
2021-05-27 22:37:59,254 on stmt: $168binary_add.22 = n.1 + $const166.21
2021-05-27 22:37:59,254 on stmt: $174binary_subtract.25 = nwin - offset.1
2021-05-27 22:37:59,254 on stmt: $178binary_floor_divide.27 = $174binary_subtract.25 // index_step
2021-05-27 22:37:59,254 on stmt: i_max = call $162load_global.19($168binary_add.22, $178binary_floor_divide.27, func=$162load_global.19, args=[Var($168binary_add.22, interpn.py:42), Var($178binary_floor_divide.27, interpn.py:42)], kws=(), vararg=None)
2021-05-27 22:37:59,254 on stmt: jump 184
2021-05-27 22:37:59,254 ==== SSA block rewrite pass on 184
2021-05-27 22:37:59,254 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E077860>
2021-05-27 22:37:59,254 on stmt: $186load_global.1 = global(range: <class 'range'>)
2021-05-27 22:37:59,254 on stmt: $190call_function.3 = call $186load_global.1(i_max, func=$186load_global.1, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None)
2021-05-27 22:37:59,254 on stmt: $192get_iter.4 = getiter(value=$190call_function.3)
2021-05-27 22:37:59,254 on stmt: $phi194.1 = $192get_iter.4
2021-05-27 22:37:59,254 on stmt: jump 194
2021-05-27 22:37:59,254 ==== SSA block rewrite pass on 194
2021-05-27 22:37:59,254 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E077860>
2021-05-27 22:37:59,254 on stmt: $194for_iter.2 = iternext(value=$phi194.1)
2021-05-27 22:37:59,254 on stmt: $194for_iter.3 = pair_first(value=$194for_iter.2)
2021-05-27 22:37:59,254 on stmt: $194for_iter.4 = pair_second(value=$194for_iter.2)
2021-05-27 22:37:59,254 on stmt: $phi196.2 = $194for_iter.3
2021-05-27 22:37:59,254 on stmt: branch $194for_iter.4, 196, 290
2021-05-27 22:37:59,254 ==== SSA block rewrite pass on 196
2021-05-27 22:37:59,254 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E077860>
2021-05-27 22:37:59,254 on stmt: i = $phi196.2
2021-05-27 22:37:59,254 on stmt: $206binary_multiply.7 = i * index_step
2021-05-27 22:37:59,254 on stmt: $208binary_add.8 = offset.1 + $206binary_multiply.7
2021-05-27 22:37:59,254 on stmt: $210binary_subscr.9 = getitem(value=interp_win, index=$208binary_add.8, fn=<built-in function getitem>)
2021-05-27 22:37:59,254 on stmt: $222binary_multiply.15 = i * index_step
2021-05-27 22:37:59,254 on stmt: $224binary_add.16 = offset.1 + $222binary_multiply.15
2021-05-27 22:37:59,254 on stmt: $226binary_subscr.17 = getitem(value=interp_delta, index=$224binary_add.16, fn=<built-in function getitem>)
2021-05-27 22:37:59,254 on stmt: $228binary_multiply.18 = eta.1 * $226binary_subscr.17
2021-05-27 22:37:59,254 on stmt: weight.1 = $210binary_subscr.9 + $228binary_multiply.18
2021-05-27 22:37:59,254 on stmt: jump 234
2021-05-27 22:37:59,254 ==== SSA block rewrite pass on 234
2021-05-27 22:37:59,254 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E077860>
2021-05-27 22:37:59,254 on stmt: $236load_global.2 = global(range: <class 'range'>)
2021-05-27 22:37:59,254 on stmt: $240call_function.4 = call $236load_global.2(n_channels, func=$236load_global.2, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-27 22:37:59,254 on stmt: $242get_iter.5 = getiter(value=$240call_function.4)
2021-05-27 22:37:59,254 on stmt: $phi244.2 = $242get_iter.5
2021-05-27 22:37:59,254 on stmt: jump 244
2021-05-27 22:37:59,254 ==== SSA block rewrite pass on 244
2021-05-27 22:37:59,254 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E077860>
2021-05-27 22:37:59,254 on stmt: $244for_iter.3 = iternext(value=$phi244.2)
2021-05-27 22:37:59,254 on stmt: $244for_iter.4 = pair_first(value=$244for_iter.3)
2021-05-27 22:37:59,254 on stmt: $244for_iter.5 = pair_second(value=$244for_iter.3)
2021-05-27 22:37:59,254 on stmt: $phi246.3 = $244for_iter.4
2021-05-27 22:37:59,254 on stmt: branch $244for_iter.5, 246, 286
2021-05-27 22:37:59,254 ==== SSA block rewrite pass on 246
2021-05-27 22:37:59,254 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E077860>
2021-05-27 22:37:59,254 on stmt: j = $phi246.3
2021-05-27 22:37:59,254 on stmt: $254build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-27 22:37:59,254 on stmt: $258binary_subscr.10 = getitem(value=y, index=$254build_tuple.7, fn=<built-in function getitem>)
2021-05-27 22:37:59,254 on stmt: $268binary_subtract.15 = n.1 - i
2021-05-27 22:37:59,254 on stmt: $272build_tuple.17 = build_tuple(items=[Var($268binary_subtract.15, interpn.py:47), Var(j, interpn.py:46)])
2021-05-27 22:37:59,254 on stmt: $274binary_subscr.18 = getitem(value=x, index=$272build_tuple.17, fn=<built-in function getitem>)
2021-05-27 22:37:59,254 on stmt: $276binary_multiply.19 = weight.1 * $274binary_subscr.18
2021-05-27 22:37:59,254 on stmt: $278inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$258binary_subscr.10, rhs=$276binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
2021-05-27 22:37:59,254 on stmt: y[$254build_tuple.7] = $278inplace_add.20
2021-05-27 22:37:59,254 on stmt: jump 244
2021-05-27 22:37:59,254 ==== SSA block rewrite pass on 286
2021-05-27 22:37:59,254 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E077860>
2021-05-27 22:37:59,254 on stmt: jump 288
2021-05-27 22:37:59,254 ==== SSA block rewrite pass on 288
2021-05-27 22:37:59,254 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E077860>
2021-05-27 22:37:59,254 on stmt: jump 194
2021-05-27 22:37:59,254 ==== SSA block rewrite pass on 290
2021-05-27 22:37:59,254 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E077860>
2021-05-27 22:37:59,254 on stmt: jump 292
2021-05-27 22:37:59,254 ==== SSA block rewrite pass on 292
2021-05-27 22:37:59,254 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E077860>
2021-05-27 22:37:59,254 on stmt: $296binary_subtract.3 = scale - frac
2021-05-27 22:37:59,254 on stmt: frac = $296binary_subtract.3
2021-05-27 22:37:59,254 replaced with: frac.2 = $296binary_subtract.3
2021-05-27 22:37:59,254 on stmt: index_frac.2 = frac * num_table
2021-05-27 22:37:59,269 on stmt: $308load_global.7 = global(int: <class 'int'>)
2021-05-27 22:37:59,269 on stmt: offset.2 = call $308load_global.7(index_frac.2, func=$308load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None)
2021-05-27 22:37:59,269 on stmt: eta.2 = index_frac.2 - offset.2
2021-05-27 22:37:59,269 on stmt: $324load_global.13 = global(min: <built-in function min>)
2021-05-27 22:37:59,269 on stmt: $330binary_subtract.16 = n_orig - n.1
2021-05-27 22:37:59,269 on stmt: $const332.17 = const(int, 1)
2021-05-27 22:37:59,269 on stmt: $334binary_subtract.18 = $330binary_subtract.16 - $const332.17
2021-05-27 22:37:59,269 on stmt: $340binary_subtract.21 = nwin - offset.2
2021-05-27 22:37:59,269 on stmt: $344binary_floor_divide.23 = $340binary_subtract.21 // index_step
2021-05-27 22:37:59,269 on stmt: k_max = call $324load_global.13($334binary_subtract.18, $344binary_floor_divide.23, func=$324load_global.13, args=[Var($334binary_subtract.18, interpn.py:60), Var($344binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None)
2021-05-27 22:37:59,269 on stmt: jump 350
2021-05-27 22:37:59,269 ==== SSA block rewrite pass on 350
2021-05-27 22:37:59,269 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E077860>
2021-05-27 22:37:59,269 on stmt: $352load_global.1 = global(range: <class 'range'>)
2021-05-27 22:37:59,269 on stmt: $356call_function.3 = call $352load_global.1(k_max, func=$352load_global.1, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None)
2021-05-27 22:37:59,269 on stmt: $358get_iter.4 = getiter(value=$356call_function.3)
2021-05-27 22:37:59,269 on stmt: $phi360.1 = $358get_iter.4
2021-05-27 22:37:59,269 on stmt: jump 360
2021-05-27 22:37:59,269 ==== SSA block rewrite pass on 360
2021-05-27 22:37:59,269 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E077860>
2021-05-27 22:37:59,269 on stmt: $360for_iter.2 = iternext(value=$phi360.1)
2021-05-27 22:37:59,269 on stmt: $360for_iter.3 = pair_first(value=$360for_iter.2)
2021-05-27 22:37:59,269 on stmt: $360for_iter.4 = pair_second(value=$360for_iter.2)
2021-05-27 22:37:59,269 on stmt: $phi362.2 = $360for_iter.3
2021-05-27 22:37:59,269 on stmt: branch $360for_iter.4, 362, 464
2021-05-27 22:37:59,269 ==== SSA block rewrite pass on 362
2021-05-27 22:37:59,269 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E077860>
2021-05-27 22:37:59,269 on stmt: k = $phi362.2
2021-05-27 22:37:59,269 on stmt: $372binary_multiply.7 = k * index_step
2021-05-27 22:37:59,269 on stmt: $374binary_add.8 = offset.2 + $372binary_multiply.7
2021-05-27 22:37:59,269 on stmt: $376binary_subscr.9 = getitem(value=interp_win, index=$374binary_add.8, fn=<built-in function getitem>)
2021-05-27 22:37:59,269 on stmt: $388binary_multiply.15 = k * index_step
2021-05-27 22:37:59,269 on stmt: $390binary_add.16 = offset.2 + $388binary_multiply.15
2021-05-27 22:37:59,269 on stmt: $392binary_subscr.17 = getitem(value=interp_delta, index=$390binary_add.16, fn=<built-in function getitem>)
2021-05-27 22:37:59,269 on stmt: $394binary_multiply.18 = eta.2 * $392binary_subscr.17
2021-05-27 22:37:59,269 on stmt: weight.2 = $376binary_subscr.9 + $394binary_multiply.18
2021-05-27 22:37:59,269 on stmt: jump 400
2021-05-27 22:37:59,269 ==== SSA block rewrite pass on 400
2021-05-27 22:37:59,269 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E077860>
2021-05-27 22:37:59,269 on stmt: $402load_global.2 = global(range: <class 'range'>)
2021-05-27 22:37:59,269 on stmt: $406call_function.4 = call $402load_global.2(n_channels, func=$402load_global.2, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-27 22:37:59,269 on stmt: $408get_iter.5 = getiter(value=$406call_function.4)
2021-05-27 22:37:59,269 on stmt: $phi410.2 = $408get_iter.5
2021-05-27 22:37:59,269 on stmt: jump 410
2021-05-27 22:37:59,269 ==== SSA block rewrite pass on 410
2021-05-27 22:37:59,269 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E077860>
2021-05-27 22:37:59,269 on stmt: $410for_iter.3 = iternext(value=$phi410.2)
2021-05-27 22:37:59,269 on stmt: $410for_iter.4 = pair_first(value=$410for_iter.3)
2021-05-27 22:37:59,269 on stmt: $410for_iter.5 = pair_second(value=$410for_iter.3)
2021-05-27 22:37:59,269 on stmt: $phi412.3 = $410for_iter.4
2021-05-27 22:37:59,269 on stmt: branch $410for_iter.5, 412, 458
2021-05-27 22:37:59,269 ==== SSA block rewrite pass on 412
2021-05-27 22:37:59,269 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E077860>
2021-05-27 22:37:59,269 on stmt: j.1 = $phi412.3
2021-05-27 22:37:59,269 on stmt: $420build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j.1, interpn.py:63)])
2021-05-27 22:37:59,269 on stmt: $424binary_subscr.10 = getitem(value=y, index=$420build_tuple.7, fn=<built-in function getitem>)
2021-05-27 22:37:59,269 on stmt: $434binary_add.15 = n.1 + k
2021-05-27 22:37:59,269 on stmt: $const436.16 = const(int, 1)
2021-05-27 22:37:59,269 on stmt: $438binary_add.17 = $434binary_add.15 + $const436.16
2021-05-27 22:37:59,269 on stmt: $442build_tuple.19 = build_tuple(items=[Var($438binary_add.17, interpn.py:64), Var(j.1, interpn.py:63)])
2021-05-27 22:37:59,269 on stmt: $444binary_subscr.20 = getitem(value=x, index=$442build_tuple.19, fn=<built-in function getitem>)
2021-05-27 22:37:59,269 on stmt: $446binary_multiply.21 = weight.2 * $444binary_subscr.20
2021-05-27 22:37:59,269 on stmt: $448inplace_add.22 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$424binary_subscr.10, rhs=$446binary_multiply.21, static_lhs=Undefined, static_rhs=Undefined)
2021-05-27 22:37:59,269 on stmt: y[$420build_tuple.7] = $448inplace_add.22
2021-05-27 22:37:59,269 on stmt: jump 410
2021-05-27 22:37:59,269 ==== SSA block rewrite pass on 458
2021-05-27 22:37:59,269 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E077860>
2021-05-27 22:37:59,269 on stmt: jump 460
2021-05-27 22:37:59,269 ==== SSA block rewrite pass on 460
2021-05-27 22:37:59,269 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E077860>
2021-05-27 22:37:59,269 on stmt: jump 360
2021-05-27 22:37:59,269 ==== SSA block rewrite pass on 464
2021-05-27 22:37:59,269 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E077860>
2021-05-27 22:37:59,269 on stmt: jump 466
2021-05-27 22:37:59,269 ==== SSA block rewrite pass on 466
2021-05-27 22:37:59,269 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E077860>
2021-05-27 22:37:59,269 on stmt: $470inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register.2, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
2021-05-27 22:37:59,269 on stmt: time_register.1 = $470inplace_add.3
2021-05-27 22:37:59,269 on stmt: jump 112
2021-05-27 22:37:59,269 ==== SSA block rewrite pass on 476
2021-05-27 22:37:59,269 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E077860>
2021-05-27 22:37:59,269 on stmt: jump 478
2021-05-27 22:37:59,269 ==== SSA block rewrite pass on 478
2021-05-27 22:37:59,269 Running <numba.core.ssa._FreshVarHandler object at 0x000000000E077860>
2021-05-27 22:37:59,269 on stmt: $const478.0 = const(NoneType, None)
2021-05-27 22:37:59,269 on stmt: $480return_value.1 = cast(value=$const478.0)
2021-05-27 22:37:59,269 on stmt: return $480return_value.1
2021-05-27 22:37:59,269 Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000000000E08C940>],
             116: [<numba.core.ir.Assign object at 0x000000000E1089E8>],
             292: [<numba.core.ir.Assign object at 0x000000000E11C0B8>]})
2021-05-27 22:37:59,269 ==== SSA block rewrite pass on 0
2021-05-27 22:37:59,269 Running <numba.core.ssa._FixSSAVars object at 0x000000000E160710>
2021-05-27 22:37:59,269 on stmt: x = arg(0, name=x)
2021-05-27 22:37:59,269 on stmt: y = arg(1, name=y)
2021-05-27 22:37:59,269 on stmt: sample_ratio = arg(2, name=sample_ratio)
2021-05-27 22:37:59,269 on stmt: interp_win = arg(3, name=interp_win)
2021-05-27 22:37:59,269 on stmt: interp_delta = arg(4, name=interp_delta)
2021-05-27 22:37:59,269 on stmt: num_table = arg(5, name=num_table)
2021-05-27 22:37:59,269 on stmt: $2load_global.0 = global(min: <built-in function min>)
2021-05-27 22:37:59,269 on stmt: $const4.1 = const(float, 1.0)
2021-05-27 22:37:59,269 on stmt: scale = call $2load_global.0($const4.1, sample_ratio, func=$2load_global.0, args=[Var($const4.1, interpn.py:10), Var(sample_ratio, interpn.py:10)], kws=(), vararg=None)
2021-05-27 22:37:59,269 on stmt: $const12.4 = const(float, 1.0)
2021-05-27 22:37:59,269 on stmt: time_increment = $const12.4 / sample_ratio
2021-05-27 22:37:59,269 on stmt: $20load_global.7 = global(int: <class 'int'>)
2021-05-27 22:37:59,269 on stmt: $26binary_multiply.10 = scale * num_table
2021-05-27 22:37:59,269 on stmt: index_step = call $20load_global.7($26binary_multiply.10, func=$20load_global.7, args=[Var($26binary_multiply.10, interpn.py:12)], kws=(), vararg=None)
2021-05-27 22:37:59,269 on stmt: time_register = const(float, 0.0)
2021-05-27 22:37:59,269 on stmt: n = const(int, 0)
2021-05-27 22:37:59,269 on stmt: frac = const(float, 0.0)
2021-05-27 22:37:59,269 on stmt: index_frac = const(float, 0.0)
2021-05-27 22:37:59,269 on stmt: offset = const(int, 0)
2021-05-27 22:37:59,269 on stmt: eta = const(float, 0.0)
2021-05-27 22:37:59,269 on stmt: weight = const(float, 0.0)
2021-05-27 22:37:59,269 on stmt: $62load_attr.20 = getattr(value=interp_win, attr=shape)
2021-05-27 22:37:59,269 on stmt: $const64.21 = const(int, 0)
2021-05-27 22:37:59,269 on stmt: nwin = static_getitem(value=$62load_attr.20, index=0, index_var=$const64.21, fn=<built-in function getitem>)
2021-05-27 22:37:59,269 on stmt: $72load_attr.24 = getattr(value=x, attr=shape)
2021-05-27 22:37:59,269 on stmt: $const74.25 = const(int, 0)
2021-05-27 22:37:59,269 on stmt: n_orig = static_getitem(value=$72load_attr.24, index=0, index_var=$const74.25, fn=<built-in function getitem>)
2021-05-27 22:37:59,269 on stmt: $82load_attr.28 = getattr(value=y, attr=shape)
2021-05-27 22:37:59,269 on stmt: $const84.29 = const(int, 0)
2021-05-27 22:37:59,269 on stmt: n_out = static_getitem(value=$82load_attr.28, index=0, index_var=$const84.29, fn=<built-in function getitem>)
2021-05-27 22:37:59,269 on stmt: $92load_attr.32 = getattr(value=y, attr=shape)
2021-05-27 22:37:59,269 on stmt: $const94.33 = const(int, 1)
2021-05-27 22:37:59,269 on stmt: n_channels = static_getitem(value=$92load_attr.32, index=1, index_var=$const94.33, fn=<built-in function getitem>)
2021-05-27 22:37:59,269 on stmt: jump 100
2021-05-27 22:37:59,269 ==== SSA block rewrite pass on 100
2021-05-27 22:37:59,269 Running <numba.core.ssa._FixSSAVars object at 0x000000000E160710>
2021-05-27 22:37:59,269 on stmt: $104load_global.0 = global(range: <class 'range'>)
2021-05-27 22:37:59,269 on stmt: $108call_function.2 = call $104load_global.0(n_out, func=$104load_global.0, args=[Var(n_out, interpn.py:24)], kws=(), vararg=None)
2021-05-27 22:37:59,269 on stmt: $110get_iter.3 = getiter(value=$108call_function.2)
2021-05-27 22:37:59,269 on stmt: $phi112.0 = $110get_iter.3
2021-05-27 22:37:59,269 on stmt: jump 112
2021-05-27 22:37:59,269 ==== SSA block rewrite pass on 112
2021-05-27 22:37:59,269 Running <numba.core.ssa._FixSSAVars object at 0x000000000E160710>
2021-05-27 22:37:59,269 on stmt: time_register.2 = phi(incoming_values=[Var(time_register.1, interpn.py:67), Var(time_register, interpn.py:13)], incoming_blocks=[466, 100])
2021-05-27 22:37:59,269 on stmt: $112for_iter.1 = iternext(value=$phi112.0)
2021-05-27 22:37:59,269 on stmt: $112for_iter.2 = pair_first(value=$112for_iter.1)
2021-05-27 22:37:59,269 on stmt: $112for_iter.3 = pair_second(value=$112for_iter.1)
2021-05-27 22:37:59,269 on stmt: $phi116.1 = $112for_iter.2
2021-05-27 22:37:59,269 on stmt: branch $112for_iter.3, 116, 476
2021-05-27 22:37:59,269 ==== SSA block rewrite pass on 116
2021-05-27 22:37:59,269 Running <numba.core.ssa._FixSSAVars object at 0x000000000E160710>
2021-05-27 22:37:59,269 on stmt: t = $phi116.1
2021-05-27 22:37:59,269 on stmt: $118load_global.2 = global(int: <class 'int'>)
2021-05-27 22:37:59,269 on stmt: n.1 = call $118load_global.2(time_register.2, func=$118load_global.2, args=[Var(time_register.2, interpn.py:27)], kws=(), vararg=None)
2021-05-27 22:37:59,269 on stmt: $132binary_subtract.8 = time_register.2 - n.1
2021-05-27 22:37:59,269 on stmt: frac.1 = scale * $132binary_subtract.8
2021-05-27 22:37:59,269 on stmt: index_frac.1 = frac * num_table
2021-05-27 22:37:59,269 find_def var='frac' stmt=index_frac.1 = frac * num_table
2021-05-27 22:37:59,269 replaced with: index_frac.1 = frac.1 * num_table
2021-05-27 22:37:59,269 on stmt: $146load_global.13 = global(int: <class 'int'>)
2021-05-27 22:37:59,269 on stmt: offset.1 = call $146load_global.13(index_frac.1, func=$146load_global.13, args=[Var(index_frac.1, interpn.py:35)], kws=(), vararg=None)
2021-05-27 22:37:59,269 on stmt: eta.1 = index_frac.1 - offset.1
2021-05-27 22:37:59,269 on stmt: $162load_global.19 = global(min: <built-in function min>)
2021-05-27 22:37:59,269 on stmt: $const166.21 = const(int, 1)
2021-05-27 22:37:59,269 on stmt: $168binary_add.22 = n.1 + $const166.21
2021-05-27 22:37:59,269 on stmt: $174binary_subtract.25 = nwin - offset.1
2021-05-27 22:37:59,269 on stmt: $178binary_floor_divide.27 = $174binary_subtract.25 // index_step
2021-05-27 22:37:59,269 on stmt: i_max = call $162load_global.19($168binary_add.22, $178binary_floor_divide.27, func=$162load_global.19, args=[Var($168binary_add.22, interpn.py:42), Var($178binary_floor_divide.27, interpn.py:42)], kws=(), vararg=None)
2021-05-27 22:37:59,269 on stmt: jump 184
2021-05-27 22:37:59,269 ==== SSA block rewrite pass on 184
2021-05-27 22:37:59,269 Running <numba.core.ssa._FixSSAVars object at 0x000000000E160710>
2021-05-27 22:37:59,269 on stmt: $186load_global.1 = global(range: <class 'range'>)
2021-05-27 22:37:59,269 on stmt: $190call_function.3 = call $186load_global.1(i_max, func=$186load_global.1, args=[Var(i_max, interpn.py:42)], kws=(), vararg=None)
2021-05-27 22:37:59,269 on stmt: $192get_iter.4 = getiter(value=$190call_function.3)
2021-05-27 22:37:59,269 on stmt: $phi194.1 = $192get_iter.4
2021-05-27 22:37:59,269 on stmt: jump 194
2021-05-27 22:37:59,269 ==== SSA block rewrite pass on 194
2021-05-27 22:37:59,269 Running <numba.core.ssa._FixSSAVars object at 0x000000000E160710>
2021-05-27 22:37:59,285 on stmt: $194for_iter.2 = iternext(value=$phi194.1)
2021-05-27 22:37:59,285 on stmt: $194for_iter.3 = pair_first(value=$194for_iter.2)
2021-05-27 22:37:59,285 on stmt: $194for_iter.4 = pair_second(value=$194for_iter.2)
2021-05-27 22:37:59,285 on stmt: $phi196.2 = $194for_iter.3
2021-05-27 22:37:59,285 on stmt: branch $194for_iter.4, 196, 290
2021-05-27 22:37:59,285 ==== SSA block rewrite pass on 196
2021-05-27 22:37:59,285 Running <numba.core.ssa._FixSSAVars object at 0x000000000E160710>
2021-05-27 22:37:59,285 on stmt: i = $phi196.2
2021-05-27 22:37:59,285 on stmt: $206binary_multiply.7 = i * index_step
2021-05-27 22:37:59,285 on stmt: $208binary_add.8 = offset.1 + $206binary_multiply.7
2021-05-27 22:37:59,285 on stmt: $210binary_subscr.9 = getitem(value=interp_win, index=$208binary_add.8, fn=<built-in function getitem>)
2021-05-27 22:37:59,285 on stmt: $222binary_multiply.15 = i * index_step
2021-05-27 22:37:59,285 on stmt: $224binary_add.16 = offset.1 + $222binary_multiply.15
2021-05-27 22:37:59,285 on stmt: $226binary_subscr.17 = getitem(value=interp_delta, index=$224binary_add.16, fn=<built-in function getitem>)
2021-05-27 22:37:59,285 on stmt: $228binary_multiply.18 = eta.1 * $226binary_subscr.17
2021-05-27 22:37:59,285 on stmt: weight.1 = $210binary_subscr.9 + $228binary_multiply.18
2021-05-27 22:37:59,285 on stmt: jump 234
2021-05-27 22:37:59,285 ==== SSA block rewrite pass on 234
2021-05-27 22:37:59,285 Running <numba.core.ssa._FixSSAVars object at 0x000000000E160710>
2021-05-27 22:37:59,285 on stmt: $236load_global.2 = global(range: <class 'range'>)
2021-05-27 22:37:59,285 on stmt: $240call_function.4 = call $236load_global.2(n_channels, func=$236load_global.2, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-27 22:37:59,285 on stmt: $242get_iter.5 = getiter(value=$240call_function.4)
2021-05-27 22:37:59,285 on stmt: $phi244.2 = $242get_iter.5
2021-05-27 22:37:59,285 on stmt: jump 244
2021-05-27 22:37:59,285 ==== SSA block rewrite pass on 244
2021-05-27 22:37:59,285 Running <numba.core.ssa._FixSSAVars object at 0x000000000E160710>
2021-05-27 22:37:59,285 on stmt: $244for_iter.3 = iternext(value=$phi244.2)
2021-05-27 22:37:59,285 on stmt: $244for_iter.4 = pair_first(value=$244for_iter.3)
2021-05-27 22:37:59,285 on stmt: $244for_iter.5 = pair_second(value=$244for_iter.3)
2021-05-27 22:37:59,285 on stmt: $phi246.3 = $244for_iter.4
2021-05-27 22:37:59,285 on stmt: branch $244for_iter.5, 246, 286
2021-05-27 22:37:59,285 ==== SSA block rewrite pass on 246
2021-05-27 22:37:59,285 Running <numba.core.ssa._FixSSAVars object at 0x000000000E160710>
2021-05-27 22:37:59,285 on stmt: j = $phi246.3
2021-05-27 22:37:59,285 on stmt: $254build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j, interpn.py:46)])
2021-05-27 22:37:59,285 on stmt: $258binary_subscr.10 = getitem(value=y, index=$254build_tuple.7, fn=<built-in function getitem>)
2021-05-27 22:37:59,285 on stmt: $268binary_subtract.15 = n.1 - i
2021-05-27 22:37:59,285 on stmt: $272build_tuple.17 = build_tuple(items=[Var($268binary_subtract.15, interpn.py:47), Var(j, interpn.py:46)])
2021-05-27 22:37:59,285 on stmt: $274binary_subscr.18 = getitem(value=x, index=$272build_tuple.17, fn=<built-in function getitem>)
2021-05-27 22:37:59,285 on stmt: $276binary_multiply.19 = weight.1 * $274binary_subscr.18
2021-05-27 22:37:59,285 on stmt: $278inplace_add.20 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$258binary_subscr.10, rhs=$276binary_multiply.19, static_lhs=Undefined, static_rhs=Undefined)
2021-05-27 22:37:59,285 on stmt: y[$254build_tuple.7] = $278inplace_add.20
2021-05-27 22:37:59,285 on stmt: jump 244
2021-05-27 22:37:59,285 ==== SSA block rewrite pass on 286
2021-05-27 22:37:59,285 Running <numba.core.ssa._FixSSAVars object at 0x000000000E160710>
2021-05-27 22:37:59,285 on stmt: jump 288
2021-05-27 22:37:59,285 ==== SSA block rewrite pass on 288
2021-05-27 22:37:59,285 Running <numba.core.ssa._FixSSAVars object at 0x000000000E160710>
2021-05-27 22:37:59,285 on stmt: jump 194
2021-05-27 22:37:59,285 ==== SSA block rewrite pass on 290
2021-05-27 22:37:59,285 Running <numba.core.ssa._FixSSAVars object at 0x000000000E160710>
2021-05-27 22:37:59,285 on stmt: jump 292
2021-05-27 22:37:59,285 ==== SSA block rewrite pass on 292
2021-05-27 22:37:59,285 Running <numba.core.ssa._FixSSAVars object at 0x000000000E160710>
2021-05-27 22:37:59,285 on stmt: $296binary_subtract.3 = scale - frac
2021-05-27 22:37:59,285 find_def var='frac' stmt=$296binary_subtract.3 = scale - frac
2021-05-27 22:37:59,285 find_def_from_top label 292
2021-05-27 22:37:59,285 idom 290 from label 292
2021-05-27 22:37:59,285 find_def_from_bottom label 290
2021-05-27 22:37:59,285 find_def_from_top label 290
2021-05-27 22:37:59,285 idom 194 from label 290
2021-05-27 22:37:59,285 find_def_from_bottom label 194
2021-05-27 22:37:59,285 find_def_from_top label 194
2021-05-27 22:37:59,285 idom 184 from label 194
2021-05-27 22:37:59,285 find_def_from_bottom label 184
2021-05-27 22:37:59,285 find_def_from_top label 184
2021-05-27 22:37:59,285 idom 116 from label 184
2021-05-27 22:37:59,285 find_def_from_bottom label 116
2021-05-27 22:37:59,285 replaced with: $296binary_subtract.3 = scale - frac.1
2021-05-27 22:37:59,285 on stmt: frac.2 = $296binary_subtract.3
2021-05-27 22:37:59,285 on stmt: index_frac.2 = frac * num_table
2021-05-27 22:37:59,285 find_def var='frac' stmt=index_frac.2 = frac * num_table
2021-05-27 22:37:59,285 replaced with: index_frac.2 = frac.2 * num_table
2021-05-27 22:37:59,285 on stmt: $308load_global.7 = global(int: <class 'int'>)
2021-05-27 22:37:59,285 on stmt: offset.2 = call $308load_global.7(index_frac.2, func=$308load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None)
2021-05-27 22:37:59,285 on stmt: eta.2 = index_frac.2 - offset.2
2021-05-27 22:37:59,285 on stmt: $324load_global.13 = global(min: <built-in function min>)
2021-05-27 22:37:59,285 on stmt: $330binary_subtract.16 = n_orig - n.1
2021-05-27 22:37:59,285 on stmt: $const332.17 = const(int, 1)
2021-05-27 22:37:59,285 on stmt: $334binary_subtract.18 = $330binary_subtract.16 - $const332.17
2021-05-27 22:37:59,285 on stmt: $340binary_subtract.21 = nwin - offset.2
2021-05-27 22:37:59,285 on stmt: $344binary_floor_divide.23 = $340binary_subtract.21 // index_step
2021-05-27 22:37:59,285 on stmt: k_max = call $324load_global.13($334binary_subtract.18, $344binary_floor_divide.23, func=$324load_global.13, args=[Var($334binary_subtract.18, interpn.py:60), Var($344binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None)
2021-05-27 22:37:59,285 on stmt: jump 350
2021-05-27 22:37:59,285 ==== SSA block rewrite pass on 350
2021-05-27 22:37:59,285 Running <numba.core.ssa._FixSSAVars object at 0x000000000E160710>
2021-05-27 22:37:59,285 on stmt: $352load_global.1 = global(range: <class 'range'>)
2021-05-27 22:37:59,285 on stmt: $356call_function.3 = call $352load_global.1(k_max, func=$352load_global.1, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None)
2021-05-27 22:37:59,285 on stmt: $358get_iter.4 = getiter(value=$356call_function.3)
2021-05-27 22:37:59,285 on stmt: $phi360.1 = $358get_iter.4
2021-05-27 22:37:59,285 on stmt: jump 360
2021-05-27 22:37:59,285 ==== SSA block rewrite pass on 360
2021-05-27 22:37:59,285 Running <numba.core.ssa._FixSSAVars object at 0x000000000E160710>
2021-05-27 22:37:59,285 on stmt: $360for_iter.2 = iternext(value=$phi360.1)
2021-05-27 22:37:59,285 on stmt: $360for_iter.3 = pair_first(value=$360for_iter.2)
2021-05-27 22:37:59,285 on stmt: $360for_iter.4 = pair_second(value=$360for_iter.2)
2021-05-27 22:37:59,285 on stmt: $phi362.2 = $360for_iter.3
2021-05-27 22:37:59,285 on stmt: branch $360for_iter.4, 362, 464
2021-05-27 22:37:59,285 ==== SSA block rewrite pass on 362
2021-05-27 22:37:59,285 Running <numba.core.ssa._FixSSAVars object at 0x000000000E160710>
2021-05-27 22:37:59,285 on stmt: k = $phi362.2
2021-05-27 22:37:59,285 on stmt: $372binary_multiply.7 = k * index_step
2021-05-27 22:37:59,285 on stmt: $374binary_add.8 = offset.2 + $372binary_multiply.7
2021-05-27 22:37:59,285 on stmt: $376binary_subscr.9 = getitem(value=interp_win, index=$374binary_add.8, fn=<built-in function getitem>)
2021-05-27 22:37:59,285 on stmt: $388binary_multiply.15 = k * index_step
2021-05-27 22:37:59,285 on stmt: $390binary_add.16 = offset.2 + $388binary_multiply.15
2021-05-27 22:37:59,285 on stmt: $392binary_subscr.17 = getitem(value=interp_delta, index=$390binary_add.16, fn=<built-in function getitem>)
2021-05-27 22:37:59,285 on stmt: $394binary_multiply.18 = eta.2 * $392binary_subscr.17
2021-05-27 22:37:59,285 on stmt: weight.2 = $376binary_subscr.9 + $394binary_multiply.18
2021-05-27 22:37:59,285 on stmt: jump 400
2021-05-27 22:37:59,285 ==== SSA block rewrite pass on 400
2021-05-27 22:37:59,285 Running <numba.core.ssa._FixSSAVars object at 0x000000000E160710>
2021-05-27 22:37:59,285 on stmt: $402load_global.2 = global(range: <class 'range'>)
2021-05-27 22:37:59,285 on stmt: $406call_function.4 = call $402load_global.2(n_channels, func=$402load_global.2, args=[Var(n_channels, interpn.py:25)], kws=(), vararg=None)
2021-05-27 22:37:59,285 on stmt: $408get_iter.5 = getiter(value=$406call_function.4)
2021-05-27 22:37:59,285 on stmt: $phi410.2 = $408get_iter.5
2021-05-27 22:37:59,285 on stmt: jump 410
2021-05-27 22:37:59,285 ==== SSA block rewrite pass on 410
2021-05-27 22:37:59,285 Running <numba.core.ssa._FixSSAVars object at 0x000000000E160710>
2021-05-27 22:37:59,285 on stmt: $410for_iter.3 = iternext(value=$phi410.2)
2021-05-27 22:37:59,285 on stmt: $410for_iter.4 = pair_first(value=$410for_iter.3)
2021-05-27 22:37:59,285 on stmt: $410for_iter.5 = pair_second(value=$410for_iter.3)
2021-05-27 22:37:59,285 on stmt: $phi412.3 = $410for_iter.4
2021-05-27 22:37:59,285 on stmt: branch $410for_iter.5, 412, 458
2021-05-27 22:37:59,285 ==== SSA block rewrite pass on 412
2021-05-27 22:37:59,285 Running <numba.core.ssa._FixSSAVars object at 0x000000000E160710>
2021-05-27 22:37:59,285 on stmt: j.1 = $phi412.3
2021-05-27 22:37:59,285 on stmt: $420build_tuple.7 = build_tuple(items=[Var(t, interpn.py:27), Var(j.1, interpn.py:63)])
2021-05-27 22:37:59,285 on stmt: $424binary_subscr.10 = getitem(value=y, index=$420build_tuple.7, fn=<built-in function getitem>)
2021-05-27 22:37:59,285 on stmt: $434binary_add.15 = n.1 + k
2021-05-27 22:37:59,285 on stmt: $const436.16 = const(int, 1)
2021-05-27 22:37:59,285 on stmt: $438binary_add.17 = $434binary_add.15 + $const436.16
2021-05-27 22:37:59,285 on stmt: $442build_tuple.19 = build_tuple(items=[Var($438binary_add.17, interpn.py:64), Var(j.1, interpn.py:63)])
2021-05-27 22:37:59,285 on stmt: $444binary_subscr.20 = getitem(value=x, index=$442build_tuple.19, fn=<built-in function getitem>)
2021-05-27 22:37:59,285 on stmt: $446binary_multiply.21 = weight.2 * $444binary_subscr.20
2021-05-27 22:37:59,285 on stmt: $448inplace_add.22 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$424binary_subscr.10, rhs=$446binary_multiply.21, static_lhs=Undefined, static_rhs=Undefined)
2021-05-27 22:37:59,285 on stmt: y[$420build_tuple.7] = $448inplace_add.22
2021-05-27 22:37:59,285 on stmt: jump 410
2021-05-27 22:37:59,285 ==== SSA block rewrite pass on 458
2021-05-27 22:37:59,285 Running <numba.core.ssa._FixSSAVars object at 0x000000000E160710>
2021-05-27 22:37:59,285 on stmt: jump 460
2021-05-27 22:37:59,285 ==== SSA block rewrite pass on 460
2021-05-27 22:37:59,285 Running <numba.core.ssa._FixSSAVars object at 0x000000000E160710>
2021-05-27 22:37:59,285 on stmt: jump 360
2021-05-27 22:37:59,285 ==== SSA block rewrite pass on 464
2021-05-27 22:37:59,285 Running <numba.core.ssa._FixSSAVars object at 0x000000000E160710>
2021-05-27 22:37:59,285 on stmt: jump 466
2021-05-27 22:37:59,285 ==== SSA block rewrite pass on 466
2021-05-27 22:37:59,285 Running <numba.core.ssa._FixSSAVars object at 0x000000000E160710>
2021-05-27 22:37:59,285 on stmt: $470inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=time_register.2, rhs=time_increment, static_lhs=Undefined, static_rhs=Undefined)
2021-05-27 22:37:59,285 on stmt: time_register.1 = $470inplace_add.3
2021-05-27 22:37:59,285 on stmt: jump 112
2021-05-27 22:37:59,285 ==== SSA block rewrite pass on 476
2021-05-27 22:37:59,285 Running <numba.core.ssa._FixSSAVars object at 0x000000000E160710>
2021-05-27 22:37:59,285 on stmt: jump 478
2021-05-27 22:37:59,285 ==== SSA block rewrite pass on 478
2021-05-27 22:37:59,285 Running <numba.core.ssa._FixSSAVars object at 0x000000000E160710>
2021-05-27 22:37:59,285 on stmt: $const478.0 = const(NoneType, None)
2021-05-27 22:37:59,285 on stmt: $480return_value.1 = cast(value=$const478.0)
2021-05-27 22:37:59,285 on stmt: return $480return_value.1
2021-05-27 22:38:04,023 Creating Perceptual Hash for each feature
2021-05-27 22:38:04,039 Creating Perceptual Hash for each feature
2021-05-27 22:38:04,039 Creating Perceptual Hash for each feature
2021-05-27 22:38:04,039 Creating Perceptual Hash for each feature
